%!PS-Adobe-2.0
%%Creator: dvips(k) 5.85 Copyright 1999 Radical Eye Software
%%Title: TP1corrige.dvi
%%Pages: 11
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o TP1corrige.ps TP1corrige.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.06.27:1005
%%BeginProcSet: texc.pro
%!
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id
ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{
rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get
/gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp add /cp
X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add /gp X
adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{dup
255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1 adv}
B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2 idiv
S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Created 1994/6/23. Source file was pstricks.doc
% Version 0.93a, 93/03/12.
% For use with Rokicki's dvips.
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
def
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
%  Modification Denis GIROU (CNRS/IDRIS - France) <Denis.Girou@idris.fr> - 15 Jan. 1997
% /Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
% pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
% div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
% d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt { 1 setlinecap [ 0 dx n div ]
dy n div 2 div setdash } { 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Created 1994/6/7. Source file was pst-node.doc
% Version 0.93a/b-97 patch 1, 97/05/09.
% For use with Rokicki's dvips.
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - 9 May 1997
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (TP1corrige.dvi)
@start
%DVIPSBitmapFont: Fa cmsy8 8 1
/Fa 1 1 df<B812C0A32A037A9137>0 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmbx12 12 25
/Fb 25 122 df<EB07C0EB0FE0EB1FF0EB3FF8137F13FFA25A4813F05A4813C01480381F
FE00EA3FF8EA7FE0EAFF8048C7FC127C1230151369C538>19 D<EC03C01407141F147FEB
03FF133FB6FCA413C3EA0003B3B3ADB712FCA5264177C038>49 D<ECFFE0010F13FE013F
6D7E90B612E0000315F82607FC0313FE3A0FE0007FFFD81F806D138048C7000F13C04880
01C015E001F07F00FF6E13F07F17F881A46C5A6C5A6C5AC9FC17F05DA217E05D17C04B13
804B1300A2ED1FFC4B5A5E4B5A4B5A4A90C7FC4A5A4A5AEC0FF04A5AEC3F804AC7127814
FE495A494814F8D907E014F0495A495A49C8FC017C140149140348B7FC4816E05A5A5A5A
5AB8FC17C0A42D417BC038>I<EA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7EA7FFCEA3FF8EA
1FF0EA07C0C7FCAEEA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7EA7FFCEA3FF8EA1FF0EA07C0
0F2C78AB1F>58 D<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FEDFE0791B5
39E001FF0F4949C7EA3F9F010701F0EC0FFF4901C0804990C87E4948814948814948167F
4849163F4849161F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994C7FC12FF
AE127F7F1AF0A2123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE0F806C6DEE
1F006D6C5E6D6C167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D903AFFF001
FF80023F90B6C7FC020715FC020115F0DA001F1480030001F8C8FC44467AC451>67
D<B500FE067FB512806E95B6FCA26F5EA2D8003F50C7FC013D6DEE03DFA2013C6DEE079F
A26E6CEE0F1FA26E6C161EA26E6C163CA36E6C1678A26E6C16F0A26E6DEC01E0A26E6DEC
03C0A36E6DEC0780A26F6CEC0F00A26F6C141EA26F6C5CA36F6C5CA26F6C5CA26F6D485A
A26F6D485AA26F6D485AA3706C48C7FCA293383FF81EA2706C5AA2706C5AA3706C5AA270
5BA2705BA2705BA2B6057FB6128071C7FCA2173E171C61447CC36A>77
D<B812F8EFFFC018F818FE727ED8001F90C7003F13E005037F05007F727E727E727EA286
84A286A762A24E90C7FCA24E5A61187F943801FFF005075B053F138092B7C8FC18F818E0
18F892C77FEF3FFF050F7F717F717FA2717FA2717FA785A61B0F85A2187F73131F72141E
B700E06DEB803E72EBE0FC72EBFFF8060114F0726C13E0CC0007138050457DC354>82
D<13021307497E497EEB7FF0497E487F487F3807FDFF390FF07F80391FE03FC0397F800F
F039FF0007F800FC13010078EB00F0002014201D1073C438>94 D<903801FFE0011F13FE
017F6D7E48B612E03A03FE007FF84848EB1FFC6D6D7E486C6D7EA26F7FA36F7F6C5A6C5A
EA00F090C7FCA40203B5FC91B6FC1307013F13F19038FFFC01000313E0000F1380381FFE
00485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0D83FFE013EEBFFC03A1FFF80FC7F00
07EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7DAD36>97 D<EC3FFC49B512C0010F14
F0013F14FC90397FF003FE9039FFC001FF0003495A48494813805B120F485AA2485A6F13
00007F6E5AED00784991C7FCA212FFAC6C7EA3123F6DEC03C0A26C6C1407000F16806D14
0F6C6DEB1F006C6D133E6C01F05B3A007FFC03F86DB55A010F14C0010391C7FC9038003F
F82A2F7CAD32>99 D<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC010FEBFF8F01
3F14CF9039FFF807FF48EBC00148903880007F4890C7123F4848141F49140F121F485AA3
127F5BA212FFAC127FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5FC6CD9C003
14FC6C9038F01FEF6DB5128F011FEBFE0F010713F89026007FC0EBF80036467CC43E>I<
EC3FF80103B57E010F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E4848
6D1380485A001FED7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9FCA5
127FA27FA2123F17F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0EB3F
0090397FFE01FE011FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33>I<DAFFE0
137E010F9039FE03FF80013FEBFF8F90B812C048D9C07F133F489038001FF84848EB0FFC
4848903907FE1F80001F9238FF0F00496D90C7FCA2003F82A8001F93C7FCA26D5B000F5D
6C6C495A6C6C495A6C9038C07FF04890B55A1680D8078F49C8FC018013E0000F90CAFCA4
7F7F7F90B612C016FC6CEDFF8017E06C826C16FC7E000382000F82D81FF0C77ED83FC014
074848020113808248C9FC177FA46D15FF007F17006D5C6C6C4A5A6C6C4A5AD80FFEEC3F
F83B07FFC001FFF0000190B612C06C6C92C7FC010F14F8D9007F90C8FC32427DAC38>
103 D<EB7FC0B5FCA512037EB1ED07FE92383FFF8092B512E002C114F89139C7F03FFC91
38CF801F9139DF000FFE14DE14FC4A6D7E5CA25CA35CB3A7B60083B512FEA537457CC43E
>I<137C48B4FC4813804813C0A24813E0A56C13C0A26C13806C1300EA007C90C7FCAAEB
7FC0EA7FFFA512037EB3AFB6FCA518467CC520>I<EB7FC0B5FCA512037EB3B3B3A3B612
80A519457CC420>108 D<90277F8007FEEC0FFCB590263FFFC090387FFF8092B5D8F001
B512E002816E4880913D87F01FFC0FE03FF8913D8FC00FFE1F801FFC0003D99F009026FF
3E007F6C019E6D013C130F02BC5D02F86D496D7EA24A5D4A5DA34A5DB3A7B60081B60003
B512FEA5572D7CAC5E>I<90397F8007FEB590383FFF8092B512E0028114F8913987F03F
FC91388F801F000390399F000FFE6C139E14BC02F86D7E5CA25CA35CB3A7B60083B512FE
A5372D7CAC3E>I<EC1FFC49B512C0010714F0011F14FC90397FF80FFF9026FFC0017F48
496C7F4848C7EA3FE000078248486E7E49140F001F82A2003F82491407007F82A400FF17
80AA007F1700A46C6C4A5AA2001F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE06C6D485B
27007FF80F90C7FC6DB55A010F14F8010114C09026001FFCC8FC312F7DAD38>I<90397F
C00FF8B590B57E02C314E002CF14F89139DFC03FFC9139FF001FFE000301FCEB07FF6C49
6D13804A15C04A6D13E05C7013F0A2EF7FF8A4EF3FFCACEF7FF8A318F017FFA24C13E06E
15C06E5B6E4913806E4913006E495A9139DFC07FFC02CFB512F002C314C002C091C7FCED
1FF092C9FCADB67EA536407DAC3E>I<90387F807FB53881FFE0028313F0028F13F8ED8F
FC91389F1FFE000313BE6C13BC14F8A214F0ED0FFC9138E007F8ED01E092C7FCA35CB3A5
B612E0A5272D7DAC2E>114 D<90391FFC038090B51287000314FF120F381FF003383FC0
0049133F48C7121F127E00FE140FA215077EA27F01E090C7FC13FE387FFFF014FF6C14C0
15F06C14FC6C800003806C15806C7E010F14C0EB003F020313E0140000F0143FA26C141F
150FA27EA26C15C06C141FA26DEB3F8001E0EB7F009038F803FE90B55A00FC5CD8F03F13
E026E007FEC7FC232F7CAD2C>I<EB01E0A51303A41307A2130FA2131FA2133F137F13FF
1203000F90B51280B7FCA4C601E0C7FCB3A3ED01E0A9150302F013C0137F150790393FF8
0F8090391FFC1F006DB5FC6D13FC01015B9038003FE023407EBE2C>I<D97FC049B4FCB5
0103B5FCA50003EC000F6C81B3A85EA25EA25E7E6E491380017FD901F713FE9138F807E7
6DB512C7010F1407010313FE9026007FF0EBFC00372E7CAC3E>I<B6903803FFFCA50001
01E09038003E006C163C80017F5D8017F8013F5D6E1301011F5D6E1303010F5D6E13076D
5DED800F6D92C7FC15C05E6DEBE01E163E6D143CEDF07C027F1378EDF8F8023F5B15FD02
1F5B15FF6E5BA36E5BA26E90C8FCA26E5AA26E5AA21578A215F85D14015D001F1303D83F
805B387FC007D8FFE05B140F92C9FC5C143E495A387FC1F8EB07F06CB45A6C5B000790CA
FCEA01FC36407EAB3B>121 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmti12 12 27
/Fc 27 119 df<16C01501A215031507ED0F80151F153F157F913801FF005C140F147F90
3807FCFEEB0FF0EB0700EB00015DA314035DA314075DA3140F5DA3141F5DA3143F5DA314
7F92C7FCA35C5CA313015CA313035CA313075CA2130FA2131F133FB612FCA25D224276C1
32>49 D<ED3FC0913801FFF0913807C07C4AC67E021CEB1F800278130F4AEB07C0494814
E04A1303494814F0130749C7FCEB0E06D91E0714F8EB1C03133C1338137813704A1307D9
F00614F013E0140E020C130F0001011C14E0EBC0180238131F4A14C06C6C48EB3F80D9E1
C0137FD97F801400013EC712FE90C7485A4B5A4B5A4B5AED1F804BC7FC15FC4A5AEC03E0
EC0FC0023FC8FC147CEB01F0495AEB0780011FC9FC133E49EC03805B4914074848150048
5A48485C90C8121E5A001E5D001C157CD83FFC5C9038FFC0013A7C0FFC07F0D87803B55A
EA700126F0007F5B486D90C7FCEC0FFEEC03F82D4478C132>I<EF03801707A24D7EA217
1FA2173F177FA217FFA25EA2EE03BF1607173F160F160E161C841638171F167016F016E0
ED01C0A2ED0380A2ED0700A2150E151E151C5D845D170F5D14015D14035D4AC7FC92B6FC
5CA2021CC7120F143C14385CA24A81A249481407A2495A130791C8FC130E131EA25B137C
13FC00014C7ED807FE151FB500E00107B512F8A219F03D477BC648>65
D<027FB512E091B6FCA20200EBE000ED7F8015FFA293C7FCA35C5DA314035DA314075DA3
140F5DA3141F5DA3143F5DA3147F5DA314FF92C8FCA35B5CA313035CA313075CA3130F5C
A3131F5CA2133FA25CEBFFE0B612E0A25D2B447BC326>73 D<031FB512F05DA29239000F
FC005FA35FA2161FA25FA2163FA25FA2167FA25FA216FFA294C7FCA25DA25EA21503A25E
A21507A25EA2150FA25EA2151FA25EA2153FA25EA2157FA25EEA0F80D83FE013FF93C8FC
127FA24A5AEAFFC04A5A1300007C495A0070495A4A5A6C5C003C495A6C01FEC9FC380F81
F83803FFE0C690CAFC344679C333>I<021FB712F85C19F093C7121F03F0EC3FE0DA7FC0
EC7FC04BECFF80027EC813004A5C4A4A5A4D5A49484A5A4A5D4D5A4A143F01034B5A4A4A
5A4C90C7FC01075D91C712034C5A4C5A90C8485A5F163F4C5A4C5A4B90C8FC5E15034B5A
4B5A4B5A5E4B5A157F4B5A4A90C9FC4A5A5D14074A5A4A4814E04A5A5D027F14014A485C
4990C7FC494814034A5D130749481407495A49484AC7FC5C49485C01FF151E4890C8123E
4848157E484815FE494A5A000F1503484814074848EC3FF84848EB03FF90B7FCB8FC5F3D
4479C33C>90 D<EC1F80EC7FE0903901F07070903907C039F890380F801D90381F001F01
3E6D5A137E5B484813075E485A120749130F000F5DA2485A151F003F5D5BA2153F007F92
C7FC90C7FCA25D157E12FEA29238FE0380EDFC071700A2007E13015E913803F80E140700
3E010F131E161C6C131C02385B3A0F80F078783A07C3E07C703A01FF801FE03A007E0007
80292D76AB32>97 D<EB0FE0EA07FFA338001FC0130F131FA25CA3133F91C8FCA35B137E
A313FE5BA312015BEC1F80EC7FE03903F9E0F89038F3C07C9038F7003E13FE48487F5BA2
491480485AA25BA2121F5BA2153F123F90C7FCA2157F481500127EA25D5D5AA24A5AA24A
5AA2007C5C4A5A140F5D4A5A003C49C7FC003E137E001E5B6C485A380783E03803FF80C6
48C8FC214676C42D>I<EC0FE0EC7FF8903801F81E903807E00F90390F80078090381F00
03017E14C049131F0001143F5B4848EB7F801207485AED3E00484890C7FCA2485AA2127F
90C9FCA35A5AA45AA5ED0180ED03C0ED0780A2007CEC0F00007E141E003E147C15F06CEB
03E0390F800F802607C07EC7FC3801FFF838007FC0222D75AB2D>I<EE07F0ED03FFA392
38000FE01607160FA217C0A2161FA21780A2163FA21700A25EA2167EA216FEA25EEC1F80
EC7FE1903801F071903907C039F890380F801D90381F001F013E130F017E5C5B48481307
A248485C120749130F120F5E485A151F123F495CA2153F127F90C790C7FCA25DA200FE14
7EA29238FE0380160703FC1300A2007E13015E913803F80E1407003E010F131E161C6C13
1C02385B3A0F80F078783A07C3E07C703A01FF801FE03A007E0007802C4676C432>I<EC
0FE0EC7FF8903801F83E903807C00F90391F800780EB3F00017E14C0491303485A484813
07000715805B000F140F484814005D4848133E15FCEC07F0007FEBFFC0D9FFFEC7FC14C0
90C9FC5A5AA55AA4ED0180ED03C0007CEC0780A2007EEC0F00003E141E157C6C14F06CEB
03E03907800F802603C07EC7FC3801FFF838003FC0222D75AB2D>I<EE0F80EE3FE0EEF8
70923801F038923803E0F8923807E1FC16C3ED0FC7A2EE87F892381F83F0EE81E0EE8000
153F93C7FCA45D157EA415FE5DA349B512FEA390260001F8C7FCA314035DA414075DA414
0F5DA4141F5DA4143F92C8FCA55C147EA314FE5CA413015CA4495AA35C1307121C007F5B
12FF495AA291C9FC485AEAF81E485AEA7878EA1FF0EA07C02E5A83C51E>I<15FCEC03FF
91390F83838091393E01CFC091387C00EF4A13FF4948137F010315804948133F495A131F
4A1400133F91C75A5B167E13FE16FE1201495CA215011203495CA21503A2495CA21507A2
5EA2150F151F5E0001143F157F6C6C13FF913801DF8090387C039F90383E0F3FEB0FFCD9
03F090C7FC90C7FC5DA2157EA215FEA25DA2001C495A127F48495A14074A5A485C023FC8
FC00F8137E387C01F8381FFFE0000390C9FC2A407BAB2D>I<14FE137FA3EB01FC130013
01A25CA21303A25CA21307A25CA2130FA25CA2131FA25C157F90393F83FFC091388F81F0
91381E00F802387F4948137C5C4A137EA2495A91C7FCA25B484814FE5E5BA2000314015E
5BA2000714035E5B1507000F5DA249130F5E001F1678031F1370491480A2003F023F13F0
EE00E090C7FC160148023E13C01603007E1680EE070000FEEC1E0FED1F1E48EC0FF80038
EC03E02D467AC432>I<143C147E14FE1301A3EB00FC14701400AE137C48B4FC3803C780
380703C0000F13E0120E121C13071238A21278EA700F14C0131F00F0138012E0EA003F14
00A25B137EA213FE5B12015BA212035B141E0007131C13E0A2000F133CEBC038A21478EB
807014F014E0EB81C0EA0783EBC7803803FE00EA00F8174378C11E>I<16F0ED03F8A215
07A316F0ED01C092C7FCAEEC01F0EC07FCEC1E1EEC380F0270138014E0130114C0EB0380
0107131F1400A2130E153F131E011C140090C7FC5DA2157EA215FEA25DA21401A25DA214
03A25DA21407A25DA2140FA25DA2141FA25DA2143FA292C7FCA25C147EA214FE001C5B12
7F48485A495AA248485A495AD8F81FC8FCEA707EEA3FF8EA0FC0255683C11E>I<14FE13
7FA3EB01FC13001301A25CA21303A25CA21307A25CA2130FA25CA2131FA25C167E013F49
B4FC92380783C09138000E07ED3C1F491370ED603F017E13E0EC01C09026FE0380138091
3907000E00D9FC0E90C7FC5C00015B5C495AEBF9C03803FB8001FFC9FCA214F03807F3FC
EBF07F9038E01FC06E7E000F130781EBC003A2001F150FA20180140EA2003F151E161C01
0013E0A2485DA2007E1578167000FE01015B15F1489038007F800038021FC7FC2A467AC4
2D>I<EB03F8EA01FFA3380007F013031307A214E0A2130FA214C0A2131FA21480A2133F
A21400A25BA2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120FA25BA2121F
A25BA2123FA290C7FCA2387F01C01303007E1380A2130700FE130012FCA25B130EEA7C1E
131CEA3C3CEA3E786C5AEA07C0154678C419>I<D801F0EB0FE0D803FCEB7FF83A071E01
F03E3A0E0F03C01F001ED987001380001C018E130F003C139C003801B814C014F838781F
F000705BA25C00F049131FD8E03F158091C7FC1200163F491500137EA25E01FE147E5B16
FE5E12014913015E170F00030203130E4914F0A20307131E0007EDE01C5B173CEEC03800
0F167849157017E0ED03C1001FEDE3C049903801FF000007C8127C302D78AB37>110
D<EC0FE0EC7FFC903801F83E903907E00F8090390F8007C0EB1F00017EEB03E04914F0A2
48481301484814F81207485AA2485AA2485A1503127F90C7FCA215074815F05AA2150F16
E05AED1FC0A21680153F16005D157E5D007C495A007E495A003E5C4A5A6CEB1F80260F80
3EC7FC3807C0FC3801FFF038003F80252D75AB32>I<D903E0137E903A07F801FF80903A
0E3C0783E0903A1C1E0F01F0903A3C1F1C00F801385B017849137C01705BA24A48137E01
E05BA292C7FC00015B13C0147EC7FC02FE14FEA25CA20101140117FC5CA20103140317F8
5CA20107EC07F0A24AEB0FE0A2010F15C0EE1F80163F1700496C137E5E4B5A9138B803F0
90393F9C07E091389E0F80DA07FEC7FCEC01F849C9FCA2137EA213FEA25BA21201A25BA2
1203A21207B512F0A25C2F3F7FAB32>I<91381F800C91387FE01C903901F0703C903907
C0387890390F801CF890381F001D013E130F017E14F05B48481307A2484814E012075B00
0F140F16C0485AA2003F141F491480A3007F143F90C71300A35D00FE147EA315FE5DA200
7E1301A24A5A1407003E130FA26C495A143B380F80F33807C3E73901FF87E038007E0713
00140F5DA3141F5DA3143F92C7FCA25CA25C017F13FEA25D263F76AB2D>I<D801F0EB3F
803A03FC01FFF03A071E03C0F83A0E0F0F007C001E90389E01FC001C139CECB803003813
F0A2D91FE013F80078EC00E00070491300A200F05BEAE03F91C8FC1200A25B137EA313FE
5BA312015BA312035BA312075BA3120F5BA3121F5B0007C9FC262D78AB29>I<EC0FE0EC
7FF8903801F01E903803C00F90390780078090380F0003011E14C0150749131FA2017CEB
3F801378137CED0E0092C7FC137E137F14F014FF6D13C06D13F06D7F6D7F1300EC0FFE14
011400157F81120E003F141E487EA2153E48C7123CA200FC5C12705D0078495A6C495A6C
EB0F80260F803EC7FC3803FFF838007FC0222D7AAB28>I<1470EB01F8A313035CA31307
5CA3130F5CA3131F5CA2007FB512E0B6FC15C0D8003FC7FCA25B137EA313FE5BA312015B
A312035BA312075BA3120F5BA2EC0780001F140013805C140E003F131EEB001C143C1438
5C6C13F0495A6C485AEB8780D807FEC7FCEA01F81B3F78BD20>I<137C48B414072603C7
80EB1F80380703C0000F7F000E153F121C0107150012385E1278D8700F147E5C011F14FE
00F05B00E05DEA003FEC0001A2495C137E150313FE495CA215071201495CA2030F133800
03167849ECC070A3031F13F0EE80E0153F00011581037F13C06DEBEF8300000101148090
397C03C787903A3E0F07C70090391FFE01FE903903F000782D2D78AB34>I<017C143848
B414FC3A03C78001FE380703C0000F13E0120E001C14000107147E1238163E1278D8700F
141E5C131F00F049131C12E0EA003F91C7123C16385B137E167801FE14705BA216F00001
15E05B150116C0A24848EB0380A2ED0700A2150E12015D6D5B000014786D5B90387C01E0
90383F0780D90FFFC7FCEB03F8272D78AB2D>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr8 8 3
/Fd 3 52 df<130C133C137CEA03FC12FFEAFC7C1200B3B113FE387FFFFEA2172C7AAB23
>49 D<EB7F803801FFF0380780FC380E003F48EB1F8048EB0FC05A0060EB07E012F000FC
14F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC3F00147E147C5C495A495A49
5A495A011EC7FC5B5B4913305B485A4848136048C7FC000E14E0001FB5FC5A4814C0B6FC
A21C2C7DAB23>I<EB3FC03801FFF03807C0FC380E007E487FEC1F80003F14C0A2EB800F
1300A2000C131FC7FC1580A2EC3F00143E5C5CEB03F0EBFFC014F0EB00FC143FEC1F8015
C0140F15E0A2EC07F0A21238127C12FEA3EC0FE012F8006014C00070131F6C1480001EEB
3F00380780FC3801FFF038007FC01C2D7DAB23>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmsy10 12 10
/Fe 10 113 df<007FB912E0BA12F0A26C18E03C04789A4D>0 D<121FEA3F80EA7FC0EA
FFE0A5EA7FC0EA3F80EA1F000B0B789E1C>I<1AF0A3861A78A21A7C1A3CA21A3E1A1E1A
1F747EA2747E747E87747E747E1B7E87757EF30FE0F303F8007FBC12FEBE1280A26CF3FE
00CEEA03F8F30FE0F31F8051C7FC1B7E63505A505A63505A505AA250C8FC1A1E1A3E1A3C
A21A7C1A78A21AF862A359347BB264>33 D<031CED01C0033E4B7E033C1501037C820378
150003F8824B16780201177C4B163C0203173E4A48824B82020F844ACA6C7E023E717E02
7E8491BA7E498549854985D90FC0CBEA1F804948727E017FCCEA07F001FCF101F8D803F8
F100FED80FE0F23F80D83FC0F21FE0B4CEEA07F8A2D83FC0F21FE0D80FE0F23F80D803F8
F2FE00C66CF101F8017FF107F0D91F80F00FC06D6C4E5A6DBBC7FC6D616D616D61027ECA
EA03F0023E606E4D5A6E6C4C5A020795C8FC6F5E6E6C163E0201173C6F167C020017786F
16F803785E037C1501033C5E033E1503031C6F5A5D387DB464>44
D<92B6FC02071580143F91B7120001030180C8FCD907FCC9FCEB1FE0EB3F80017ECAFC5B
485A485A485A5B485A121F90CBFC123EA2123C127CA2127812F8A25AA2B9FC1880A21800
00F0CBFCA27EA21278127CA2123C123EA27E7F120F6C7E7F6C7E6C7E6C7E137E6D7EEB1F
E0EB07FC6DB47E010090B6FC023F1580140702001500313A78B542>50
D<1706170F171FA2173EA2177CA217F8A2EE01F0A2EE03E0A2EE07C0A2EE0F80A2EE1F00
A2163EA25EA25EA24B5AA24B5AA24B5AA24B5AA24BC7FCA2153EA25DA25DA24A5AA24A5A
A24A5AA24A5AA24AC8FCA2143EA25CA25CA2495AA2495AA2495AA2495AA249C9FCA2133E
A25BA25BA2485AA2485AA2485AA2485AA248CAFCA2123EA25AA25AA25A1260305C72C600
>54 D<1B3C1B7CF201F8021FB912F091BA12E001031980010FF0FE00013F18F84918C001
F8C7D807F0C9FCD803F0140F4848141F120F48485D003F153FA2127F5F4848147F90C8FC
5A00F85E00E015FFC9FCA294CAFC5DA35E1503A35E1507A35E150FA35E151FA35E153FA3
5E157FA35E15FFA293CBFCA25CA25D1403A25DA24A5AA34A5AA24A5AA25D143F5D027ECC
FC147C14604E4E7CC636>84 D<ED0FE015FF913803FC00EC0FE0EC3FC04A5A4AC7FC5C49
5AA2495AB3AD495AA2495A131F495A495A01FEC8FCEA07F8EAFFE0A2EA07F8EA00FEEB7F
806D7E6D7E130F6D7EA26D7EB3AD6D7EA26D7E806E7E6E7EEC0FE0EC03FC913800FFE015
0F236479CA32>102 D<12FEEAFFE0EA07F8EA00FEEB7F806D7E6D7E130F6D7EA26D7EB3
AD6D7EA26D7E806E7E6E7EEC0FE0EC03FC913800FFE0A2913803FC00EC0FE0EC3FC04A5A
4AC7FC5C495AA2495AB3AD495AA2495A131F495A495A01FEC8FCEA07F8EAFFE048C9FC23
6479CA32>I<1B0C1B1E1B3EA21B7CA21BF8A2F201F0A2F203E0A2F207C0A2F20F80A2F2
1F00A21A3EA262A262A24F5AA2621903A24F5AA24F5AA24FC7FCA2193EA261A261A24E5A
A24E5AA24E5AA24E5AA2010C4CC8FC133C017C163EEA01FE00035F487E001E5F00387FD8
707F4B5A00E07FD8003F4B5A80011F4B5AA26E4A5A130F6E4AC9FC13076E143E13036E5C
13016E5C7F6F5B027F1301A26F485A143F6F485A141F6F485A140F6F48CAFC1407EDFC3E
14035E15FE02015B15FF6E5BA26F5AA26F5AA26F5AA26FCBFC150E4F647A8353>112
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmex10 12 10
/Ff 10 106 df<B612C0A600FCC8FCB3B3B3B3B3B3B3B3B3B3B3B3AAB612C0A61AEE6783
35>20 D<B612C0A6C7120FB3B3B3B3B3B3B3B3B3B3B3B3AAB6FCA61AEE7F8335>I<B7FC
A748C8FCB3B3B3B3B3B3B3B3B3A920B2608242>50 D<B7FCA7C8127FB3B3B3B3B3B3B3B3
B3A920B27F8242>I<12FEB3B3B3B3B3B3B3B3B3A9B7FCA720B2608342>I<157FB3B3B3B3
B3B3B3B3B3A9B7FCA720B27F8342>I<12FEB3B3B3A8073E608042>I<12FEB3B3B3A8073E
668042>I<B512FCA500F8C7FCB3B3B3B3B3B3B3B3B3A6B512FCA516B26A832F>104
D<B512FCA5C7127CB3B3B3B3B3B3B3B3B3A6B512FCA516B27E832F>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmmi12 12 27
/Fg 27 123 df<EB07E014F8EB00FE143F816E7EA2140F81A2140781A2140381A2140181
A2140081A2157E157FA281A282151FA282A2150F82A2150782A2150F4B7E153B1571EDE1
FCEC01C1EC03C04A487EEC0F00021E137E4A137F5C02F87F49481480495A4948131F4948
14C049C7FC49140F017E15E05B491407485A484815F000071503485A484815F848C81201
007E16FC00FE1500007C167E0038163E2F467BC439>21 D<121E123FEA7F80EAFFC0A313
E0127FEA3F60121E1200A513C0A4EA0180A2EA0300A212065AA25A5A12200B1D78891B>
59 D<1860187018F01701A21703A21707170F84171FA217371767A217C7A2EE0187EE03
07841606EE0E03160C1618A216301670166016C084ED01800303130116001506A25D151C
15184B80A25D03E07F5D4A5A92B7FC5C5C0206C8FC4A82A25C0238157F14305CA25C1301
5C49C97FA20106163F130E130C131C133C01FC167FD803FF4B487E007F01E0023FEBFFC0
B56C5C6C5B42467DC549>65 D<027FB77E91B812F06E16FC02009039C00003FF6F480100
1380F17FC04BC8EA3FE0191FF10FF0A24A4816F81907A34A5AA2190FA24A4816F0191F1A
E0193F4A4816C0F17F80F1FF004E5A4A484A5A4E5AF01FF0F03FC04A4849B4C7FCEF1FFC
92B612F018FEDA7F80C7EA7F80F01FC0F00FF0727E4AC8120385727EA2494882A4495AA4
49485E1803A24E5A495A4E5A4E5AA249484B5A4E5A4D485A4D48C7FC4948EC0FFCEF3FF8
01FF913801FFE0007F90B71280B800FCC8FC17C045447CC34A>I<033FB512F04B14F86F
14F09239001FFC00EE07F8A24C5AA44C5AA44C5AA44C5AA44CC7FCA44B5AA44B5AA44B5A
A44B5AA44B5AA44B5AA44B5AA2121F487E486C49C8FC12FFA24A5A01805BEB0003485C00
D8495A00C0495A0060495A6C495A6C017EC9FC380F03F83807FFE0C690CAFC354578C336
>74 D<027FB500E091B512C091B65C6E4A7F020001E0C8383FF800DB7F80ED1FE098C7FC
4BC9123E1A381A60624A48ED03800706C8FC61614A481560614E5A0607C9FC4A48140C60
6018C04A48495A4DCAFC170E17184A485B1778EE01F84C7E91383FC007EE1FFE16311661
91397F80C1FFED8300038680038C137FECFF380360804B133F4B804948C7121F84170FA2
4948811707841703495A84170184494880A2727EA2494882183F85A2494882A2D9FFE0ED
7FFC007FD9FFC0010FB512E0B67E4B5E52447CC353>I<91267FFFC0933803FFFE91B55F
6E4E13FC0200F1FE00DB6FE0EE1BF8A203CF4D5A1B67A21BC7DA018F4C485AA2DB87F0ED
030FA2DA03079338061FC01A0CA21A1802064D485AA26F6C1560A2020C4D48C7FCF10180
A2F103000218040613FEA26F6C5CA202304C485A1930A2196002604C485AA26F6CEB0180
A24A4B48485A1806A26049484B495AA2047F5BA249C74A495A60A24D5A01064BC7485AA2
EE3F86A249038C4AC8FC1798A217B04903E014FEA2705A133801784B495A01FC92C7FCD8
03FFEF07FE007F01F0011E0103B512FCB56C011C49804A010C5E5F447BC35E>77
D<027FB612FE91B812E06E16F802009039C0000FFE6F48EB01FF9538007F804BC8EA3FC0
F11FE0A2F10FF04A5AA21AF8A24A5AA44A48ED1FF0A3F13FE04A5A1AC0197F1A804A48ED
FF004E5A4E5A4E5A4A484A5AF03FC006FFC7FCEF07FC4AB612F018800380CAFCA24ACBFC
A4495AA4495AA4495AA4495AA4495AA4495AA2EBFFE0007FEBFFC0B67E5D45447CC33F>
80 D<EE07FF047F13F0923903FC03FC92390FE0007F033FC7EA1FC003FC6E7EDA03F86E
7EDA07E06E7EDA1FC06E7E4A486E7E4AC9FC02FE167F495A4948EE3F80495A494817C001
1F171F495A4A17E0137F49CAFC5A5B000319F05B12075B120F5B001F19E0193F5B123FA3
4848EF7FC0A31A8019FF485A1A006061180361180761007F170F614E5AA24E5A003F4D5A
6D013F92C7FCDB7FC013FE001F903A01C0E001FC903BE003802003F8000F903A06003007
F000076F485A6D484A5AD803F84B5AD801FC037EC8FC0000ED1DFC017FEC1FF0D93F8C14
C0D90FEC017FC9FC903903FE03FC0100B5156091380FFE1C91C7FC61161E18014E5A043E
1307043F49C7FC715AEFC0FEEE1FFF60606060705B705B7090C8FCEE00FC44587CC44D>
I<923A01FF800180030F13F0033FEBF803923AFE00FE0700DA01F0EB1F0FDA07C0EB079F
4A48EB01BF021EC713FE4A14004A157EA24A157C0101163C5C13034A15381307A3010F16
30A36E152095C7FC8013078014FE903803FFE015FC6DEBFFC06D14FC6E13FF6E14C0020F
80020380DA007F7F03077FED007FEE0FFE1601707E83A283A312021206835F000E163EA3
173C001E167C177817F85F003F4B5A4C5A6D4A5A6D4AC8FCD87EE0141ED87C78147CD878
3E495A3A701FE00FE0D8E007B55AD8C00191C9FC9038003FF039467BC43C>83
D<023FB500C090381FFFFE4A5E80020001FCC7000713C0DB3FF0913803FC004CEC01F062
6F6CEC038097C7FC6F6C140661705C03071538616F6C5C4E5A6F6C495A96C8FC18066F6D
5A60706C5A606093383FE18017E3DC1FF7C9FC17FE5F705AA2707EA3707E1607EE0DFF16
1904387F5E5E4B486C7EED03804B486C7E15065D4B6D7E5D4B6D7E5D4A5A4AC76C7E5C02
0E6E7E5C5C4A6E7E14604A6E7F495A1303010FC96C7E5B017F4C7E2607FFC002037FB500
F8021FEBFFE05F5C4F447DC351>88 D<B66C91380FFFF84E13FC92C814F8000101E00301
13806C49EEFC004A16F06D6C16C0614EC7FC6D6C1506180E6E5D011F1618606E5D010F5E
4D5A6D6C14034DC8FC17066D6C5C5F5F6D6C5C17E04C5A6D01805B4CC9FCEDC006027F5B
5E91383FE0385E16606E6C5AEDF18003F3CAFCEC0FFEA25D6E5A5D140FA35D141FA35D14
3FA35D147FA392CBFC5CA35C1301A2EB07FF0003B512FE48805D46447CC339>I<020FB8
12C0A24A17800480C7130003F8C7485ADA3FE04A5A03801407023EC8485A023C4B5A4A4B
5A6102704B5A4A4BC7FC4D5A4A4A5A010115074A4A5A4D5A6049C8485A4D5A01024BC8FC
90C8485A4C5A16074C5A4C5A5F4C5A4C5A4CC9FC4B5A15034B5A4B5A4B5A5E4B5A4B5A4B
CAFC4A5A14034A4814024A4814065D4A485C4A5A4A5A4AC85A495A130349485D495A4A15
7049481560494815E04948140149C85B4816034848150748484B5A4848153F4915FF4848
020390C8FC4848143F48B8FCB85AA242447BC343>I<EC0FC0EC7FE0903901F030389039
03C0187C903907800CFC90381F0006013EEB07F8491303A25B00015D485AA2485A000F4A
5A5B121FA249495A123FA348C7485AA4007E4AC7FCA212FE1720037E1360A2127EA24B13
C0A2003E13010203EB0180EC067C6C010CEB03006CEB183C2607807013063A03C1E01E1C
3A01FF800FF83A007E0003E02B2D7CAB33>97 D<EB0FE0EA07FFA25CEA001F130FA2495A
A449C8FCA4137EA45BA4485AA2EC0FC0EC7FF03903F0F0789038F1803C9038F3001E01F6
131F48487F01F814805B4914C0120F5BA3485AA448C7121FA4007EEC3F80A31600007C5C
A200FC147E15FE5DA2007C495AA24A5A5D4A5A003C495A92C7FC6C131E000E5B000F13F8
380783E03801FFC0D8007EC8FC22467CC429>I<EC07F0EC3FFEECF80F903903E0018090
390F8000C049C71260013E14E049EB03F04913070001140F4848EB1FE05B0007EC0FC048
48EB078092C7FC121F5B123F90C9FC5AA312FEA45AA616201660A2007C15C0ED01806CEC
0700150E001E14186C147039078003E03903E01F802600FFFCC7FCEB3FE0242D7BAB2A>
I<EE03F8ED01FFA217F0ED00071603A2EE07E0A4EE0FC0A4EE1F80A4EE3F00A4167EA2EC
0FC0EC7FE0903901F030FC903803C018903807800C90381F0006013EEB07F8491303A25B
00015D485AA2485A000F4A5A5B121FA249495A123FA348C7485AA4007E4AC7FCA212FE17
20037E1360A2127EA24B13C0A2003E13010203EB0180EC067C6C010CEB03006CEB183C26
07807013063A03C1E01E1C3A01FF800FF83A007E0003E02D467CC433>I<EC0FF0EC7FFC
903801F81E903807E00790390F800380EB1F00017E13014914C0485A5B0003EC0380485A
120F49EB0700001F140E495B003F1478EC03F0397F007FC0D9FFFEC7FC14C090C9FC12FE
A65AA41620007C1560A2007E15C0003EEC0180ED0700001E140E6C1418157039078003E0
3903E01F802600FFFCC7FCEB3FE0232D7BAB2D>I<EE07E0EE1FF8EE3C1CEE7006EEE03E
0301137F030313FF4B5AEEC1FEA292380FC0FC1778EE8000151FA44BC7FCA5157EA591B6
12805B6D1500DA00FCC7FCA34A5AA54A5AA64A5AA54A5AA54A5AA64AC8FCA4143E147EA4
147C14FCA25CA313015CA2001C5BEA3E03127F00FF5B5CEAFE0700FC90C9FCEAF80EEA60
1CEA3838EA1FF0EA07C0305A7BC530>I<157EEC03FF91390F8181C091391E00C3E0027C
13674A13374948EB3FC04948131F13075C010F1580495A133F91C7FC49EC3F00137E13FE
A249147E1201A348485CA449495AA44B5AA44B5A0001140F151F000014376DEB7FC00178
13EF90383C018F90381E0F0F90390FFE1F80EB03F090C7FCA24BC7FCA4157EA3001C5C12
7EB4495A5D4A5A48495A48495A48013FC8FC007C13FC381FFFF0000313802B407DAB2F>
I<14FE137FA25C13011300A2495AA4495AA4495AA4495AA4495AA2ED7F80913881FFE090
393F0780F091380E00780218137C4A7FEB7E605CD97F80133F91C7FC5B5B5BA24848147E
A448485CA34B5A485AA24B5AA2485A4B5AA21702484890380FC006A392381F800C48C7FC
A2EE00181730127E176017C092380F0180489138078700007CEC03FE0038EC00F82F467B
C438>I<141E143F147F14FFA3147E14381400AE133EEBFF803801C3C0380301E0120600
0C13F0A2121813031230A21260EB07E0A238C00FC0A21200EB1F80A3EB3F00A2137EA35B
A2485AA214013803F003A33807E006A3EBC00CA21418A21430000313603801E1C03800FF
80EB3E0018437DC121>I<14FE137FA25C13011300A2495AA4495AA4495AA4495AA4495A
A2163FEEFF80903A3F0003C0C092380703E0ED0C07ED180F017EEB301F156015C0913901
800FC0903AFC03000700020690C7FC5C5C48485A5C5CEBFB8048B4C9FCA214F0EBF3FC38
07E07FEC1F80EC07C08148486C7EA31780D81F801401A4D83F009038E00300A21606A212
7E5E02015BEC00F048EC7070007CEC3FE00038EC0F802B467BC433>107
D<011F140ED97FC0131F2601E1E0EB3F80380380F0EA06006E14C048151F48ED0F801301
00301507A2126049481303A24848481400A21200495A1606A2495AA25E49C7FCA25E137E
A25EA3495CA25EA2017C495A4BC7FCA2017E1306013E5B011E5B6D5B903807C0E06DB45A
010090C8FC2A2D7DAB2F>118 D<02FCEB07E0D903FFEB1FF8903A0703C0381E903A1C01
E0601F01389038F0C03F903A6000F1807F499038FB00FFA2484813FE48C7147E4B133800
061600A348495AA2C7FCA24A5AA44A5AA44A5AA317104A481330A31760001E133F003F16
C0EA7F80026FEB018026FF00CFEB030002C71306267E01875B3A7C0303C0183A3C0E01E0
703A1FFC00FFE0D803F0EB3F80302D7EAB37>120 D<131FD97FC014E02601E1E0EB01F0
260380F01303EA06008048ED07E05A13011230EE0FC01260495AA2484848EB1F80A21200
495AEE3F00A2495AA2167E49C7FCA3017E5CA4017C495A13FCA34B5AA2137C15074B5A7F
153F6D137790390F81CFC0903803FF8F903800FE0F14004B5AA293C7FC5DD807C0133E00
0F147E486C137C5D485A49485A49485A0018495A4A5A4AC8FC6C137C380781F83803FFE0
C66CC9FC2C407DAB30>I<027C130149B4130349138049EBC00649140E49EBE00C90393F
03F038903938007EF049EB1FE00160EB036049EB00C0ED018090C7EA030015065D5D5D5D
5D4A5A0207C7FC140E14185C5C5C495A49C8FC13064914084914185B4914384914304848
1470D8031014E048B413013A0FEFC007C03A0E03F01F80486CB51200486C5B00306D5A48
6D5A486D5AEC0F80282D7CAB2D>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmtt12 12 67
/Fh 67 123 df<00085B003EEB07C0007FEB0FE0A24814F0A26C14E0B3A2007E1307003E
14C0A20008EB01001C1E75BD33>34 D<EB03E0EB0FF8497E497E497E90B5FC9038FE3F80
3801FC1F13F8000380EBF00FA7141F5D91393F87FFE001F84913F00001137F147E14FE90
26F9FC0713E001FF903801F8006C13F8ECF00302E05B1507D97FC05B14809038FF000F48
5D148048141F4801C05B5A391FEFE03FD83FC791C7FC903887F07FD87F03137EECF8FE6D
6C5A12FEEB00FF6E5AA291393FF00180EE03C091391FE007E0140F6CEB1FF06C133FEC7F
F8903980FFFE0FD83FC301FF13C0D9FFFC13FF6C496C13806C497E6CD9E00F13006C9038
8007FE3A00FE0001F82C3F7DBD33>38 D<EA07C0EA0FF0EA1FF8A213FCA213FE120F1207
EA007EA613FE13FCA21201EA03F8A2EA07F0120FEA1FE0EA7FC0EAFF8013005A5A12700F
1E6EBC33>I<140FEC3F80147F14FF491300495AEB07F8495A495A495A495A49C7FC5B12
015B485A12075B120F5B121F5BA2123F5BA2127F90C8FCA45A5AAD7E7EA47F123FA27F12
1FA27F120F7F12077F12036C7E7F12007F6D7E6D7E6D7E6D7E6D7EEB03FE6D7E6D138014
7F143FEC0F00194D6FC433>I<127812FE7E7F6C7E6C7EEA0FF06C7E6C7E6C7E6C7E6D7E
133F80131F6D7E801307801303801301A2801300A28080A41580143FAD147F1500A45C5C
A213015CA213035C13075C130F5C495A133F5C137F49C7FC485A485A485A485AEA3FE048
5A485A90C8FC5A1278194D78C433>I<14F0497EA8007015E000F8EC01F000FE140700FF
140F01C1133F01F113FF263FF9F913C0000FB61200000314FCC614F06D5B011F1380D907
FEC7FC90381FFF80017F13E090B57E000314FC000F14FF263FF9F913C026FFF1F813F001
C1133F0101130F00FE140700F814010070EC00E000001500A86D5A242B79B333>I<141F
A24A7EB0007FB71280A2B812C0A36C1680A2C7D83F80C7FCB06EC8FCA22A2B7CB333>I<
EA07C0EA0FF0EA1FF8123F13FCA213FEA2121F120F1207EA007E13FEA213FC1201EA03F8
1207EA0FF0EA7FE012FF13C013005A12780F196E8A33>I<007FB612FEA2B8FCA36C15FE
A228077BA133>I<14FF010313C0010F13F0497F497F497F9038FF81FF3A01FE007F8048
48EB3FC049131F4848EB0FE0A24848EB07F0A24848EB03F8A24848EB01FCA348C812FEA4
007E157E00FE157FAE6C15FF6C15FEA46D1301003F15FCA26D1303001F15F8A26C6CEB07
F0A26C6CEB0FE06D131F6C6CEB3FC0A26CB4EBFF806C018113006DB45A6D5B6D5B6D5B01
0313C0010090C7FC283F7BBD33>48 D<EB01E0497EA21307A2130FA2131F133F137F13FF
1203123F5AEAFFF713E71387EA7E071200B3B3A2003FB512FE48801680A216006C5C213E
76BD33>I<EB03FF011F13E0017F13FC48B57E48ECFF804815C0260FFE0313E03A1FF000
7FF049EB1FF84848130F49EB03FC127F90C7EA01FE4814005A6C15FF167FA3127E123CC9
FCA216FF16FEA2150116FC150316F81507ED0FF0ED1FE0153F16C0ED7F80EDFF004A5AEC
07FC4A5A4A5A4A5A4A5A4A5A4990C7FC495AEB07F8EB1FF0495A495A495A4890C8FC4848
143E4848147FEA0FF0485A48B7FCB8FCA37E6C15FE283E7BBD33>I<903801FFC0010F13
F8013F13FF90B67E48814881489038807FF03A0FFC000FF801F06D7E484813036F7EA215
00A26C5A6C5AC9FC15015EA215034B5A150F4B5A4B5A913803FFC00103B55A4991C7FC5D
8116C06D8090C76C7EED0FF8ED03FC6F7E6F7E821780163FA2EE1FC0A3123C127EB4FCA2
163F1780167F6C16006D5C6D495A6C6C1303D81FF8EB0FFC3A0FFF807FF86C90B55A6C5D
6C15806C6C91C7FC010F13FC010113C02A3F7CBD33>I<15FF4A7F5C5CA25C5C15DFEC3F
9FA2EC7F1F14FEA2EB01FCA2EB03F8EB07F0A2EB0FE0EB1FC0A2EB3F80A2EB7F0013FEA2
485A12035B485AA2485A485AA2485AA248C7FC12FEB812E017F0A46C16E0C8381F8000AC
021FB512804A14C04A14E0A26E14C06E14802C3E7DBD33>I<0007B612F04815F85AA316
F001C0C8FCB0ECFFC001C713F801DF7F90B6FC168016C0028013E09039FC001FF001F0EB
0FF849130749EB03FC6C4813016CC713FEC9FCA216FF167FA41218127EA2B415FF16FEA2
4814016C15FC6C14036DEB07F86D130F6C6CEB1FF06C6CEB7FE09039FE03FFC06CB61280
6C150000015C6C14F8013F13E0010390C7FC283E7BBC33>I<EC07FC91383FFF8091B512
C0010314F0130F4914F890383FFC0790397FE003FCEBFFC0481300485A5B4848EB01F849
EB00F0000F15005B121F5B123F5BA2127FEB0004903801FFF0010713FCD8FF1F7F4848EB
FF8090B612C0B712E09038FE007F01F8EB1FF049EB0FF849EB07FC49130349EB01FEA290
C8FC16FF167FA37EA47F123F16FF6D14FE121F15016C6CEB03FC6D13076C6C14F86DEB1F
F06C6C133F3A01FF80FFE06C90B512C06D14806DEBFE006D5B010713F001001380283F7B
BD33>I<127CB8128017C0A4178048C813004B5A4B5A007C4A5AC8485A5E151F4B5A4B5A
93C7FC5D5D4A5A14035D14075D140F5D141F5D143F5DA24AC8FCA25C5CA213015CA3495A
A413075CA5130F5CAA6D5A6D5A2A3F7CBD33>I<ECFFC0010713F8011F13FE017F6D7E90
B67E4881489038807FF03A07FE001FF8D80FF8EB07FC49130348486D7E491300003F8149
80A66C6C14FEA26C6C495A6D13036C6C495AD803FEEB1FF03A01FF807FE06C90B55A013F
91C7FC010F13FCA2013F13FF90B612C0489038807FE03A07FC000FF848486D7ED81FE0EB
01FE4913004848147F007F168090C8123FA200FEED1FC0A76C153F6C16806D147F003F16
006D5C6C6C495A01F813076C6C495A3A07FF807FF86C90B55A6C5D6C6C14806D91C7FC01
0713F8010013C02A3F7CBD33>I<49B47E010F13E0013F13F84913FE90B6FC0003158048
018113C09038FC007F4848EB1FE04848EB0FF0485A49EB07F84848130390C7FCED01FC5A
5A16FE1500A416FFA37E7E6D5BA26C6C5B6D5B6C6C5B6C6C5BD807FE137F90B7FC6C157F
6C14FC6C6CEBF8FF6DEBE0FE010F1380903800200091C7FC150116FCA2150316F8150716
F0000F140F486CEB1FE0486C133F16C0EDFF804A13004A5A381FF01F90B512F86C5C6C5C
6C1480C649C7FCEB3FF0283F7BBD33>I<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA
1F00C7FCB3A3121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B2B6CAA33>I<EA07
C0EA0FE0EA1FF0EA3FF8A5EA1FF0EA0FE0EA07C0C7FCB3A3EA07C0EA0FE0EA1FF0EA3FF8
A213FCA3121F120F12071200A2120113F81203EA07F0120FEA1FE0127FEAFFC013801300
12FC12700E396EAA33>I<1608163E16FF5D15075DED3FFEED7FFC913801FFF0020713E0
4A1380023F1300EC7FFC49485A4913E0010F13804990C7FCEB7FFC495A000313E0485B00
1F90C8FCEA7FFE13F8485A13C013F06C7E13FEEA1FFF000713C06C7FC613F86D7EEB1FFF
6D7F010313E06D13F86D6C7E6EB4FC020F13806E13E0020113F09138007FFCED3FFEED0F
FF81150181163E160828337BB733>I<007FB71280A2B812C0A36C16806C1600CBFCA900
3FB7FC481680B812C0A36C1680A22A177CA933>I<1210127CB4FC7F13E07FEA7FFC6C7E
380FFF806C13E000017F6C13FCEB3FFE6D6C7E01077F010113F06D7FEC3FFE6E7E020713
C06E13E0020013F8ED7FFE151FED0FFF1503150FED1FFE157FEDFFF8020313E04A13C002
1F13004A5AECFFF8495B010713C0011F5B4948C7FCEBFFFC4813F000075B481380D83FFE
C8FC485AEAFFF05B138090C9FC127C121028337BB733>I<EC1F804A7E4A7EA34A7EA314
F901017FA501037FA214F0A201077FA4ECE07E010F137FA449486C7EA549486C7EA4017F
80EC000FA291B5FCA290B67EA43A01FE0007F8491303A4000381491301A3000781491300
D87FFF90380FFFE0B56C4813F06E5AA24A7E6C496C13E02C3E7DBD33>65
D<007FB512F8B7FC16C082826C813A03F8000FFCED03FE15016F7E82A2EE3F80A7EE7F00
A25E4B5AA2ED07FCED1FF890B65A5E1680828216F89039F8000FFCED01FE6F7EEE7F8016
3F17C0161FA2EE0FE0A7161F17C0A2163FEE7F8016FF4B1300150F007FB65AB75A5E16E0
5E6C4AC7FC2B3D7DBC33>I<003FB612804815C0B712E0A26C15C06C1580260003F8C7FC
B3B3AD003FB612804815C0B712E0A26C15C06C1580233D78BC33>73
D<49B512F84914FC16FEA216FC6D14F890C7EA7F00B3B3A5123C127EB4FCA25D5D140139
7F8007FC9038F01FF86CB5FC6C5C6C14C000035CC649C7FCEB1FF0273E79BC33>I<D83F
FF903807FFE0486D4813F0B500C014F8A26C018014F06C496C13E0D803F0903800FE004B
5A4B5A15075E4B5A4B5A153F4B5A93C7FC15FE4A5A14035D4A5A4A5A141F5D4A5A147F14
FF01F17FA201F37FEBF7F701FF7F14E3ECC3F8EC81FCA2EC00FE5B49137F81498049131F
82150F826F7EA26F7EA26F7E150082167E167F82D83FFFECFFF0486D4813F8B56C4813FC
A26C496C13F86C90C713F02E3D7EBC33>I<D83FF8EC1FFC486CEC3FFE486CEC7FFFA200
7F16FE6C6CECFFFC000716E001EF14F7EC8001A39039E7C003E7A3ECE007A201E314C7A2
ECF00FA201E11487ECF81FA201E01407A2ECFC3FA2EC7C3E157E147EEC3E7CA3EC1E78EC
1FF8A2EC0FF0A3EC07E0EC03C091C7FCAED83FFCEC3FFC486CEC7FFEB591B5FCA26C48EC
7FFE6C48EC3FFC303D7FBC33>77 D<003FB512FC48ECFF80B712E016F86C816C813A01FC
000FFF030313801500EE7FC0163FEE1FE0160FA217F01607A6160F17E0A2161FEE3FC016
7FEEFF801503030F130090B65A5E5E16E0168003FCC7FC01FCC9FCB3383FFFE0487FB57E
A26C5B6C5B2C3D7EBC33>80 D<90381FFFF890B6FC000315C0000F15F0A24815F83A3FFC
003FFC01F0130F01C013034848EB01FEA290C8FCA54815FF48157FB3AA143F6C90387F80
FF6C15FEEC3FC0A2EC1FE0A29038800FF1A23A3FC007FBFC01F013FFEBFC036CB612F86C
15F0A2000315C0C61500011F148090C7EA7FC0153F16E0151F16F0150F16F8150716FC15
0316FE1501ED00FC284C7BBD33>I<007FB57EB612F815FE81826C812603F8007FED3FF0
ED0FF815076F7E1501A26F7EA74B5AA215034B5A150FED3FF0EDFFE090B65A5E93C7FC5D
8182D9F8007F153F6F7E150F821507AA173E177FA416F8030313FF267FFFC014FEB538E0
01FF17FC81EE7FF86C49EB3FF0C9EA0FC0303E7EBC33>I<D907FE137890393FFFC07C90
B5EAF0FC4814FC000714FF5AEBFC03391FF0007F4848133F0180131F007F140F90C71207
4814035AA21501A46CEC00F86C15007F7F6C7E7FEA1FFE380FFFE06C13FF6C14F06C14FC
6C6C13FF011F1480010314C0D9003F13E0020313F09138003FF8ED0FFC1507ED03FE1501
150016FFA2007C157F12FEA56C15FF16FE7FED01FC6D130301F0EB07F801FC130F9039FF
807FF091B512E016C000FC1580013FEBFE00D8F80F5BD8780013E0283F7BBD33>I<3A3F
FF807FFF486DB51280A46C496C13003A01FE000FE0151F6C7E4B5AEB7F805E90383FC07F
93C7FC6D6C5A5DEB0FF15DEB07FB5DEB03FF5D7F5D7F5D147F6E5AA34A7EA24A7E815B81
EB03FB81EB07F181EB0FE081011F7F02C07F013F133F02807F017F131F02007F49130F49
801507000181491303000381491301D87FFF90380FFFE0B56C4813F05DA2816C496C13E0
2C3D7DBC33>88 D<D87FFF903803FFF8B56C4813FC6E5AA24A7E6C496C13F8D803FC9038
007F005E00015D6D130112006D495A7F02805B013F130702C05B011F130F02E05BA2010F
131F02F05B0107133F02F85B13034BC7FCEB01FC157E010013FE14FEEC7EFC147F6E5AA2
6E5AA25D140FB349B5FC4980A46D91C7FC2E3D7EBC33>I<001FB612FE48815AA490C7EA
01FE4B5AA24B5A5E150F4B5AA2003E4A5AC8485AA24BC7FC5D14014A5AA24A5A4A5AA24A
5A5D143F4A5AA24AC8FC495AA2495A5C1307495AA2495A495AA2495A91C9FC5B4848141F
EE3F80485A485AA2485A5B121F485AA2485A90B7FCB8FCA46C1600293D7BBC33>I<007F
B512C0B612E0A415C048C8FCB3B3B3ABB612C015E0A46C14C01B4D6CC433>I<007FB512
C0B612E0A47EC7120FB3B3B3AB007FB5FCB6FCA46C14C01B4D7DC433>93
D<EB01C0EB07E0EB1FF8EB7FFE48B51280000714E0001F14F8393FFE7FFC39FFF81FFF49
7EEBC00390C7FC007E147E0038141C200E77BC33>I<007FB612FEA2B8FCA36C15FEA228
077B7D33>I<EB1FFC90B57E000314E048804814FC48809038F007FFEBE0016E7F153F6C
48806C48131FC87F150FA5EC0FFF49B5FC131F137F48B6FC0007140F4813C0381FFC00EA
3FF0EA7FC05B48C7FC5AA56C141F7E6D137FD83FE0497ED9F807EBFFF06CB712F87E6C14
F36C14C1C69138003FF0D91FF090C7FC2D2E7BAC33>97 D<EA3FFC487E12FFA2127F123F
1200ABEC01FE91380FFFC04A13F0027F7F91B512FE90B7FCECFE07DAF800138002E0EB7F
C04AEB3FE04A131FEE0FF091C7FC16074915F81603A217FC1601A9160317F8A26D140717
F06E130F17E06E131FEE3FC06E137F9139F801FF80DAFE07130091B55A495C6E5BD97E3F
13E0D93C0F138090260003FEC7FC2E3E7FBC33>I<ECFFF0010713FE011FEBFF804914C0
4914E048B612F048EBC01F9038FE000F485A485A4848EB07E049EB03C0484890C7FC5BA2
127F90C9FCA25A5AA97E7EA27F003FEC01F06DEB03F86C7E6D13076C6C14F06C6C130F01
FFEB1FE06CEBE07F6C90B512C06C1580013F14006D13FC01075B010013C0252E79AC33>
I<ED7FF84B7E5CA280157F1501ABEB01FF010713C1011F13F1017F13F990B6FC5A481381
3907FE003FD80FF8131F49130F48481307491303123F491301127F90C7FCA25A5AA97E7E
15037F123F6D1307A26C6C130F6D131F6C6C133F6C6C137F2603FF81B512F091B612F8C6
02FD13FC6D13F96D01E113F8010F018013F0D901FEC8FC2E3E7DBC33>I<ECFF80010713
F0011F13FC497F90B6FC48158048018013C03A07FE003FE001F8EB0FF048481307484814
F8491303003F15FC491301127F90C7FC16FE15005A5AB7FCA516FC48C9FC7E7EA36C7E16
7C6C6C14FE7F6C7E6D13016C6CEB03FC6CB4130F6C9038C03FF86C90B512F06D14E06D14
C0010F1400010313FC9038007FE0272E7BAC33>I<ED3FE0913801FFFC020713FE141F4A
13FF5CECFFC015004948137E4A133C010314005CA8003FB612F84815FCB7FCA36C15F826
0003F8C7FCB3AD003FB612804815C0A46C1580283E7DBD33>I<D901FEEB1FE0903A0FFF
C0FFF0013F01F313F84990B512FC90B7FC5A48010313E12607FC00EB80F849017F136048
4890383FC00049131FA2001F8149130FA66D131F000F5DA26D133F6C6C495A6D13FF2603
FF0390C7FCECFFFE485C5D5DD80FCF13C0D981FEC8FC0180C9FCA27FA26C7E7F90B512FC
6CECFFC06C15F0000715FC4815FF4816809038E0000748489038007FC090C8EA1FE04815
0F007E150700FE16F0481503A56C1507007E16E0007F150F6C6CEC1FC001E0147FD81FF8
903801FF80270FFF801F13006C90B55A6C5DC615F0013F14C0010F91C7FC010013F02E44
7DAB33>I<EA3FFC487E12FFA2127F123F1200AB4AB4FC020713C0021F13F0027F7F91B5
FC90B67EED07FEECF801ECF0004A7F4A7F5CA291C7FCA35BB3A43B3FFFF80FFFFC486D48
13FEB56C4813FFA26C496C13FE6C496C13FC303D7FBC33>I<14E0EB03F8A2497EA36D5A
A2EB00E091C8FCAA383FFFF8487FA47EEA0001B3AD007FB612C0B712E016F0A216E06C15
C0243E78BD33>I<1570EC01FCA2EC03FEA3EC01FCA2EC00701500AA90383FFFFC4913FE
90B5FCA27F7F90C7FCB3B3A9140115FCA21218007EEB03F81407B414F0140F9038803FE0
90B512C06C14806C14006C5B6C13F8000113E01F557BBD33>I<EA7FF8487EA4127F1200
AC4AB512C04A14E04A14F0A26E14E06E14C09139000FF0004B5A4B5A4B5A4BC7FC4A5A4A
5A4A5A4A5A4A5A4A5A4A5A4A7E01FD7F90B5FC81ECF3F8ECE3FC14C1EC80FEEC007F5B49
6D7E6F7E82150F6F7E6F7E8215016F7E3B7FFFF80FFFF0B56C4813F817FCA217F86C496C
13F02E3D7EBC33>I<383FFFFC487FB5FCA27E7EC7FCB3B3AD003FB612F84815FCB712FE
A26C15FC6C15F8273D7ABC33>I<02FC137E3B7FC3FF01FF80D8FFEF01877F90B500CF7F
15DF92B57E6C010F13872607FE07130301FC01FE7F9039F803FC01A201F013F8A401E013
F0B3A53C7FFE0FFF07FF80B548018F13C0A46C486C01071380322C80AB33>I<4AB4FC26
3FFC0713C0267FFE1F13F000FF017F7F91B5FC6CB67E6CEC07FEC6EBF801ECF0004A7F4A
7F5CA291C7FCA35BB3A43B3FFFF80FFFFC486D4813FEB56C4813FFA26C496C13FE6C496C
13FC302C7FAB33>I<EB01FE90380FFFC0013F13F0497F90B57E488048EB03FF2607FC00
13804848EB7FC049133F4848EB1FE049130F4848EB07F0A2007F15F890C71203A300FEEC
01FCAA6C14036C15F8A26D1307003F15F06D130FA26C6CEB1FE06D133F6C6CEB7FC06C6C
EBFF802603FF0313006CEBFFFE6C5C6D5B6D5B010F13C0D901FEC7FC262E7AAC33>I<EC
01FE3A3FFC0FFFC0486C4813F000FF017F7F91B512FE6CB7FC6CEBFE07C6D9F800138002
E0EB7FC04AEB3FE04A131FEE0FF091C7FC16074915F81603A217FC1601A9160317F8A26D
140717F06E130F17E06E131FEE3FC06E137F9139F801FF80DAFE07130091B55A495C6E5B
6E13E0020F1380DA03FEC7FC91C9FCAF383FFFF8487FB57EA26C5B6C5B2E427FAB33>I<
02FF137C0107EBE0FE011F13F0017F13FC90B512FE4814FF4813C03907FE003F4848131F
01F0130F484813071503485A491301127F90C7FC15005A5AA97E7E15017F123F6D130315
076C7E6C6C130F6D131FD807FE137F3903FF81FF6CEBFFFE6C14FC6D13F86D13F0010F13
C0903801FE0090C8FCAF92387FFFFC92B512FEA46F13FC2F427CAB33>I<ED03FE3B7FFF
801FFF80B5D8C07F13E002C1B5FC02C314F014C76C9038CFFE0F39001FDFF09139FFC007
E092388003C092C8FC5C5C5CA25CA25CA35CB2007FB512FEB7FCA46C5C2C2C7DAB33>I<
90381FFE0F90B5EA8F80000314FF120F5A5AEBF007387F800190C7FC00FE147F5A153FA3
7E007FEC1F0001C090C7FCEA3FF8EBFFC06C13FF6C14E0000314F8C680011F13FF010014
80020713C0EC007FED1FE0007C140F00FEEC07F01503A27EA27F15076D14E06D130F6DEB
3FC09038FE01FF90B61280160000FD5C00FC14F8D8F83F13E0D8780790C7FC242E79AC33
>I<EB03C0497E130FAA003FB612FC4881B7FCA36C5D26000FE0C8FCB3A3161FEE3F80A5
167F6E140001075C6E5A9138FE07FE6DB55A6D5C6D5C6E5B021F1380DA07FCC7FC29387E
B633>I<D83FFCEB1FFE486C497E00FF5CA2007F80003F800000EC007FB3A75EA25DA26D
5B90387F800FDAE03F13FC6DB612FE17FF6D806D01FE13FE01039038F83FFC010001C0C7
FC302C7FAA33>I<3B3FFFC00FFFF0486D4813F8B56C4813FCA26C496C13F86C496C13F0
D801F8C7EA7E006D14FE00005DA26D1301017E5CA2017F13036D5CA2EC8007011F5CA2EC
C00F010F5CA36D6C485AA3ECF03F010391C7FCA26E5A0101137EA2ECFCFE01005BA214FF
6E5AA36E5AA26E5A6E5A2E2B7EAA33>I<3B7FFF8007FFF8B56C4813FC6E5AA24A7E6C49
6C13F8D80FC0C7EA0FC06D141F00071680A56D143F00031600A3EC0FC0EC1FE0A23A01F8
3FF07EA3EC7FF8147CA20000157C9039FCFCFCFCA3ECF87CA2017C5C017D137EECF03EA2
017F133FA26D486C5AA3ECC00F90390F8007C02E2B7EAA33>I<3B3FFFC07FFF80486DB5
12C0B500F114E0A26C01E014C06C496C13803B00FE000FE000017F495AEB3F804B5A6D6C
48C7FC90380FE07E903807F0FEECF1FC903803FBF8EB01FF6D5B5D6E5A143F6E5A143F81
4A7E14FF903801FBF0ECF9F8903803F1FCEB07E0157E90380FC07F011F6D7E90383F801F
02007F496D7E01FE6D7E484813033B7FFFC03FFFE0B56C4813F0A46C496C13E02C2B7DAA
33>I<3B7FFF801FFFE0B56C4813F06E4813F8A24A6C13F06C496C13E0D803F8C7EAFC00
000114015E7F000014036D5C137EA2017F495A7FA26E485A131FA26D6C485AA214E00107
49C7FCA214F01303157EEB01F8A2157C010013FC14FC5D147C147DEC3FF0A36E5AA36E5A
A2141F5DA2143F92C8FCA3147EA214FE003F5B1301387F81F81383EB87F0139FEBFFE06C
5B5C6C90C9FCEA0FFCEA03F02D427DAA33>I<000FB712804816C05AA317800180C71300
4B5A4B5A4B5A4B5A6CC7485AC8485A4B5A4BC7FC4A5A4A5A4A5A4A5A4A5A4A5A4A5A4AC8
FC495A495A495A495A495A495A495A49C7EA0F804848EC1FC0485A485A485A485A485A48
B7FCB8FCA46C16802A2B7DAA33>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmmi8 8 5
/Fi 5 111 df<124012F012FC127FEA1FC0EA07F0EA01FCEA007FEB1FC0EB07F0EB01FC
EB007FEC1FC0EC07F0EC01FCEC007FED1FC0ED07F0ED01FCED007FEE1FC01607161FEE7F
00ED01FCED07F0ED1FC0037FC7FCEC01FCEC07F0EC1FC0027FC8FCEB01FCEB07F0EB1FC0
017FC9FCEA01FCEA07F0EA1FC0007FCAFC12FC12F012402A2B7AA537>62
D<90260FFFFCEB7FFFA29026007FC0EB0FF06E48148018006E6C131E1718020F5C6F5B02
075C6F485A020349C7FCEDF8065E6E6C5A5E6E6C5A5EED7F8093C8FC6F7EA26F7E153F15
6FEDCFE0EC018791380307F0EC0703020E7F141C4A6C7E14704A6C7E495A4948137F49C7
FC010E6E7E5B496E7E5BD801F081D807F8143FD8FFFE0103B5FCA2382D7EAC3A>88
D<B500C090380FFFC0A2D807F8C73801FC00000316F05F6C6CEC038094C7FC16066C6C5C
5E017F5C16706D5C6E485A4B5A6D6C48C8FC15066D6C5A5D5D6D6C5A5D903803F98002FB
C9FC14FF6D5A5C5CA35C1303A35C1307A35C130FA3131F0007B5FCA2322D7DAC29>I<01
07B612F8A2903A0FFC0007F002E0EB0FE00280EB1FC049C71380011E143F011CEC7F0049
14FE4B5A0130495A0170495A0160495A4B5A4B5A90C748C7FCA215FE4A5A4A5A4A5A4A5A
4A5A4A5A4AC8FC14FE5C130149481306495A4948130E4948130C495A49C7121C01FE1418
48481438485A5E484814F048481301484813034848495A48C7127FB7FC5E2D2D7CAC30>
I<3907C007E0391FE03FF83918F8783E393879E01E39307B801F38707F00126013FEEAE0
FC12C05B00815C0001143E5BA20003147E157C5B15FC0007ECF8081618EBC00115F0000F
1538913803E0300180147016E0001F010113C015E390C7EAFF00000E143E251F7E9D2B>
110 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmbx12 17.28 15
/Fj 15 121 df<16F04B7E1507151F153FEC01FF1407147F011FB5FCB7FCA41487EBE007
C7FCB3B3B3B2007FB91280A6395D74DC51>49 D<913801FFF8021FEBFFC091B612F80103
15FF010F16C0013F16F09026FFF80180489026C0003F13FE4890C7000F7FD807FC020314
8048486E14C048486E14E04981D83FF86F13F001FE6F13F8487E6E6E13FC80B56F13FE80
A319FF83A26C5BA26C5BA26C90C8FCEA07FCD800E04B13FE90C9FCA219FC5FA219F85F19
F04D13E0A24D13C0198094B512004C5B604C5B4C5B4C5B604C90C7FC4C5A4C5A4C5A4B13
E04B5B4B5B4CC8FC4B5A4B5AED3FE04B48143F4B5A4A90C8FC4A5ADA07F8157E4A5A4A5A
4A5A4A5A02FEC912FE495A495A4948ED01FC4948150749B8FC5B5B90B9FC5A4818F85A5A
5A5A5AA2BAFC19F0A4405D78DC51>I<ED7FFE0207B512F8023F14FF49B712C04916F001
0FD9800F13FC90271FF800037FD97FE001007FD9FF806E7F49C86C7F486C834801C06E7F
80486D826E80804884A3805CA27EA24A4A5B6C5B6C5B6C6C485E011EC85A90C95CA24D5B
6194B5FC96C7FC4C5B4C13F84C5B4C5B043F1380922607FFFEC8FC020FB512F817E094C9
FC17F817FF91C7001F13E0040313F8040013FE717E7113C0717F85717F858385A285831A
80A31AC0EA03FCEA0FFF487F487FA2487FA2B57E1A80A34D1400A25C6C604A5C6C6091C8
485B6C5A01F04B5BD80FFC4B5B6CB492B55A6C01E0010391C7FC6C01FF011F5B6C6C90B6
5A011F16F0010716C001014BC8FCD9001F14F0020049C9FC425E79DC51>I<F01F804E7E
187F18FF5FA25F5F5FA25F5F5F94B5FCA25E5E5E5EA25EEE3FBFEE7F3F16FE16FC1501ED
03F8ED07F0ED0FE016C0151FED3F80ED7F0015FE5D14014A5A4A5A4A5A5D141F4A5A4AC7
FC14FE5C1301495A495A495A5C131F495A49C8FC13FE5B1201485A485A485AA2485A485A
48C9FC12FEBCFCA6CA6CEBC000B1037FB8FCA6485D7CDC51>I<01C0EE01C0D801F81607
01FF163F02E0EC03FFDAFF8090B5FC92B71280190060606060606095C7FC5F17F817E017
804CC8FC16F0D9FC3F90C9FC91CBFCAEED3FFE0203B512E0021F14FC027FECFF8091B77E
90B5D8E00F13F09126FE000113FC02F06D7F02C06E7E91C86C1380496F13C05B496F13E0
6C4817F090C9FC19F8A27113FCA319FEA419FFA2EA03F0EA0FFC487E487E487FA2B57EA3
19FEA34A16FC6C5E91C8FC4917F85BD83FF017F001805D6C6C17E06D4B13C06C6C4B1380
6C6C92B51200D803FE4A5B6C6C4A5B6C01E0010F5BD97FFC017F5B6DB712C0010F93C7FC
010315FC010015F0023F91C8FC020313E0405E78DC51>I<EE1FFE0303B512E0031F14F8
037F14FE4AB7FC0207D9F8017F021F903980003FC04A48C76C7EDAFFFC140F4901F06E7E
4949143F4949ECFFF849495B4990C75A494882017F5D5C13FF485BA2485B715B5A715B48
496E5BF03F804894C8FCA35AA25CA248913801FFC0030713FC031FEBFF80037F14E092B6
12F89126C1FC017FB53AC3F0003FFEDAC7C06D6C7E4B6D7F02CFC76C7F02DE6E7FA202FC
6E7F4A82A24A82A2717F5C1A80A41AC05C7EA77EA46C7F1A80A27EA21A007E4D5B6C7F61
7E6E5E6C5E6D6C5E6D6C4A5B6E4A5B6D6D495B6D01E0017F90C7FC01039039F803FFFE6D
90B612F86D6C5D6E15C0020792C8FC020114F8DA001F1380425E79DC51>I<EA07E0120F
7F13FCEBFFFC91B912F8A45A1AF01AE01AC0A21A801A0061486061A2616101E0C9EA3FC0
01804C5A48CA90C7FC604D5A007E4C5A4D5A4D5A4D5A6048163F4D5A4DC8FC4C5AC9485A
5F16074C5A4C5AA24C5A167F5F16FF4B90C9FCA25D4B5AA2150F5E151FA2153F5E157FA2
15FFA24A5BA35CA35CA34A5BA55CA65CAC6E5B6E5B6E90CAFC6E5A6E5A456277E051>I<
ED3FFF0203B512F8021F14FF027F15E049B712F849D9E0037FD90FFEC76CB4FCD91FF802
1F7F494802077F49488049486E7F4A82488291C96C7E5AA248717EA35A80A28080806E4B
5A8014FF03C04A5A6C14F06F495B03FE5D6C6E6C5ADCE0075B6C6F4890C7FC9338FC1FFE
6C9238FF7FF84D5A6D16C06D93C8FC6D5D6D6F7E6D82010116F06D16FC023F814A8149B8
12C0010783497F90263FFE1F8190267FF80F819026FFF003814849C6FC4849013F804849
7F4890C7000780491401001F6F6C1480484881170F49030314C0007F1600848448488284
A284A284A21A80A27F007F1900A2606C6C5FA26C6C4C5A6D4C5A6C7F6C6DED7FF06E4B5A
6C01F802035BC601FE020F5B90267FFFE090B5C7FC6D90B612FC010F16F0010316C0D900
7F92C8FC020F14F8DA007F90C9FC425E79DC51>I<ED3FFE0207B512E0021F14FC91B7FC
4916C00107D9F8077F49D9800013F8013F90C76C7E49486E7E49486E7E48496E7F48496E
7F5A4A6E7F5A48707FA248845C855A85A283B583A41A80A71AC0A26C5EA47E5F7E806C5E
A26C5E6C6D141EA26C6D5C6C6D5C6D6C14F86D6CEB03F0010F9038E00FE06D90B5481480
01015D6D6C495A020F13F8020013E092C8FC1A00A25FA261A3017F5F3801FFC0486D4A5B
487FA2486D5E4D5BA2615F4D5B4A93C7FC6C5E4A4A5A4A4A5A6C90C7485B01FC4A5B6C6C
020F5B6D6C013F13806CD9F801B5C8FC6DB612FC011F15F06D15C0010392C9FC010014F8
020F1380425E79DC51>I<BD12FCA488A2D8000102C0C71201F1000F1A01F2007F1B3F1B
0F1B07757EA28787A288A3F43F80A31C1FA3197EA3F40FC0A499C7FC19FEA31801A21803
1807181F18FF93B6FCA6EEC000181F180718031801A21800A21D7E197EA21DFCA696C812
011DF8A31C03A3F407F0A31C0FA21C1F1C3F1DE01C7F1CFF63631B0F093F13C098B5FC1A
0797B6FCBEFCA31D80A35F617AE06A>69 D<92380FFFFC4AB612E0020F15FC023F15FF91
B8128001039026FE000713C04901F015E0011F01C05B4990C7FC49484A13F0495A485B5A
5C487013E0485B7113C0485B0501130048EE007C95C7FCA2485BA4B5FCAC7EA280A27EA3
6C7F19FC7E806CEF01F86C7F6EED03F06C6D15076CEF0FE06D6C6CEC1FC06D6DEC3F806D
6DEC7F00010701FCEB01FE6D9039FF801FFC010091B55A023F15E0020F1580020102FCC7
FCDA000F13C03E407BBF48>99 D<92381FFFC04AB512FE020F6E7E027F15F091B77E0103
D9FE0113FE010F9039F0003FFF4901C0010F7F4990C76C7F494802017F49488248498048
496F7E85485B48717EA24849151F855AA34849811A80A3B5FCA291B9FCA31A000280CBFC
A67EA3807EA36C7F190F6CF01F806C7F193F6C6D17006C606C6D16FE6D6C4B5A6D6C4B5A
6D01C0EC0FF06D01F0EC3FE06D01FCECFFC001019026FFC00F5B6D91B6C7FC023F15FC02
0715F002001580030701F0C8FC41407CBF4A>101 D<EB0FE0EB3FF8497E497E487F4880
A24880A76C5CA26C91C7FC6C5B6D5A6D5AEB0FE090C9FCB0903807FF80007FB5FCA6C6FC
7F7FB3B3ADB712C0A622657BE42C>105 D<D90FFFEB07F8B6EB3FFF4C13C04BB512F04B
14F8923907F87FFCED0FE0C6923880FFFE6D495A6DD91E0113FF153CA21578A24B6C13FE
A24BEB7FFCA2EF1FF04BEB07C094C7FCA45DB3B0B712F8A638407BBF42>114
D<007FB600C0017FB512F8A6D8000F01F8C70007EBE000060090C7FC6D6D4A5A6D6D4A5A
6D6D4A5A6D6E495A4E5A6E6D5C6E6D133F6E6D495A6E6D49C8FC4D5A6E6D485A6E6D485A
6E01FF5B6E148FEF9FE06FEBFFC06F5C6F91C9FC6F5B5F816F7F6F7F6F80A2707F8493B5
7E4B805D4B80DB0FF37FDB1FE17F04C180ED3FC04B486C7F4B486C7F4A486D7F4A48814A
487F4B6D7F020F6E7F4A486D7F4A48824A487F4AC86C7F49486F7F4A6F7F010384D93FFF
81B600F00103B7FCA650407EBF55>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmcsc10 12 5
/Fk 5 113 df<B500F094381FFFFEA26E5FC6F2FE00017F61D93BFCEF77F8A2D939FE17
E7A3D938FFEE01C7A26E6CED0387A36E6CED0707A26E6C150EA26E6C151CA36E6C1538A2
6E6C1570A36E6C15E0A26E6CEC01C0A36F6CEB0380A26F6CEB0700A26F6C130EA36F6C5B
A26F6C5BA36F6C5BA26F6C5BA36F6C485AA293387F8380A2DC3FC7C7FCA3EE1FEEA2EE0F
FCA3017C6E5AA248B46E484A7E000701C04D7EB500FE041FB512FE705AA257447BC363>
77 D<157015F8A34A7EA24A7EA34A7E81A291380E3F80A2021E7FEC1C1FA24A6C7EA34A
6C7EA202F07FECE003A249486C7EA349486C7EA201078091C77EA249B67EA24981011CC7
121FA2013C810138140FA2496E7EA201F081491403120183486C140100074B7ED81FF84A
7EB5027F13F8A335357CB43D>97 D<B812F0A3D803FEC7123F6C48EC07F816011600A217
78A21738A3171C1507A31700A25DA25D157F90B6FCA39038FC007F151F81A2811707A317
0E92C7FCA4171EA2173CA2177C17FC16011607486C143FB812F8A330337BB238>101
D<B512FEA3000390C9FCEA01FCB3A9EE01C0A416031780A41607A2160F161FA2167FEEFF
00486C1307B8FCA32A337BB233>108 D<B7FC16F016FC3A03FE0003FF6C489038007F80
EE3FC0EE1FE0EE0FF0A2EE07F8A217FCA617F8A2EE0FF0A2EE1FE0EE3FC0EEFF00ED03FE
90B612F816C001FCC9FCB3A2487EB512F8A32E337BB238>112 D
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmr12 12 57
/Fl 57 122 df<127812FCA27E7E6C7E123FEA0FC06C7E6C7E12016C7E137C7F130E7FEB
0380EB0100111275C431>18 D<130FEB1F80A2133F137FEBFF005BEA01F8485A485A5B48
5A48C7FC123E12385A5A124011126CC431>I<121E123FEA7F80EAFFC0A313E0127FEA3F
60121E1200A513C0A4EA0180A2EA0300A212065AA25A5A12200B1D78C41B>39
D<1406140E14181430147014E0EB01C0EB0380EB0700A2130E5B133C133813785BA2485A
A2485AA212075BA2120F90C7FCA25A121EA2123EA3123C127CA6127812F8B21278127CA6
123C123EA3121EA2121F7EA27F1207A27F1203A26C7EA26C7EA213781338133C131C7F7F
A2EB0380EB01C0EB00E0147014301418140E1406176477CA26>I<7E7E12607E12387E7E
7E6C7EA26C7E6C7E7F137013787FA27FA27FA214801307A214C01303A214E01301A214F0
A3130014F8A61478147CB2147814F8A614F01301A314E0A2130314C0A213071480A2130F
1400A2131EA25BA25B137013F05B485A485AA248C7FC120E5A5A12305A5A5A16647ACA26
>I<16C04B7EB3AB007FBAFCBB1280A26C1900C8D801E0C9FCB3AB6F5A41407BB84C>43
D<121E123FEA7F80EAFFC0A313E0127FEA3F60121E1200A513C0A4EA0180A2EA0300A212
065AA25A5A12200B1D78891B>I<B612C0A51A057F9721>I<121E123FEA7F80EAFFC0A4EA
7F80EA3F00121E0A0A78891B>I<14FF010713E090381F81F890387E007E01F8131F4848
EB0F80000315C04913074848EB03E0000F15F0A24848EB01F8A3003F15FCA348C812FEA6
4815FFB3A26C15FEA56D1301003F15FCA3001F15F8A26D1303000F15F0A26C6CEB07E000
0315C06D130F6C6CEB1F806C6CEB3F00017E137E90381F81F8903807FFE0010090C7FC28
427CC031>48 D<143014F013011307131F13FFB5FC13E713071200B3B3AF497E497E007F
B6FCA3204178C031>I<EB03FE90381FFFC0017F13F03901F80FFC3903C001FE48C7127F
000EEC3F80000CEC1FC04815E048EC0FF0A248EC07F8A2127C00FE15FC7E6D1303A46CC7
1207123EC813F8A3ED0FF0A216E0151F16C0153F1680ED7F00157E5D4A5A5D4A5A4A5A4A
5A4AC7FC141E5C5C5C495A495A495A91C7120C130E5B4914185B5B485A49143848C81230
00061570000FB612F05A5A5AB712E0A326417BC031>I<49B4FC010F13F0013F13FC9038
FE01FE3901E0007FD80380EB3F8048C7EA1FC0000EEC0FE0D80F8014F0EA1FE016F86D13
07A36C5AA2D80380130FC813F0A3ED1FE016C0A2ED3F801600157E5DEC03F0EC1FC0D90F
FFC7FC15F090380001FCEC007EED1F8016C0ED0FE0ED07F016F8150316FC16FE1501A216
FFA3121E123F487E487EA216FEA24913036CC713FC127E0070EC07F8003015F06C140F00
0E15E06CEC1FC0D803E0EB7F803A01FC01FE0039007FFFFC011F13E0010190C7FC28427C
C031>I<1507A25D5DA25D5DA25DA25C5C811406140E140C141814381430146014E014C0
1301EB038014005B13065B131C13185B137013605B12015B48C7FC5A1206120E120C5A12
3812305A12E0B812C0A3C86CC7FCAC4B7E4A7F91B61280A32A427DC131>I<000215C0D8
07C0130701FCEB7F8090B612005D5D15F05D158026063FFCC7FC90C9FCAE14FF010713E0
90381F01F0903878007C01E07FD807807F90C71380ED0FC01202C8EA07E016F0A3ED03F8
A316FCA4121C123E127F487EA216F890C7FC4814074815F01260A26CEC0FE016C06C141F
001C15806CEC3F006C147E3903C001FC3901F807F039007FFFE06D1380D907FCC7FC2642
7BC031>I<EC07F8EC3FFF91B51280903903FC03C0903907E000E0D90F80133090391F00
01F0013EEB03F84913075B1201485A49EB03F00007EC01E0000F91C7FC5B121FA25B123F
A3127F90C9FCEC7F80903801FFF039FF0780FC90380E003E0118130F49EB078016C049EB
03E04914F0ED01F8A24914FC150016FEA290C8FC16FFA27EA66C7EA216FE121FA2ED01FC
6C7E16F8000714036C6C14F06DEB07E0000115C06C6CEB0F80017EEB3F0090383F80FE90
380FFFF86D5B0100138028427CC031>I<121CA2EA1F8090B712C0A34816801700A25E00
38C8120C00305D127000605D5EA25E484A5A4BC7FCA2C812065DA25D5D5DA25D14015D14
03A24AC8FCA25C140E141EA2143E143CA2147CA214FCA313015CA31303A61307AA6D5A6D
5A2A447BC231>I<14FF010713E0011F13F890383F00FE0178131F01E0EB0F804848EB03
C04848EB01E048C7FCED00F0120E1678121EA4121FA26D14F07FD80FF0EB01E07FD807FE
EB03C06DEB07806C9038C00F006CEBE01E6CEBF83890387FFEF090383FFFC0130F6D7F01
0113F801077F90381E3FFFD9781F1380D9F00713C02601C00313E04848C613F048C7EA7F
F8000E141F001EEC0FFC48EC03FE150148EC007E163FA248151FA2160FA4160E1278161E
161C6C15186C1538001F15706C6C14E06C6CEB03C0D803F0EB0F80C6B4EB7F0090383FFF
FC010F13F00101138028427CC031>I<14FF010713E0011F13F890387F80FC9038FC003E
48487F4848EB0F804848EB07C0484814E01503484814F0123FED01F848C7FCA216FC5AA2
ED00FEA516FFA37E5DA27E7F001F5CA26C7E000714066C6C5B12016C6C5B017C13709038
3F01E090390FFF80FE903801FE0090C8FCA2ED01FCA416F8150316F0A2D80780EB07E048
7E486CEB0FC01680151F160049133E6C485B390C0001F80007495A3903E01FC06CB55A6C
6C48C7FCEB1FF028427CC031>I<121E123FEA7F80EAFFC0A4EA7F80EA3F00121EC7FCB3
A5121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A2B78AA1B>I<007FBAFCBB1280A3CE
FCB0BB1280A36C190041187BA44C>61 D<16C04B7EA34B7EA34B7EA34B7EA3ED19FEA2ED
39FF1530A203707FED607FA203C07F163FA2DA01807F161FA24A486C7EA302066D7EA202
0E80020C1303A2021C8002181301A24A8082A24A81177FA291B77EA3D90180C7EA1FE0A2
01038291C8120FA2498201061507A2010E82010C1503A249821701A2498283137801F883
487ED80FFF030313E0B500E0027FEBFFC0A342467DC549>65 D<DB0FFE146092B512C002
0302F013E0913A1FFC01FC0191393FC0001E02FFC7EA0703D901FCEC0387D907F0EC00C7
4948156F4948153F4948151F49C9120F13FE000117075B484816031207491601120F4916
00121FA2123F491760A2127FA219005B12FFAC127F7FA21960123FA27F121FA26C6C17C0
A212076DEE018012036C6C16036D170000001706137F6D6C5D6D6C5D6D6C5D6D6C5DD901
FC4A5A6DB4EC0780DA3FC0011FC7FCDA1FFC13FC0203B55A020014C0DB0FFEC8FC3B467B
C446>67 D<B8FC17F017FC00019039C00007FF6C499038007FC0017FED1FE0EF07F0EF03
FC717E717E84727E727E727EA2727E85180385A2180185A38584A31A80AD1A00A36061A3
61180361180761180F614E5A183F614EC7FC18FEEF03FC4D5AEF1FE001FFED7FC0486DD9
07FFC8FCB812FC17F094C9FC41447CC34B>I<B612F0A3C6EBF0006D5A6D5AB3B3B3A449
7E497EB612F0A31C447DC323>73 D<B612F8A3000101E0C9FC6C5B6D5AB3B31830A41870
1860A518E0A3EF01C0A217031707A2170F173F177F01FFEC01FF486D011F1380B9FCA334
447CC33D>76 D<B56C933807FFFC6E5EA20001F1FE002600EFE0EE1BFC016F60A2D967F0
1633A2D963F81663A3D961FC16C3A3D960FEED0183A2027FED0303A36E6C1406A36E6C14
0CA26E6C1418A36E6C1430A36E6C1460A26E6C14C0A36E6CEB0180A3037FEB0300A29238
3F8006A36F6C5AA36F6C5AA26F6C5AA36F6C5AA36F6C5AA26FB45AA370C7FC13F0A2486C
023E4A7ED80FFF4D7EB500F0011C0107B512FCA34E447BC359>I<ED1FFC4AB512C09139
0FF007F891393F8000FE027EC7123FD901F8EC0FC049486E7ED90FE0EC03F849486E7E49
486E7E49C9127F01FE707E49161F0001844848707EA24848707E000F84491603001F84A2
491601003F84A3007F844982A300FF1980AC007F19006D5EA4003F606D1603A2001F606D
1607000F60A26C6C4C5AA26C6C4C5A0001606C6C4C5A6D167F6D94C7FC6D6C15FE6D6C4A
5A6D6C4A5AD903F0EC07E0D901FCEC1FC0D9007E4AC8FC6E6C13FE91390FF007F80201B5
12C09126001FFCC9FC41467BC44C>79 D<B712FCEEFFC017F800019039C0000FFE6C49EB
01FF017F9138007F80EF1FE0170FEF07F018F8EF03FCA218FE1701A218FFA718FEA21703
18FCA2EF07F818F0EF0FE0EF1FC0EF7F80933801FE00EE0FFC91B612F017800280C9FCB3
A9497E487FB612C0A338447CC342>I<B712E016FF17C000019039C0003FF86C49EB03FC
017FEC00FF717E717E717E717E717EA284170384A760A21707604D5AA24D5A4D5A4DC8FC
EE01FEEE07F8EE3FE091B6C9FC16FC913980007F80EE0FE0707EEE01F883707E177FA284
173F84A784A61A6084171FA2050F14C0496C6E7E486D0203EB0180B600C0903901FC0300
716C5AF03FFCCBEA07F843457CC348>82 D<49B41303010F13E0013FEBF8079038FE00FC
D801F0EB1F0F4848EB079F4848EB01DF48486DB4FC48C87E001E81123E007E81127C8212
FC82A46C81A37E6C6C91C7FCA2EA3FE07FEA1FFEEBFFE06C13FE6CEBFFE06C14FC6C14FF
6C15C0013F80010F80010180D9001F7F02017F9138001FFF150303001380167FEE3FC016
1FA2EE0FE0124012C01607A47EA217C07E160F6C1680A26CED1F006C151E6C153ED8FBC0
5CD8F9F05CD8F07CEB03F03AE03FC00FE0010FB51280D8C00349C7FC9038003FF02B467B
C436>I<003FB912E0A3903BF0003FF0007F01806D48130F003EC7150348EF01F0007817
0019701270A219301260A5481818A5C81600B3B3A54B7EEDFFFC0103B7FCA33D447CC346
>I<EAFFF8A4EAF000B3B3B3B3B3A2EAFFF8A40D6475CA1B>91 D<EAFFF8A4EA0078B3B3
B3B3B3A2EAFFF8A40D647ECA1B>93 D<EB07F8EB3FFF9038F80FC03901C003E048C66C7E
00066D7E48147CD80F80137E486C133E6D133F8182A26C5A6C5AC8FCA4EC0FFF49B5FC90
380FFC1FEB3FC0EBFF00EA03FCEA07F0485A121F485A5B127F176048C7FCA4153FA26C14
6F7F003F9138C7C0C0391FC001873B0FE00307E1803A07F81E03FF2701FFFC0113003A00
1FE0007C2B2E7CAC31>97 D<EA01FC12FFA3120312011200B3EC01FC91380FFF8091383E
07E091387000F802C0137CD9FD807F01FFC77EEE0F804915C049EC07E017F0160317F8A2
17FC1601A317FEA917FCA21603A217F8A2EE07F017E07FEE0FC001FBEC1F801700D9F180
133ED9F0C05B9039E06001F891383C07E09039C01FFF8090260003FCC7FC2F467DC436>
I<EC7F80903803FFF090380FC07C90383E000E49130349EB01804848EB00C00003140748
48EB0FE04848131FA2121F5B003FEC0FC0ED0780007F91C7FC90C9FCA25AAA7EA27FA212
3F16306C7EA2000F15606C7E6C6C14C00001EC01806C7E017CEB07006D130E90381FC078
903807FFF001001380242E7DAC2B>I<16FE157FA315011500167EB3EC7F80903803FFF0
90380FC07890383F000C017C13064913034848EB01FE00031400485A4848147EA2121F48
5AA2127FA290C8FCA25AA97EA37F123FA2121F7F000F15FE6C7E000314016C6CEB037E6C
6C147F017C010E13806D011C13FE90380FC0F0903803FFE09026007F0013002F467DC436
>I<EB01FE903807FFC090381F03F090387C00F849137C48487F48487F0007158049130F
000F15C0121F4914E0003F1407A2127F90C713F0A35AA290B6FCA290C9FCA67EA36C7EA2
1630121F7F000F15606C7E000315C06C6CEB01806C6CEB0300017C13066D131C90380FC0
78903803FFE09038007F80242E7DAC2B>I<EC1FC0EC7FF0ECF038903803E07C903807C0
FC90380F81FEA2EB1F0190383F00FCA2013E1330017E1300B0B61280A3D8007EC7FCB3B1
137F497E007FEBFF80A31F467EC51E>I<D901FCEB1FC0903A0FFF807FE0903A3F07E1E1
F090397C01F7819039F800FE01484890387C00E048486D13000007143FA248486D7EA200
1F81A7000F5DA26C6C49C7FCA20003143E6C6C5B6C6C5B486C485A39033F07E090380FFF
80260701FCC8FC0006CAFCA3120E120F7EA27F13E06CB512F86CECFF806C15E06D14F848
B67E3A07E0000FFED80F80EB00FF001EC8123F003EED1F8048150F17C0481507A6007CED
0F80A26CED1F006C153E6C6C5CD807E0495AD801F8EB07E0D8007FEB3F8090261FFFFEC7
FC010113E02C417DAB31>I<EA01FC12FFA3120312011200B3EC01FE913807FF8091381E
07E091383801F002607FECC000D9FD807F167C01FFC7FC167E5BA35BB3A9486C14FFB5D8
FC7F13FEA32F457DC436>I<13E0EA03F8487EA66C5AEA00E090C7FCADEA01FC127FA312
0312011200B3B0487EB512F8A315437EC21B>I<14F0EB01F8EB03FCEB07FEA4EB03FCEB
01F8EB00F01400AD14FE137FA313011300147EB3B3AB003C137C127EB413FC14F8A238FE
01F0007E13E0383803C0381E0780380FFF00EA01FC175783C21E>I<EA01FC12FFA31203
12011200B3B3B3A5487EB512FCA316457EC41B>108 D<2701FC01FEEC7F8000FF903B07
FFC001FFF0913B0E03F00380FC913B3800F80E003E0003495C000101C0D97C307F000003
7E81D9FD805C01FFC7D83EC0130F043F81495DA34992C7FCB3A9486C4A6C497EB5D8FC3F
B5000FB512C0A34A2C7DAB51>I<3901FC01FE00FF903807FF8091381E07E091383801F0
000301607F0001EBC0002600FD807F167C01FFC7FC167E5BA35BB3A9486C14FFB5D8FC7F
13FEA32F2C7DAB36>I<EC7F80903803FFF090380FC0FC90383E001F496D7E496D7E4848
6D7E48486D7E48486D7E000F81A24848147E003F157FA290C87E481680A44816C0AA6C16
80A26D147F003F1600A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C
495A013E49C7FC90381FC0FE903807FFF89038007F802A2E7DAC31>I<3901FC01FC00FF
90380FFF8091383E07E091387001F800039038C0007C2601FD807F6CB4C7123FEE1F8049
EC0FC04915E0EE07F0A217F8160317FCA3160117FEA917FC1603A317F8160717F0EE0FE0
7FEE1FC06D1580EE3F00D9FD80137ED9FCC05B91386001F891383C0FE091381FFF80DA03
FCC7FC91C9FCAE487EB512FCA32F3F7DAB36>I<91387F8006903903FFE00E90380FE078
90383F001C017EEB061E5B4848EB033E4848EB01BE12074848EB00FEA2485A003F157E5B
127FA390C8FC5AA97E7FA3123F7F121F16FE6C7E000714016C7E6C6CEB037E0000140601
7C130C013F131890380FC0F0903803FFE09038007F0091C7FCAE16FF037F13FEA32F3F7D
AB33>I<3901F807E000FFEB1FF8EC383CEC607E0003EBC0FF12013800F980EBFB00157E
153C01FE1300A45BB3A77F487EB6FCA3202C7DAB26>I<90383FE0303801FFF83907C01E
70390F0007F0001C1301481300A2481470A212F01530A37E7E007E1400EA7F80EA3FF0EB
FF806C13F86C13FE0003EBFF806C14C0D8003F13E0010313F09038001FF81403EC00FC00
40147C00C0147E153E7E151EA37E151C7E153C6C14386C147000FB14E039F18001C039E0
F00F8039C07FFE00EB0FF01F2E7DAC26>I<1306A5130EA4131EA3133E137EA213FE1201
1207001FB512F0B6FCA2D8007EC7FCB3A4150CAA133E013F1318A27F90380F8030010713
60903803E0C0903801FF809038003F001E3E7EBC26>I<D801FC14FE00FF147FA3000314
01000114000000157EB3A916FEA3017C1301A2017EEB037E013E147F011E010613806D01
1C13FE903807C078903803FFE09026007F8013002F2D7DAB36>I<B539E001FFFCA3D807
FEC7EA7FE0D801FCEC1F8017000000150E160CA2017E5CA2017F14386D1430A26D6C5BA2
6E13E0010F5CA26D6C485AA36D6C48C7FCA26E5A01011306A26D6C5AA2ECFE1CEC7E18A2
6E5AA3EC1FE0A36E5AA26E5AA36EC8FC2E2C7EAA33>I<3B7FFFF007FFFCA30001D98001
13C06C90C7EAFE006D147C6D14706D6C5B6D6C5BECE0010107495AD903F090C7FCECF806
903801FC0E01005BEC7E18EC7F30EC3F706E5A6E5A811407814A7EEC0DFC1418EC387E4A
7E02607FECC01F01016D7ED903807F4A6C7E01061303496D7E011C80013C1300017C147E
D801FC14FFD80FFE4913C0B5D8800713FFA3302B7FAA33>120 D<B539E001FFFCA3D807
FEC7EA7FE0D801FCEC1F8017000000150E160C6D141C017E1418A26D5CA26E1370011F14
60A26D6C5BA2800107495AA2ECF003010391C7FCA2903801F806A2ECFC0E0100130CA2EC
7E18A2EC7F38EC3F30A2EC1FE0A36E5AA26E5AA36EC8FCA21406A35CA2141C1418A20038
5B127C00FE5BA25C1301387C0380D87007C9FCEA3C1EEA1FFCEA03F02E3F7EAA33>I
E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop 0 84 a Fl(Corrig)m(\023)-46 b(e)33 b(TP1)g Fk(Maple)2262
b Fl(Alg)m(\022)-46 b(ebre)33 b(lin)m(\023)-46 b(eaire)p
0 124 3820 4 v 0 407 a Fj(Exercice)53 b(1)146 523 y Fi(>)304
531 y Fh(restart:)146 625 y Fi(>)304 633 y Fh(with\(linalg\):)146
749 y Fi(>)304 757 y Fh(M:=matrix\([[0,1,)i(1,)d(1],)g([1,0,-1,-1],)j
([1,-1,0,-1],)f([1,-1,-1,0]]\);)1332 1258 y Fg(M)38 b
Fl(:=)1595 878 y Ff(2)1595 1054 y(6)1595 1114 y(6)1595
1173 y(6)1595 1233 y(6)1595 1293 y(6)1595 1353 y(6)1595
1416 y(4)1703 998 y Fl(0)160 b(1)g(1)h(1)1703 1179 y(1)f(0)83
b Fe(\000)p Fl(1)g Fe(\000)p Fl(1)1703 1360 y(1)g Fe(\000)p
Fl(1)160 b(0)83 b Fe(\000)p Fl(1)1703 1540 y(1)g Fe(\000)p
Fl(1)g Fe(\000)p Fl(1)161 b(0)2421 878 y Ff(3)2421 1054
y(7)2421 1114 y(7)2421 1173 y(7)2421 1233 y(7)2421 1293
y(7)2421 1353 y(7)2421 1416 y(5)146 1696 y Fi(>)304 1704
y Fh(P:=factor\(charpoly\(M,X\)\);)1547 1907 y Fl(\()p
Fg(X)30 b Fl(+)22 b(3\))17 b(\()p Fg(X)29 b Fe(\000)23
b Fl(1\))2233 1866 y Fd(3)146 2034 y Fi(>)304 2042 y
Fh(Id:=diag\(1,1,1,1\);)1451 2543 y Fc(Id)38 b Fl(:=)1707
2164 y Ff(2)1707 2339 y(6)1707 2399 y(6)1707 2458 y(6)1707
2518 y(6)1707 2578 y(6)1707 2638 y(6)1707 2702 y(4)1815
2284 y Fl(1)83 b(0)g(0)g(0)1815 2464 y(0)g(1)g(0)g(0)1815
2645 y(0)g(0)g(1)g(0)1815 2825 y(0)g(0)g(0)g(1)2301 2164
y Ff(3)2301 2339 y(7)2301 2399 y(7)2301 2458 y(7)2301
2518 y(7)2301 2578 y(7)2301 2638 y(7)2301 2702 y(5)146
2981 y Fi(>)304 2989 y Fh(k1:=kernel\(M-Id,'n'\);)1021
3192 y Fc(k1)41 b Fl(:=)27 b Fe(f)p Fl([1)p Fg(;)33 b
Fl(0)p Fg(;)g Fl(1)p Fg(;)g Fl(0])p Fg(;)h Fl([1)p Fg(;)f
Fl(0)p Fg(;)g Fl(0)p Fg(;)g Fl(1])p Fg(;)g Fl([1)p Fg(;)g
Fl(1)p Fg(;)g Fl(0)p Fg(;)h Fl(0])p Fe(g)0 3324 y Fl(Autre)f(m)m(\023)
-46 b(etho)s(de)33 b(p)s(our)g(calculer)g(la)g(dimension)h(du)f
(sous-espace)h(propre:)146 3439 y Fi(>)304 3447 y Fh(4-rank\(M-Id\);)
1885 3651 y Fl(3)146 3777 y Fi(>)304 3785 y Fh
(k2:=kernel\(M+3*Id,'m'\);)1473 3988 y Fc(k2)40 b Fl(:=)28
b Fe(f)p Fl([)p Fe(\000)p Fl(1)p Fg(;)34 b Fl(1)p Fg(;)f
Fl(1)p Fg(;)g Fl(1])p Fe(g)146 4115 y Fi(>)304 4123 y
Fh(n+m;)1885 4326 y Fl(4)0 4457 y(Donc)e(M)g(est)h(diagonalisable)g(:)
42 b(la)31 b(somme)h(des)g(dimension)h(de)e(ses)i(sous-espaces)g
(propres)f(est)d(\023)-46 b(egale)0 4578 y(\022)d(a)32
b(4.)146 4694 y Fi(>)304 4702 y Fh(k:=k1)52 b(union)h(k2;)764
4905 y Fg(k)31 b Fl(:=)c Fe(f)p Fl([1)p Fg(;)33 b Fl(0)p
Fg(;)g Fl(1)p Fg(;)g Fl(0])p Fg(;)h Fl([1)p Fg(;)f Fl(0)p
Fg(;)g Fl(0)p Fg(;)g Fl(1])p Fg(;)g Fl([)p Fe(\000)p
Fl(1)p Fg(;)h Fl(1)p Fg(;)f Fl(1)p Fg(;)g Fl(1])p Fg(;)g
Fl([1)p Fg(;)g Fl(1)p Fg(;)g Fl(0)p Fg(;)g Fl(0])p Fe(g)1885
5944 y Fl(1)p eop
%%Page: 2 2
2 1 bop 0 84 a Fl(Corrig)m(\023)-46 b(e)33 b(TP1)g Fk(Maple)2262
b Fl(Alg)m(\022)-46 b(ebre)33 b(lin)m(\023)-46 b(eaire)p
0 124 3820 4 v 146 368 a Fi(>)304 376 y Fh
(P:=transpose\(matrix\([op\(k\))q(]\)\);)1423 878 y Fg(P)41
b Fl(:=)1658 498 y Ff(2)1658 674 y(6)1658 733 y(6)1658
793 y(6)1658 853 y(6)1658 913 y(6)1658 972 y(6)1658 1036
y(4)1766 618 y Fe(\000)p Fl(1)83 b(1)g(1)g(1)1844 799
y(1)f(0)h(0)g(1)1844 979 y(1)f(1)h(0)g(0)1844 1160 y(1)f(0)h(1)g(0)2329
498 y Ff(3)2329 674 y(7)2329 733 y(7)2329 793 y(7)2329
853 y(7)2329 913 y(7)2329 972 y(7)2329 1036 y(5)146 1316
y Fi(>)304 1324 y Fh(evalm\(P)53 b(&*)f(diag\(-3,1,1,1\))j(&*)c
(P^\(-1\)\);)1463 1445 y Ff(2)1463 1621 y(6)1463 1681
y(6)1463 1740 y(6)1463 1800 y(6)1463 1860 y(6)1463 1920
y(6)1463 1983 y(4)1571 1565 y Fl(0)160 b(1)h(1)f(1)1571
1746 y(1)g(0)83 b Fe(\000)p Fl(1)h Fe(\000)p Fl(1)1571
1927 y(1)f Fe(\000)p Fl(1)161 b(0)83 b Fe(\000)p Fl(1)1571
2107 y(1)g Fe(\000)p Fl(1)g Fe(\000)p Fl(1)161 b(0)2289
1445 y Ff(3)2289 1621 y(7)2289 1681 y(7)2289 1740 y(7)2289
1800 y(7)2289 1860 y(7)2289 1920 y(7)2289 1983 y(5)146
2263 y Fi(>)304 2271 y Fh(K:=jordan\(M,'Q'\);)1417 2772
y Fg(K)34 b Fl(:=)1665 2393 y Ff(2)1665 2568 y(6)1665
2628 y(6)1665 2688 y(6)1665 2747 y(6)1665 2807 y(6)1665
2867 y(6)1665 2931 y(4)1773 2513 y Fl(1)160 b(0)83 b(0)g(0)1773
2693 y(0)g Fe(\000)p Fl(3)g(0)g(0)1773 2874 y(0)160 b(0)83
b(1)g(0)1773 3054 y(0)160 b(0)83 b(0)g(1)2336 2393 y
Ff(3)2336 2568 y(7)2336 2628 y(7)2336 2688 y(7)2336 2747
y(7)2336 2807 y(7)2336 2867 y(7)2336 2931 y(5)146 3210
y Fi(>)304 3218 y Fh(evalm\(Q\);)1496 3338 y Ff(2)1496
3513 y(6)1496 3573 y(6)1496 3632 y(6)1496 3692 y(6)1496
3752 y(6)1496 3812 y(6)1496 3872 y(6)1496 3931 y(6)1496
3991 y(6)1496 4051 y(6)1496 4111 y(6)1496 4174 y(4)1614
3399 y Fl(11)p 1614 3443 98 4 v 1639 3534 a(4)1854 3399
y(1)p 1854 3443 49 4 v 1854 3534 a(4)2034 3466 y(2)g(1)1639
3670 y(1)p 1639 3715 V 1639 3806 a(4)1815 3670 y Fe(\000)p
Fl(1)p 1815 3715 127 4 v 1854 3806 a(4)2034 3737 y(0)g(0)1639
3942 y(5)p 1639 3986 49 4 v 1639 4077 a(4)1815 3942 y
Fe(\000)p Fl(1)p 1815 3986 127 4 v 1854 4077 a(4)2034
4009 y(1)g(0)1639 4213 y(5)p 1639 4258 49 4 v 1639 4349
a(4)1815 4213 y Fe(\000)p Fl(1)p 1815 4258 127 4 v 1854
4349 a(4)2034 4281 y(1)g(1)2256 3338 y Ff(3)2256 3513
y(7)2256 3573 y(7)2256 3632 y(7)2256 3692 y(7)2256 3752
y(7)2256 3812 y(7)2256 3872 y(7)2256 3931 y(7)2256 3991
y(7)2256 4051 y(7)2256 4111 y(7)2256 4174 y(5)146 4451
y Fi(>)304 4459 y Fh(evalm\(Q)53 b(&*)f(K)f(&*)h(Q^\(-1\)\);)1463
4581 y Ff(2)1463 4757 y(6)1463 4816 y(6)1463 4876 y(6)1463
4936 y(6)1463 4996 y(6)1463 5055 y(6)1463 5119 y(4)1571
4701 y Fl(0)160 b(1)h(1)f(1)1571 4882 y(1)g(0)83 b Fe(\000)p
Fl(1)h Fe(\000)p Fl(1)1571 5062 y(1)f Fe(\000)p Fl(1)161
b(0)83 b Fe(\000)p Fl(1)1571 5243 y(1)g Fe(\000)p Fl(1)g
Fe(\000)p Fl(1)161 b(0)2289 4581 y Ff(3)2289 4757 y(7)2289
4816 y(7)2289 4876 y(7)2289 4936 y(7)2289 4996 y(7)2289
5055 y(7)2289 5119 y(5)1885 5944 y Fl(2)p eop
%%Page: 3 3
3 2 bop 0 84 a Fl(Corrig)m(\023)-46 b(e)33 b(TP1)g Fk(Maple)2262
b Fl(Alg)m(\022)-46 b(ebre)33 b(lin)m(\023)-46 b(eaire)p
0 124 3820 4 v 0 407 a Fj(Exercice)53 b(2)146 643 y Fi(>)304
651 y Fh(A:=matrix\(3,3,[a-b-c,2*a,2)q(*a,2)q(*b,)q(b-a-)q(c,2*)q(b,2*)
58 b(c,2*c,c-a-b]\);)1036 1062 y Fg(A)27 b Fl(:=)1267
772 y Ff(2)1267 947 y(6)1267 1007 y(6)1267 1067 y(6)1267
1131 y(4)1375 893 y Fg(a)22 b Fe(\000)h Fg(b)f Fe(\000)h
Fg(c)214 b Fl(2)17 b Fg(a)344 b Fl(2)17 b Fg(a)1511 1073
y Fl(2)g Fg(b)218 b(b)23 b Fe(\000)f Fg(a)h Fe(\000)f
Fg(c)219 b Fl(2)17 b Fg(b)1510 1254 y Fl(2)g Fg(c)354
b Fl(2)17 b Fg(c)217 b(c)22 b Fe(\000)h Fg(a)f Fe(\000)h
Fg(b)2717 772 y Ff(3)2717 947 y(7)2717 1007 y(7)2717
1067 y(7)2717 1131 y(5)146 1410 y Fi(>)304 1418 y Fh
(factor\(det\(A\)\);)1664 1621 y Fl(\()p Fg(a)g Fl(+)f
Fg(b)g Fl(+)g Fg(c)p Fl(\))2115 1580 y Fd(3)0 1752 y
Fl(Donc)32 b Fg(A)h Fl(est)g(diagonalisable)g(si)h(et)e(seulemen)m(t)j
(si)f Fg(a)22 b Fl(+)g Fg(b)g Fl(+)h Fg(c)k Fe(6)p Fl(=)h(0.)146
1868 y Fi(>)304 1876 y Fh(factor\(charpoly\(A,X\)\);)1182
2079 y Fe(\000)p Fl(\()p Fg(a)23 b Fe(\000)g Fg(X)29
b Fl(+)22 b Fg(c)h Fl(+)f Fg(b)p Fl(\))17 b(\()p Fg(a)22
b Fl(+)g Fg(X)30 b Fl(+)22 b Fg(b)g Fl(+)h Fg(c)p Fl(\))2598
2038 y Fd(2)146 2206 y Fi(>)304 2214 y Fh(eigenvects\(A\);)530
2444 y Fl([)p Fe(\000)p Fg(a)g Fe(\000)g Fg(b)g Fe(\000)f
Fg(c;)33 b Fl(2)p Fg(;)h Fe(f)p Fl([)p Fe(\000)p Fl(1)p
Fg(;)f Fl(0)p Fg(;)g Fl(1])p Fg(;)g Fl([)p Fe(\000)p
Fl(1)p Fg(;)h Fl(1)p Fg(;)f Fl(0])p Fe(g)p Fl(])p Fg(;)g
Fl([)p Fg(a)23 b Fl(+)f Fg(b)g Fl(+)g Fg(c;)34 b Fl(1)p
Fg(;)f Fe(f)2849 2333 y Ff(h)2889 2376 y Fg(a)p 2889
2421 52 4 v 2894 2512 a(b)2950 2444 y(;)g Fl(1)p Fg(;)3129
2376 y(c)p 3129 2421 42 4 v 3129 2512 a(b)3165 2333 y
Ff(i)3212 2444 y Fe(g)p Fl(])0 2606 y(Si)41 b Fg(a)28
b Fl(+)f Fg(b)h Fl(+)g Fg(c)42 b Fe(6)p Fl(=)f(0,)h Fg(A)f
Fl(admet)g(deux)h(v)-5 b(aleurs)42 b(propres)f(distinctes)i(:)60
b Fe(\000)p Fl(\()p Fg(a)28 b Fl(+)g Fg(b)g Fl(+)f Fg(c)p
Fl(\))41 b(et)g Fg(a)28 b Fl(+)f Fg(b)h Fl(+)g Fg(c)p
Fl(.)0 2726 y(Le)37 b(sous-espace)j(propre)d(asso)s(ci)m(\023)-46
b(e)38 b(\022)-49 b(a)37 b Fe(\000)p Fl(\()p Fg(a)26
b Fl(+)f Fg(b)h Fl(+)f Fg(c)p Fl(\))37 b(est)h(de)g(dimension)h(2)d(et)
i(celui)g(de)g Fg(a)25 b Fl(+)g Fg(b)h Fl(+)f Fg(c)37
b Fl(de)0 2846 y(dimension)d(1,)f(donc)g Fg(A)f Fl(est)i
(diagonalisable.)0 2967 y(Si)e Fg(a)22 b Fl(+)f Fg(b)h
Fl(+)f Fg(c)28 b Fl(=)g(0,)k Fg(A)g Fl(a)g(une)h(v)-5
b(aleur)32 b(propre)h(de)g(degr)m(\023)-46 b(e)32 b(3)g(:)44
b(elle)33 b(est)f(diagonalisable)h(si)g(et)f(seulemen)m(t)0
3087 y(si)h(elle)h(est)f(diagonale.)43 b(Or)33 b(\()p
Fg(a;)17 b(b;)g(c)p Fl(\))27 b Fe(6)p Fl(=)h(0)k(donc)h
Fg(A)g Fl(n'est)g(pas)g(diagonalisable.)0 3208 y(On)g(p)s(eut)f(donc)i
(en)f(conclure)g(que)1196 3428 y Fg(A)g Fl(in)m(v)m(ersible)63
b Fe(,)d Fg(A)32 b Fl(diagonalisable)0 3648 y Fk(Maple)f
Fl(supp)s(ose)j(toujours)f(que)g(les)h(expressions)h(a)m(v)m(ec)f(des)g
(inconn)m(us)g(son)m(t)f(non)g(n)m(ulles)h(:)146 3763
y Fi(>)304 3771 y Fh(Ad:=jordan\(A,'P'\);)932 4182 y
Fc(A)-5 b(d)39 b Fl(:=)1218 3893 y Ff(2)1218 4068 y(6)1218
4128 y(6)1218 4187 y(6)1218 4251 y(4)1326 4013 y Fe(\000)p
Fg(a)23 b Fe(\000)g Fg(b)f Fe(\000)h Fg(c)246 b Fl(0)449
b(0)1530 4194 y(0)286 b Fg(a)22 b Fl(+)g Fg(b)h Fl(+)f
Fg(c)286 b Fl(0)1530 4374 y(0)449 b(0)246 b Fe(\000)p
Fg(a)23 b Fe(\000)f Fg(b)h Fe(\000)g Fg(c)2820 3893 y
Ff(3)2820 4068 y(7)2820 4128 y(7)2820 4187 y(7)2820 4251
y(5)146 4530 y Fi(>)304 4538 y Fh(evalm\(P\);)1222 4676
y Ff(2)1222 4852 y(6)1222 4912 y(6)1222 4971 y(6)1222
5031 y(6)1222 5091 y(6)1222 5151 y(6)1222 5214 y(4)1330
4780 y Fe(\000)1579 4712 y Fg(a)p 1417 4757 375 4 v 1417
4848 a(a)g Fl(+)f Fg(b)g Fl(+)g Fg(c)2057 4712 y(a)p
1895 4757 V 1895 4848 a(a)g Fl(+)g Fg(b)h Fl(+)f Fg(c)2363
4780 y Fe(\000)p Fl(1)1330 5056 y Fe(\000)1584 4989 y
Fg(b)p 1417 5033 V 1417 5125 a(a)h Fl(+)f Fg(b)g Fl(+)g
Fg(c)2062 4989 y(b)p 1895 5033 V 1895 5125 a(a)g Fl(+)g
Fg(b)h Fl(+)f Fg(c)2441 5056 y Fl(0)1459 5266 y Fg(a)h
Fl(+)f Fg(b)p 1378 5310 V 1378 5401 a(a)h Fl(+)f Fg(b)g
Fl(+)g Fg(c)2062 5266 y(c)p 1895 5310 V 1895 5401 a(a)g
Fl(+)g Fg(b)h Fl(+)f Fg(c)2441 5333 y Fl(1)2531 4676
y Ff(3)2531 4852 y(7)2531 4912 y(7)2531 4971 y(7)2531
5031 y(7)2531 5091 y(7)2531 5151 y(7)2531 5214 y(5)1885
5944 y Fl(3)p eop
%%Page: 4 4
4 3 bop 0 84 a Fl(Corrig)m(\023)-46 b(e)33 b(TP1)g Fk(Maple)2262
b Fl(Alg)m(\022)-46 b(ebre)33 b(lin)m(\023)-46 b(eaire)p
0 124 3820 4 v 146 368 a Fi(>)304 376 y Fh(map\(simplify,evalm\(P)56
b(&*)c(Ad)g(&*)g(P^\(-1\)\)\);)1151 498 y Ff(2)1151 673
y(6)1151 733 y(6)1151 792 y(6)1151 856 y(4)1259 618 y
Fg(a)23 b Fe(\000)f Fg(b)h Fe(\000)f Fg(c)214 b Fl(2)17
b Fg(a)344 b Fl(2)17 b Fg(a)1395 799 y Fl(2)g Fg(b)218
b(b)23 b Fe(\000)g Fg(a)f Fe(\000)h Fg(c)218 b Fl(2)17
b Fg(b)1395 979 y Fl(2)g Fg(c)353 b Fl(2)17 b Fg(c)218
b(c)22 b Fe(\000)g Fg(a)h Fe(\000)f Fg(b)2601 498 y Ff(3)2601
673 y(7)2601 733 y(7)2601 792 y(7)2601 856 y(5)0 1152
y Fj(Exercice)53 b(3)146 1268 y Fi(>)304 1276 y Fh(A:=matrix\([[58,)i
(52,)d(36],)g([-29,)h(187,)f(9],)g([-145,)h(65,)f(219]]\);)1345
1687 y Fg(A)27 b Fl(:=)1576 1397 y Ff(2)1576 1572 y(6)1576
1632 y(6)1576 1692 y(6)1576 1756 y(4)1810 1518 y Fl(58)132
b(52)f(36)1733 1698 y Fe(\000)p Fl(29)83 b(187)180 b(9)1684
1879 y Fe(\000)p Fl(145)132 b(65)82 b(219)2408 1397 y
Ff(3)2408 1572 y(7)2408 1632 y(7)2408 1692 y(7)2408 1756
y(5)0 2021 y Fb(M)n(\023)-54 b(etho)s(de)38 b(1)g(:)50
b(en)37 b(diagonalisan)m(t)g Fg(A)146 2137 y Fi(>)304
2145 y Fh(eig:=eigenvals\(A\);)1486 2348 y Fc(eig)f Fl(:=)28
b(116)p Fg(;)33 b Fl(174)p Fg(;)f Fl(174)0 2479 y Fg(A)h
Fl(a)f(trois)h(v)-5 b(aleurs)33 b(propres)g(distinctes)i(et)e(est)g
(donc)g(diagonalisable.)146 2595 y Fi(>)304 2603 y Fh
(J:=jordan\(A,'P'\);)1388 3014 y Fg(J)k Fl(:=)1610 2724
y Ff(2)1610 2900 y(6)1610 2959 y(6)1610 3019 y(6)1610
3083 y(4)1718 2845 y Fl(174)180 b(0)g(0)1815 3025 y(0)83
b(116)180 b(0)1815 3206 y(0)h(0)82 b(174)2364 2724 y
Ff(3)2364 2900 y(7)2364 2959 y(7)2364 3019 y(7)2364 3083
y(5)0 3358 y Fg(A)28 b Fl(=)f Fg(P)36 b Fe(\001)22 b
Fg(J)31 b Fe(\001)22 b Fg(P)565 3322 y Fa(\000)p Fd(1)659
3358 y Fl(,)32 b(donc)h Fg(A)1024 3322 y Fi(n)1099 3358
y Fl(=)28 b Fg(P)35 b Fe(\001)22 b Fg(J)1414 3322 y Fi(n)1483
3358 y Fe(\001)g Fg(P)1610 3322 y Fa(\000)p Fd(1)1704
3358 y Fl(.)146 3474 y Fi(>)304 3482 y Fh(puiss:=x->x^n;)1564
3685 y Fc(puiss)36 b Fl(:=)27 b Fg(x)h Fe(!)g Fg(x)2208
3644 y Fi(n)146 3812 y(>)304 3820 y Fh(Jn:=map\(puiss,J\);)1293
4231 y Fc(Jn)35 b Fl(:=)1564 3941 y Ff(2)1564 4116 y(6)1564
4176 y(6)1564 4236 y(6)1564 4300 y(4)1672 4061 y Fl(174)1819
4025 y Fi(n)2021 4061 y Fl(0)227 b(0)1745 4242 y(0)155
b(116)2096 4206 y Fi(n)2297 4242 y Fl(0)1745 4423 y(0)227
b(0)155 b(174)2372 4386 y Fi(n)2460 3941 y Ff(3)2460
4116 y(7)2460 4176 y(7)2460 4236 y(7)2460 4300 y(5)146
4578 y Fi(>)304 4586 y Fh(An1:=evalm\(P)54 b(&*)e(Jn)g(&*)g
(P^\(-1\)\);)367 5098 y Fc(A)n(n1)41 b Fl(:=)713 4719
y Ff(2)713 4894 y(6)713 4954 y(6)713 5014 y(6)713 5073
y(6)713 5133 y(6)713 5193 y(6)713 5257 y(4)874 4833 y
Fe(\000)p Fl(174)1098 4797 y Fi(n)1167 4833 y Fl(+)22
b(2)17 b(116)1478 4797 y Fi(n)1669 4766 y Fl(26)p 1669
4810 98 4 v 1669 4902 a(29)1793 4833 y(174)1940 4797
y Fi(n)2009 4833 y Fe(\000)2118 4766 y Fl(26)p 2118 4810
V 2118 4902 a(29)2242 4833 y(116)2389 4797 y Fi(n)2553
4766 y Fl(18)p 2553 4810 V 2553 4902 a(29)2677 4833 y(174)2824
4797 y Fi(n)2893 4833 y Fe(\000)3002 4766 y Fl(18)p 3002
4810 V 3002 4902 a(29)3126 4833 y(116)3273 4797 y Fi(n)821
5105 y Fe(\000)908 5038 y Fl(1)p 908 5082 49 4 v 908
5173 a(2)984 5105 y(174)1131 5069 y Fi(n)1200 5105 y
Fl(+)1308 5038 y(1)p 1308 5082 V 1308 5173 a(2)1383 5105
y(116)1530 5069 y Fi(n)1669 5038 y Fl(71)p 1669 5082
98 4 v 1669 5173 a(58)1793 5105 y(174)1940 5069 y Fi(n)2009
5105 y Fe(\000)2118 5038 y Fl(13)p 2118 5082 V 2118 5173
a(58)2242 5105 y(116)2389 5069 y Fi(n)2577 5038 y Fl(9)p
2553 5082 V 2553 5173 a(58)2677 5105 y(174)2824 5069
y Fi(n)2893 5105 y Fe(\000)3027 5038 y Fl(9)p 3002 5082
V 3002 5173 a(58)3126 5105 y(116)3273 5069 y Fi(n)821
5376 y Fe(\000)908 5309 y Fl(5)p 908 5354 49 4 v 908
5445 a(2)984 5376 y(174)1131 5340 y Fi(n)1200 5376 y
Fl(+)1308 5309 y(5)p 1308 5354 V 1308 5445 a(2)1383 5376
y(116)1530 5340 y Fi(n)1669 5309 y Fl(65)p 1669 5354
98 4 v 1669 5445 a(58)1793 5376 y(174)1940 5340 y Fi(n)2009
5376 y Fe(\000)2118 5309 y Fl(65)p 2118 5354 V 2118 5445
a(58)2242 5376 y(116)2389 5340 y Fi(n)2529 5309 y Fl(103)p
2529 5354 147 4 v 2553 5445 a(58)2702 5376 y(174)2849
5340 y Fi(n)2917 5376 y Fe(\000)3027 5309 y Fl(45)p 3027
5354 98 4 v 3027 5445 a(58)3151 5376 y(116)3298 5340
y Fi(n)3386 4719 y Ff(3)3386 4894 y(7)3386 4954 y(7)3386
5014 y(7)3386 5073 y(7)3386 5133 y(7)3386 5193 y(7)3386
5257 y(5)1885 5944 y Fl(4)p eop
%%Page: 5 5
5 4 bop 0 84 a Fl(Corrig)m(\023)-46 b(e)33 b(TP1)g Fk(Maple)2262
b Fl(Alg)m(\022)-46 b(ebre)33 b(lin)m(\023)-46 b(eaire)p
0 124 3820 4 v 0 376 a Fb(M)n(\023)-54 b(etho)s(de)38
b(2)g(:)50 b(gr)o(^)-55 b(ace)37 b(au)h(p)s(olyn^)-56
b(ome)37 b(minimal)e(de)i Fg(A)146 492 y Fi(>)304 500
y Fh(P:=minpoly\(A,X\);)1359 703 y Fg(P)k Fl(:=)28 b(20184)21
b Fe(\000)i Fl(290)17 b Fg(X)29 b Fl(+)22 b Fg(X)2421
662 y Fd(2)146 830 y Fi(>)304 838 y Fh(Rem\(X^n,P,X\);)1168
1041 y Fl(Rem\()p Fg(X)1491 1000 y Fi(n)1538 1041 y Fg(;)33
b Fl(20184)21 b Fe(\000)i Fl(290)17 b Fg(X)29 b Fl(+)22
b Fg(X)2425 1000 y Fd(2)2464 1041 y Fg(;)33 b(X)8 b Fl(\))0
1172 y Fk(Maple)31 b Fl(ne)i(sait)g(pas)g(r)m(\023)-46
b(ep)s(ondre)33 b(\022)-49 b(a)33 b(cette)g(question,)h(donc)f(il)g
(faut)f(l'aider...)146 1288 y Fi(>)304 1296 y Fh
(eq:=X^n=Q[n]\(X\)*P+a[n]*X+b)q([n];)760 1500 y Fc(e)-5
b(q)37 b Fl(:=)27 b Fg(X)1101 1458 y Fi(n)1176 1500 y
Fl(=)g Fg(Q)1356 1515 y Fi(n)1403 1500 y Fl(\()p Fg(X)8
b Fl(\))17 b(\(20184)k Fe(\000)h Fl(290)17 b Fg(X)29
b Fl(+)22 b Fg(X)2449 1458 y Fd(2)2488 1500 y Fl(\))g(+)g
Fg(a)2697 1515 y Fi(n)2761 1500 y Fg(X)30 b Fl(+)22 b
Fg(b)3011 1515 y Fi(n)146 1626 y(>)304 1634 y Fh(l1:=subs\()p
Fe(f)p Fh(X=116)p Fe(g)p Fh(,eq\);)1389 1837 y Fc(l1)41
b Fl(:=)28 b(116)1783 1796 y Fi(n)1857 1837 y Fl(=)f(116)17
b Fg(a)2175 1852 y Fi(n)2243 1837 y Fl(+)22 b Fg(b)2382
1852 y Fi(n)146 1964 y(>)304 1972 y Fh(l2:=subs\()p Fe(f)p
Fh(X=174)p Fe(g)p Fh(,eq\);)1389 2175 y Fc(l2)41 b Fl(:=)28
b(174)1783 2134 y Fi(n)1857 2175 y Fl(=)f(174)17 b Fg(a)2175
2190 y Fi(n)2243 2175 y Fl(+)22 b Fg(b)2382 2190 y Fi(n)146
2302 y(>)304 2310 y Fh(solve\()p Fe(f)p Fh(l1,l2)p Fe(g)p
Fh(,)p Fe(f)p Fh(a[n],b[n])p Fe(g)p Fh(\);)897 2557 y
Fe(f)p Fg(b)988 2572 y Fi(n)1063 2557 y Fl(=)28 b(3)17
b(116)1380 2515 y Fi(n)1447 2557 y Fe(\000)23 b Fl(2)17
b(174)1760 2515 y Fi(n)1806 2557 y Fg(;)33 b(a)1917 2572
y Fi(n)1992 2557 y Fl(=)2130 2489 y(1)p 2105 2534 98
4 v 2105 2625 a(58)2230 2557 y(174)2377 2515 y Fi(n)2445
2557 y Fe(\000)2579 2489 y Fl(1)p 2555 2534 V 2555 2625
a(58)2679 2557 y(116)2826 2515 y Fi(n)2872 2557 y Fe(g)146
2727 y Fi(>)304 2735 y Fh(assign\("\);)146 2850 y Fi(>)304
2858 y Fh(An2:=evalm\(a[n]*A+b[n]\);)367 3370 y Fc(A)n(n2)41
b Fl(:=)713 2991 y Ff(2)713 3166 y(6)713 3226 y(6)713
3285 y(6)713 3345 y(6)713 3405 y(6)713 3465 y(6)713 3529
y(4)874 3105 y Fe(\000)p Fl(174)1098 3069 y Fi(n)1167
3105 y Fl(+)22 b(2)17 b(116)1478 3069 y Fi(n)1669 3038
y Fl(26)p 1669 3082 V 1669 3174 a(29)1793 3105 y(174)1940
3069 y Fi(n)2009 3105 y Fe(\000)2118 3038 y Fl(26)p 2118
3082 V 2118 3174 a(29)2242 3105 y(116)2389 3069 y Fi(n)2553
3038 y Fl(18)p 2553 3082 V 2553 3174 a(29)2677 3105 y(174)2824
3069 y Fi(n)2893 3105 y Fe(\000)3002 3038 y Fl(18)p 3002
3082 V 3002 3174 a(29)3126 3105 y(116)3273 3069 y Fi(n)821
3377 y Fe(\000)908 3309 y Fl(1)p 908 3354 49 4 v 908
3445 a(2)984 3377 y(174)1131 3341 y Fi(n)1200 3377 y
Fl(+)1308 3309 y(1)p 1308 3354 V 1308 3445 a(2)1383 3377
y(116)1530 3341 y Fi(n)1669 3309 y Fl(71)p 1669 3354
98 4 v 1669 3445 a(58)1793 3377 y(174)1940 3341 y Fi(n)2009
3377 y Fe(\000)2118 3309 y Fl(13)p 2118 3354 V 2118 3445
a(58)2242 3377 y(116)2389 3341 y Fi(n)2577 3309 y Fl(9)p
2553 3354 V 2553 3445 a(58)2677 3377 y(174)2824 3341
y Fi(n)2893 3377 y Fe(\000)3027 3309 y Fl(9)p 3002 3354
V 3002 3445 a(58)3126 3377 y(116)3273 3341 y Fi(n)821
3648 y Fe(\000)908 3581 y Fl(5)p 908 3626 49 4 v 908
3717 a(2)984 3648 y(174)1131 3612 y Fi(n)1200 3648 y
Fl(+)1308 3581 y(5)p 1308 3626 V 1308 3717 a(2)1383 3648
y(116)1530 3612 y Fi(n)1669 3581 y Fl(65)p 1669 3626
98 4 v 1669 3717 a(58)1793 3648 y(174)1940 3612 y Fi(n)2009
3648 y Fe(\000)2118 3581 y Fl(65)p 2118 3626 V 2118 3717
a(58)2242 3648 y(116)2389 3612 y Fi(n)2529 3581 y Fl(103)p
2529 3626 147 4 v 2553 3717 a(58)2702 3648 y(174)2849
3612 y Fi(n)2917 3648 y Fe(\000)3027 3581 y Fl(45)p 3027
3626 98 4 v 3027 3717 a(58)3151 3648 y(116)3298 3612
y Fi(n)3386 2991 y Ff(3)3386 3166 y(7)3386 3226 y(7)3386
3285 y(7)3386 3345 y(7)3386 3405 y(7)3386 3465 y(7)3386
3529 y(5)146 3818 y Fi(>)304 3826 y Fh(iszero\(An-An2\);)1820
4030 y Fc(true)0 4161 y Fj(Exercice)53 b(4)146 4277 y
Fi(>)304 4285 y Fh(A:=matrix\([[a,0,0,0,b],)k([0,a,0,b,0],)e
([0,1,2,1,0],)f([0,b,0,a,0],)h([b,0,0,0,a]]\);)1393 4876
y Fg(A)28 b Fl(:=)1624 4407 y Ff(2)1624 4582 y(6)1624
4642 y(6)1624 4702 y(6)1624 4762 y(6)1624 4822 y(6)1624
4881 y(6)1624 4941 y(6)1624 5001 y(6)1624 5061 y(6)1624
5124 y(4)1732 4526 y Fg(a)85 b Fl(0)f(0)g(0)89 b Fg(b)1734
4707 y Fl(0)84 b Fg(a)f Fl(0)88 b Fg(b)h Fl(0)1734 4888
y(0)c(1)f(2)g(1)h(0)1734 5068 y(0)j Fg(b)h Fl(0)83 b
Fg(a)h Fl(0)1737 5249 y Fg(b)90 b Fl(0)84 b(0)g(0)g Fg(a)2360
4407 y Ff(3)2360 4582 y(7)2360 4642 y(7)2360 4702 y(7)2360
4762 y(7)2360 4822 y(7)2360 4881 y(7)2360 4941 y(7)2360
5001 y(7)2360 5061 y(7)2360 5124 y(5)146 5405 y Fi(>)304
5413 y Fh(P:=factor\(charpoly\(A,X\)\);)1030 5616 y Fg(P)42
b Fl(:=)27 b(\()p Fg(X)j Fe(\000)23 b Fl(2\))17 b(\()p
Fe(\000)p Fg(b)22 b Fl(+)g Fg(a)g Fe(\000)h Fg(X)8 b
Fl(\))2194 5575 y Fd(2)2250 5616 y Fl(\()p Fg(b)22 b
Fl(+)g Fg(a)h Fe(\000)f Fg(X)8 b Fl(\))2749 5575 y Fd(2)1885
5944 y Fl(5)p eop
%%Page: 6 6
6 5 bop 0 84 a Fl(Corrig)m(\023)-46 b(e)33 b(TP1)g Fk(Maple)2262
b Fl(Alg)m(\022)-46 b(ebre)33 b(lin)m(\023)-46 b(eaire)p
0 124 3820 4 v 146 368 a Fi(>)304 376 y Fh(eig:=eigenvects\(A\);)230
580 y Fc(eig)36 b Fl(:=)28 b([)p Fe(\000)p Fg(b)23 b
Fl(+)f Fg(a;)33 b Fl(2)p Fg(;)g Fe(f)p Fl([)p Fe(\000)p
Fl(1)p Fg(;)h Fl(0)p Fg(;)f Fl(0)p Fg(;)g Fl(0)p Fg(;)g
Fl(1])p Fg(;)g Fl([0)p Fg(;)h Fe(\000)p Fl(1)p Fg(;)f
Fl(0)p Fg(;)g Fl(1)p Fg(;)g Fl(0])p Fe(g)p Fl(])p Fg(;)g
Fl([2)p Fg(;)h Fl(1)p Fg(;)f Fe(f)p Fl([0)p Fg(;)g Fl(0)p
Fg(;)g Fl(1)p Fg(;)g Fl(0)p Fg(;)g Fl(0])p Fe(g)p Fl(])p
Fg(;)396 782 y Fl([)p Fg(b)23 b Fl(+)f Fg(a;)33 b Fl(2)p
Fg(;)g Fe(f)855 642 y Ff(\024)891 782 y Fl(0)p Fg(;)1010
715 y Fl(1)p 1010 759 49 4 v 1010 851 a(2)1086 782 y
Fg(b)22 b Fl(+)1257 715 y(1)p 1257 759 V 1257 851 a(2)1332
782 y Fg(a)h Fe(\000)f Fl(1)p Fg(;)34 b Fl(1)p Fg(;)1734
715 y Fl(1)p 1734 759 V 1734 851 a(2)1809 782 y Fg(b)23
b Fl(+)1981 715 y(1)p 1981 759 V 1981 851 a(2)2056 782
y Fg(a)f Fe(\000)h Fl(1)p Fg(;)33 b Fl(0)2370 642 y Ff(\025)2439
782 y Fg(;)h Fl([1)p Fg(;)f Fl(0)p Fg(;)g Fl(0)p Fg(;)g
Fl(0)p Fg(;)g Fl(1])p Fe(g)p Fl(])146 979 y Fi(>)304
987 y Fh(vp:=eig[3];)420 1246 y Fc(vp)h Fl(:=)27 b([)p
Fg(b)c Fl(+)f Fg(a;)33 b Fl(2)p Fg(;)h Fe(f)1139 1106
y Ff(\024)1174 1246 y Fl(0)p Fg(;)1293 1179 y Fl(1)p
1293 1223 V 1293 1315 a(2)1369 1246 y Fg(b)22 b Fl(+)1540
1179 y(1)p 1540 1223 V 1540 1315 a(2)1616 1246 y Fg(a)g
Fe(\000)h Fl(1)p Fg(;)33 b Fl(1)p Fg(;)2017 1179 y Fl(1)p
2017 1223 V 2017 1315 a(2)2092 1246 y Fg(b)23 b Fl(+)2264
1179 y(1)p 2264 1223 V 2264 1315 a(2)2339 1246 y Fg(a)f
Fe(\000)h Fl(1)p Fg(;)33 b Fl(0)2653 1106 y Ff(\025)2722
1246 y Fg(;)h Fl([1)p Fg(;)f Fl(0)p Fg(;)g Fl(0)p Fg(;)g
Fl(0)p Fg(;)g Fl(1])p Fe(g)p Fl(])146 1443 y Fi(>)304
1451 y Fh(vects:=vp[3];)584 1710 y Fc(ve)-5 b(cts)35
b Fl(:=)28 b Fe(f)1002 1570 y Ff(\024)1038 1710 y Fl(0)p
Fg(;)1157 1643 y Fl(1)p 1157 1688 V 1157 1779 a(2)1232
1710 y Fg(b)23 b Fl(+)1404 1643 y(1)p 1404 1688 V 1404
1779 a(2)1479 1710 y Fg(a)f Fe(\000)h Fl(1)p Fg(;)33
b Fl(1)p Fg(;)1880 1643 y Fl(1)p 1880 1688 V 1880 1779
a(2)1956 1710 y Fg(b)22 b Fl(+)2127 1643 y(1)p 2127 1688
V 2127 1779 a(2)2202 1710 y Fg(a)h Fe(\000)f Fl(1)p Fg(;)34
b Fl(0)2517 1570 y Ff(\025)2586 1710 y Fg(;)f Fl([1)p
Fg(;)g Fl(0)p Fg(;)g Fl(0)p Fg(;)h Fl(0)p Fg(;)f Fl(1])p
Fe(g)146 1907 y Fi(>)304 1915 y Fh(v:=op\(2,vects\);)1021
2175 y Fg(v)f Fl(:=)1230 2034 y Ff(\024)1266 2175 y Fl(0)p
Fg(;)1385 2107 y Fl(1)p 1385 2152 V 1385 2243 a(2)1461
2175 y Fg(b)22 b Fl(+)1632 2107 y(1)p 1632 2152 V 1632
2243 a(2)1708 2175 y Fg(a)g Fe(\000)h Fl(1)p Fg(;)33
b Fl(1)p Fg(;)2109 2107 y Fl(1)p 2109 2152 V 2109 2243
a(2)2184 2175 y Fg(b)23 b Fl(+)2356 2107 y(1)p 2356 2152
V 2356 2243 a(2)2431 2175 y Fg(a)f Fe(\000)h Fl(1)p Fg(;)33
b Fl(0)2745 2034 y Ff(\025)146 2371 y Fi(>)304 2379 y
Fh(eq:=v[2];)1507 2626 y Fc(e)-5 b(q)36 b Fl(:=)1768
2558 y(1)p 1768 2603 V 1768 2694 a(2)1844 2626 y Fg(b)22
b Fl(+)2015 2558 y(1)p 2015 2603 V 2015 2694 a(2)2091
2626 y Fg(a)g Fe(\000)h Fl(1)146 2796 y Fi(>)304 2804
y Fh(sol:=solve\(eq\);)1346 3007 y Fc(sol)37 b Fl(:=)28
b Fe(f)p Fg(a)g Fl(=)f Fe(\000)p Fg(b)c Fl(+)f(2)p Fg(;)33
b(b)28 b Fl(=)g Fg(b)p Fe(g)0 3138 y Fl(On)33 b(en)g(d)m(\023)-46
b(eduit)33 b(que)h(si)f Fg(a)22 b Fl(+)g Fg(b)28 b Fe(6)p
Fl(=)g(2,)k(A)h(est)g(diagonalisable.)0 3259 y(Si)g Fg(a)22
b Fl(+)g Fg(b)28 b Fl(=)g(2)k(:)146 3374 y Fi(>)304 3382
y Fh(assign\(sol\);)146 3498 y Fi(>)304 3506 y Fh(AA:=map\(eval,A\);)
884 4098 y Fc(AA)c Fl(:=)1187 3629 y Ff(2)1187 3804 y(6)1187
3864 y(6)1187 3923 y(6)1187 3983 y(6)1187 4043 y(6)1187
4103 y(6)1187 4163 y(6)1187 4222 y(6)1187 4282 y(6)1187
4346 y(4)1295 3748 y Fe(\000)p Fg(b)23 b Fl(+)f(2)202
b(0)h(0)f(0)326 b Fg(b)1414 3928 y Fl(0)203 b Fe(\000)p
Fg(b)23 b Fl(+)f(2)83 b(0)206 b Fg(b)326 b Fl(0)1414
4109 y(0)c(1)203 b(2)f(1)322 b(0)1414 4290 y(0)k Fg(b)207
b Fl(0)82 b Fe(\000)p Fg(b)24 b Fl(+)e(2)202 b(0)1418
4470 y Fg(b)326 b Fl(0)203 b(0)f(0)g Fe(\000)p Fg(b)24
b Fl(+)e(2)2869 3629 y Ff(3)2869 3804 y(7)2869 3864 y(7)2869
3923 y(7)2869 3983 y(7)2869 4043 y(7)2869 4103 y(7)2869
4163 y(7)2869 4222 y(7)2869 4282 y(7)2869 4346 y(5)146
4626 y Fi(>)304 4634 y Fh(eigenvects\(AA\);)139 4837
y Fl([)p Fe(\000)p Fl(2)17 b Fg(b)22 b Fl(+)g(2)p Fg(;)33
b Fl(2)p Fg(;)h Fe(f)p Fl([0)p Fg(;)e Fe(\000)p Fl(1)p
Fg(;)i Fl(0)p Fg(;)f Fl(1)p Fg(;)g Fl(0])p Fg(;)g Fl([)p
Fe(\000)p Fl(1)p Fg(;)h Fl(0)p Fg(;)f Fl(0)p Fg(;)g Fl(0)p
Fg(;)g Fl(1])p Fe(g)p Fl(])p Fg(;)g Fl([2)p Fg(;)h Fl(3)p
Fg(;)f Fe(f)p Fl([1)p Fg(;)g Fl(0)p Fg(;)g Fl(0)p Fg(;)g
Fl(0)p Fg(;)g Fl(1])p Fg(;)g Fl([0)p Fg(;)g Fl(0)p Fg(;)g
Fl(1)p Fg(;)g Fl(0)p Fg(;)g Fl(0])p Fe(g)p Fl(])0 4968
y Fb(Conclusion)38 b Fl(:)56 b(2)39 b(est)h(une)f(v)-5
b(aleur)40 b(propre)f(d'ordre)g(3,)i(mais)e(l'espace)i(propre)e(asso)s
(ci)m(\023)-46 b(e)40 b(est)g(de)f(di-)0 5089 y(mension)34
b(seulemen)m(t)h(2,)d Fg(A)h Fl(n'est)h(donc)f(pas)g(diagonalisable.)
1885 5944 y(6)p eop
%%Page: 7 7
7 6 bop 0 84 a Fl(Corrig)m(\023)-46 b(e)33 b(TP1)g Fk(Maple)2262
b Fl(Alg)m(\022)-46 b(ebre)33 b(lin)m(\023)-46 b(eaire)p
0 124 3820 4 v 0 407 a Fj(Exercice)53 b(5)146 523 y Fi(>)304
531 y Fh(A:=matrix\(3,3,[1,0,0,0,0,l)q(ambd)q(a,0)q(,2,3)q(]\);)1526
942 y Fg(A)27 b Fl(:=)1757 652 y Ff(2)1757 827 y(6)1757
887 y(6)1757 947 y(6)1757 1010 y(4)1865 772 y Fl(1)83
b(0)k(0)1865 953 y(0)c(0)g Fg(\025)1865 1133 y Fl(0)g(2)k(3)2227
652 y Ff(3)2227 827 y(7)2227 887 y(7)2227 947 y(7)2227
1010 y(5)146 1289 y Fi(>)304 1297 y Fh(X:=matrix\(3,3,[a,b,c,d,e,f)q
(,g,h)q(,i])q(\);)1512 1708 y Fg(X)35 b Fl(:=)1759 1418
y Ff(2)1759 1594 y(6)1759 1654 y(6)1759 1713 y(6)1759
1777 y(4)1867 1539 y Fg(a)91 b(b)99 b(c)1867 1720 y(d)89
b(e)f(f)1867 1900 y(g)f(h)96 b(i)2241 1418 y Ff(3)2241
1594 y(7)2241 1654 y(7)2241 1713 y(7)2241 1777 y(5)146
2056 y Fi(>)304 2064 y Fh(evalm\(X&*A)54 b(-)d(A&*X\);)920
2185 y Ff(2)920 2361 y(6)920 2420 y(6)920 2480 y(6)920
2544 y(4)1219 2306 y Fl(0)426 b(2)17 b Fg(c)k Fe(\000)i
Fg(b)360 b(b)17 b(\025)22 b Fl(+)g(2)17 b Fg(c)1095 2486
y(d)22 b Fe(\000)h Fg(\025)17 b(g)252 b Fl(2)17 b Fg(f)33
b Fe(\000)22 b Fg(h)17 b(\025)182 b(e)17 b(\025)22 b
Fl(+)g(3)17 b Fg(f)33 b Fe(\000)22 b Fg(\025)17 b(i)1028
2667 y Fe(\000)p Fl(2)g Fg(g)25 b Fe(\000)e Fl(2)17 b
Fg(d)82 b Fl(2)17 b Fg(i)22 b Fe(\000)h Fl(2)17 b Fg(e)k
Fe(\000)i Fl(3)17 b Fg(h)190 b(h)17 b(\025)22 b Fe(\000)h
Fl(2)17 b Fg(f)2832 2185 y Ff(3)2832 2361 y(7)2832 2420
y(7)2832 2480 y(7)2832 2544 y(5)146 2823 y Fi(>)304 2831
y Fh(convert\(",set\);)37 3034 y Fe(f)p Fl(2)g Fg(i)22
b Fe(\000)h Fl(2)17 b Fg(e)k Fe(\000)i Fl(3)17 b Fg(h;)33
b(h)17 b(\025)22 b Fe(\000)g Fl(2)17 b Fg(f)5 b(;)33
b Fl(0)p Fg(;)g(e)17 b(\025)22 b Fl(+)g(3)17 b Fg(f)32
b Fe(\000)23 b Fg(\025)17 b(i;)33 b(d)22 b Fe(\000)h
Fg(\025)17 b(g)t(;)32 b Fl(2)17 b Fg(f)32 b Fe(\000)23
b Fg(h)17 b(\025;)32 b(b)17 b(\025)23 b Fl(+)f(2)17 b
Fg(c;)32 b Fl(2)17 b Fg(c)22 b Fe(\000)g Fg(b;)34 b Fe(\000)p
Fl(2)17 b Fg(g)25 b Fe(\000)e Fl(2)17 b Fg(d)203 3167
y Fe(g)146 3293 y Fi(>)304 3301 y Fh(sol:=solve\("\);)124
3548 y Fc(sol)37 b Fl(:=)28 b Fe(f)p Fg(e)g Fl(=)f Fg(i)22
b Fe(\000)798 3481 y Fl(3)p 798 3525 49 4 v 798 3617
a(2)873 3548 y Fg(h;)34 b(i)28 b Fl(=)f Fg(i;)34 b(\025)28
b Fl(=)f Fg(\025;)33 b(h)28 b Fl(=)g Fg(h;)33 b(b)28
b Fl(=)g(0)p Fg(;)33 b(f)38 b Fl(=)2339 3481 y(1)p 2339
3525 V 2339 3617 a(2)2414 3548 y Fg(h)17 b(\025;)33 b(d)27
b Fl(=)h(0)p Fg(;)33 b(c)28 b Fl(=)f(0)p Fg(;)33 b(g)e
Fl(=)d(0)p Fe(g)p Fg(;)290 3781 y Fe(f)p Fg(c)f Fl(=)h
Fg(c;)33 b(g)e Fl(=)c Fg(g)t(;)33 b(e)28 b Fl(=)f Fg(i)c
Fe(\000)1248 3714 y Fl(3)p 1248 3759 V 1248 3850 a(2)1324
3781 y Fg(h;)33 b(i)28 b Fl(=)g Fg(i;)33 b(h)28 b Fl(=)g
Fg(h;)33 b(b)28 b Fl(=)g(2)17 b Fg(c;)33 b(f)38 b Fl(=)28
b Fe(\000)2620 3714 y Fl(1)p 2620 3759 V 2620 3850 a(2)2695
3781 y Fg(h;)34 b(d)27 b Fl(=)h Fe(\000)p Fg(g)t(;)33
b(\025)27 b Fl(=)h Fe(\000)p Fl(1)p Fe(g)146 3951 y Fi(>)304
3959 y Fh(assign\(sol[1]\);)146 4075 y Fi(>)304 4083
y Fh(map\(eval,X\);)1437 4220 y Ff(2)1437 4395 y(6)1437
4455 y(6)1437 4515 y(6)1437 4575 y(6)1437 4638 y(4)1545
4325 y Fg(a)207 b Fl(0)290 b(0)1546 4511 y(0)84 b Fg(i)23
b Fe(\000)1844 4443 y Fl(3)p 1844 4488 V 1844 4579 a(2)1920
4511 y Fg(h)2069 4443 y Fl(1)p 2069 4488 V 2069 4579
a(2)2144 4511 y Fg(h)17 b(\025)1546 4777 y Fl(0)205 b
Fg(h)294 b(i)2315 4220 y Ff(3)2315 4395 y(7)2315 4455
y(7)2315 4515 y(7)2315 4575 y(7)2315 4638 y(5)0 4919
y Fb(Conclusion)32 b Fl(:)43 b(Si)33 b Fg(\025)27 b Fe(6)p
Fl(=)h Fe(\000)p Fl(1,)33 b(l'alg)m(\022)-46 b(ebre)33
b(des)h(comm)m(utan)m(ts)g(de)f(A)g(est)g(de)g(dimension)h(3.)146
5035 y Fi(>)304 5043 y Fh(unassign\('a','b','c','d',')q(e',')q(f',)q
('g',)q('h',)q('i',)58 b('lambda'\);)146 5159 y Fi(>)304
5167 y Fh(assign\(sol[2]\);)146 5283 y Fi(>)304 5291
y Fh(map\(eval,X\);)1885 5944 y Fl(7)p eop
%%Page: 8 8
8 7 bop 0 84 a Fl(Corrig)m(\023)-46 b(e)33 b(TP1)g Fk(Maple)2262
b Fl(Alg)m(\022)-46 b(ebre)33 b(lin)m(\023)-46 b(eaire)p
0 124 3820 4 v 1397 337 a Ff(2)1397 512 y(6)1397 572
y(6)1397 632 y(6)1397 692 y(6)1397 755 y(4)1543 442 y
Fg(a)216 b Fl(2)17 b Fg(c)266 b(c)1505 628 y Fe(\000)p
Fg(g)87 b(i)22 b Fe(\000)1881 560 y Fl(3)p 1881 605 49
4 v 1881 696 a(2)1956 628 y Fg(h)83 b Fe(\000)2182 560
y Fl(1)p 2182 605 V 2182 696 a(2)2258 628 y Fg(h)1544
894 y(g)245 b(h)296 b(i)2356 337 y Ff(3)2356 512 y(7)2356
572 y(7)2356 632 y(7)2356 692 y(7)2356 755 y(5)0 1036
y Fb(Conclusion)32 b Fl(:)43 b(Si)33 b Fg(\025)27 b Fl(=)h
Fe(\000)p Fl(1,)33 b(l'alg)m(\022)-46 b(ebre)33 b(des)h(comm)m(utan)m
(ts)g(de)f Fg(A)g Fl(est)g(de)g(dimension)h(5.)0 1157
y Fj(Exercice)53 b(6)146 1273 y Fi(>)304 1281 y Fh
(A1:=matrix\([[a1,b1,c1,d1],)58 b([0,e1,f1,g1],)d([0,0,h1,i1],)f
([0,0,0,j1]]\);)1306 1782 y Fc(A1)42 b Fl(:=)1600 1402
y Ff(2)1600 1578 y(6)1600 1637 y(6)1600 1697 y(6)1600
1757 y(6)1600 1817 y(6)1600 1877 y(6)1600 1940 y(4)1708
1522 y Fc(a1)96 b(b1)j(c1)g(d1)1740 1703 y Fl(0)115 b
Fc(e1)107 b(f1)h(g1)1740 1883 y Fl(0)145 b(0)113 b Fc(h1)106
b(i1)1740 2064 y Fl(0)145 b(0)g(0)125 b Fc(j1)2446 1402
y Ff(3)2446 1578 y(7)2446 1637 y(7)2446 1697 y(7)2446
1757 y(7)2446 1817 y(7)2446 1877 y(7)2446 1940 y(5)146
2220 y Fi(>)304 2228 y Fh(A2:=matrix\([[a2,b2,c2,d2],)58
b([0,e2,f2,g2],)d([0,0,h2,i2],)f([0,0,0,j2]]\);)1306
2729 y Fc(A2)42 b Fl(:=)1600 2350 y Ff(2)1600 2525 y(6)1600
2585 y(6)1600 2645 y(6)1600 2704 y(6)1600 2764 y(6)1600
2824 y(6)1600 2888 y(4)1708 2470 y Fc(a2)96 b(b2)j(c2)g(d2)1740
2650 y Fl(0)115 b Fc(e2)107 b(f2)h(g2)1740 2831 y Fl(0)145
b(0)113 b Fc(h2)106 b(i2)1740 3011 y Fl(0)145 b(0)g(0)125
b Fc(j2)2446 2350 y Ff(3)2446 2525 y(7)2446 2585 y(7)2446
2645 y(7)2446 2704 y(7)2446 2764 y(7)2446 2824 y(7)2446
2888 y(5)146 3167 y Fi(>)304 3175 y Fh(evalm\(A1)53 b(&*)f(A2\);)154
3297 y Ff(2)154 3472 y(6)154 3532 y(6)154 3592 y(6)154
3652 y(6)154 3711 y(6)154 3771 y(6)154 3835 y(4)262 3417
y Fc(a1)30 b(a2)96 b(a1)30 b(b2)35 b Fl(+)22 b Fc(b1)30
b(e2)96 b(a1)30 b(c2)35 b Fl(+)22 b Fc(b1)30 b(f2)35
b Fl(+)22 b Fc(c1)30 b(h2)97 b(a1)29 b(d2)36 b Fl(+)22
b Fc(b1)29 b(g2)36 b Fl(+)22 b Fc(c1)30 b(i2)35 b Fl(+)22
b Fc(d1)30 b(j2)359 3597 y Fl(0)359 b Fc(e1)30 b(e2)462
b(e1)29 b(f2)36 b Fl(+)22 b Fc(f1)30 b(h2)474 b(e1)30
b(g2)35 b Fl(+)22 b Fc(f1)30 b(i2)35 b Fl(+)22 b Fc(g1)30
b(j2)359 3778 y Fl(0)451 b(0)700 b Fc(h1)30 b(h2)807
b(h1)30 b(i2)35 b Fl(+)22 b Fc(i1)30 b(j2)359 3959 y
Fl(0)451 b(0)797 b(0)1063 b Fc(j1)30 b(j2)3599 3297 y
Ff(3)3599 3472 y(7)3599 3532 y(7)3599 3592 y(7)3599 3652
y(7)3599 3711 y(7)3599 3771 y(7)3599 3835 y(5)146 4114
y Fi(>)304 4122 y Fh(evalm\(A1^\(-1\)\);)139 4256 y Ff(2)139
4431 y(6)139 4491 y(6)139 4551 y(6)139 4610 y(6)139 4670
y(6)139 4730 y(6)139 4790 y(6)139 4850 y(6)139 4909 y(6)139
4969 y(6)139 5029 y(6)139 5093 y(4)289 4307 y Fl(1)p
257 4351 114 4 v 257 4443 a Fc(a1)463 4374 y Fe(\000)616
4307 y Fc(b1)p 550 4351 238 4 v 550 4443 a(a1)h(e1)882
4374 y Fe(\000)969 4307 y(\000)p Fc(b1)g(f1)k Fl(+)22
b Fc(e1)30 b(c1)p 969 4351 649 4 v 1110 4443 a(a1)f(e1)h(h1)1721
4307 y Fe(\000)p Fc(b1)g(f1)g(i1)35 b Fl(+)22 b Fc(b1)30
b(g1)g(h1)35 b Fl(+)22 b Fc(e1)30 b(c1)g(i1)35 b Fe(\000)23
b Fc(e1)30 b(d1)g(h1)p 1721 4351 1841 4 v 2403 4443 a(a1)f(e1)h(h1)g
(j1)289 4651 y Fl(0)607 4583 y(1)p 577 4628 109 4 v 577
4719 a Fc(e1)1087 4651 y Fe(\000)1247 4583 y Fc(f1)p
1174 4628 238 4 v 1174 4719 a(e1)g(h1)2360 4583 y(f1)g(i1)35
b Fe(\000)23 b Fc(g1)30 b(h1)p 2360 4628 563 4 v 2467
4719 a(e1)g(h1)g(j1)289 4923 y Fl(0)269 b(0)1230 4855
y(1)p 1198 4900 114 4 v 1198 4991 a Fc(h1)2481 4923 y
Fe(\000)2633 4855 y Fc(i1)p 2568 4900 224 4 v 2568 4991
a(h1)30 b(j1)289 5194 y Fl(0)269 b(0)574 b(0)2617 5127
y(1)p 2595 5171 94 4 v 2595 5263 a Fc(j1)3613 4256 y
Ff(3)3613 4431 y(7)3613 4491 y(7)3613 4551 y(7)3613 4610
y(7)3613 4670 y(7)3613 4730 y(7)3613 4790 y(7)3613 4850
y(7)3613 4909 y(7)3613 4969 y(7)3613 5029 y(7)3613 5093
y(5)1885 5944 y Fl(8)p eop
%%Page: 9 9
9 8 bop 0 84 a Fl(Corrig)m(\023)-46 b(e)33 b(TP1)g Fk(Maple)2262
b Fl(Alg)m(\022)-46 b(ebre)33 b(lin)m(\023)-46 b(eaire)p
0 124 3820 4 v 146 368 a Fi(>)304 376 y Fh(A:=matrix\([[1,2,3,4],)57
b([0,1,2,3],)d([0,0,1,2],)f([0,0,0,1]]\);)1464 878 y
Fg(A)28 b Fl(:=)1695 498 y Ff(2)1695 674 y(6)1695 733
y(6)1695 793 y(6)1695 853 y(6)1695 913 y(6)1695 972 y(6)1695
1036 y(4)1803 618 y Fl(1)83 b(2)g(3)g(4)1803 799 y(0)g(1)g(2)g(3)1803
979 y(0)g(0)g(1)g(2)1803 1160 y(0)g(0)g(0)g(1)2289 498
y Ff(3)2289 674 y(7)2289 733 y(7)2289 793 y(7)2289 853
y(7)2289 913 y(7)2289 972 y(7)2289 1036 y(5)146 1316
y Fi(>)304 1324 y Fh(B:=matrix\([[1,1,0,0],)57 b([0,1,1,0],)d
([0,0,1,1],)f([0,0,0,1]]\);)1461 1825 y Fg(B)33 b Fl(:=)1698
1445 y Ff(2)1698 1621 y(6)1698 1681 y(6)1698 1740 y(6)1698
1800 y(6)1698 1860 y(6)1698 1920 y(6)1698 1983 y(4)1806
1565 y Fl(1)83 b(1)g(0)g(0)1806 1746 y(0)g(1)g(1)g(0)1806
1927 y(0)g(0)g(1)g(1)1806 2107 y(0)g(0)g(0)g(1)2292 1445
y Ff(3)2292 1621 y(7)2292 1681 y(7)2292 1740 y(7)2292
1800 y(7)2292 1860 y(7)2292 1920 y(7)2292 1983 y(5)0
2255 y Fl(On)33 b(c)m(herc)m(he)h Fg(A)582 2270 y Fd(1)650
2255 y Fe(2)28 b(T)d Fl(\()p Fb(R)p Fg(;)17 b Fl(4\),)32
b(in)m(v)m(ersible,)j(tel)e(que)h Fg(A)1989 2270 y Fd(1)2051
2255 y Fe(\001)21 b Fg(A)28 b Fl(=)g Fg(B)f Fe(\001)22
b Fg(A)2529 2270 y Fd(1)2568 2255 y Fl(.)146 2371 y Fi(>)304
2379 y Fh(convert\(evalm\(A1)55 b(&*)d(A)g(-)f(B)h(&*)f(A1\),set\);)164
2582 y Fe(f)p Fl(2)17 b Fc(a1)35 b Fe(\000)22 b Fc(e1)14
b Fg(;)33 b Fl(3)17 b Fc(a1)35 b Fl(+)22 b(2)17 b Fc(b1)34
b Fe(\000)23 b Fc(f1)13 b Fg(;)34 b Fl(4)17 b Fc(a1)34
b Fl(+)22 b(3)17 b Fc(b1)35 b Fl(+)22 b(2)17 b Fc(c1)35
b Fe(\000)22 b Fc(g1)14 b Fg(;)33 b Fl(2)17 b Fc(e1)35
b Fe(\000)22 b Fc(h1)13 b Fg(;)34 b Fl(3)17 b Fc(e1)35
b Fl(+)22 b(2)17 b Fc(f1)34 b Fe(\000)23 b Fc(i1)13 b
Fg(;)34 b Fl(0)p Fg(;)330 2715 y Fl(2)17 b Fc(h1)35 b
Fe(\000)23 b Fc(j1)13 b Fe(g)146 2841 y Fi(>)304 2849
y Fh(solve\("\);)248 3053 y Fe(f)p Fc(j1)41 b Fl(=)28
b(8)17 b Fc(a1)12 b Fg(;)34 b Fc(e1)40 b Fl(=)28 b(2)17
b Fc(a1)c Fg(;)33 b Fc(a1)41 b Fl(=)27 b Fc(a1)13 b Fg(;)34
b Fc(c1)41 b Fl(=)27 b Fc(c1)13 b Fg(;)34 b Fc(b1)41
b Fl(=)27 b Fc(b1)13 b Fg(;)34 b Fc(f1)41 b Fl(=)27 b(3)17
b Fc(a1)35 b Fl(+)22 b(2)17 b Fc(b1)12 b Fg(;)34 b Fc(h1)41
b Fl(=)27 b(4)17 b Fc(a1)c Fg(;)414 3186 y Fc(i1)41 b
Fl(=)28 b(12)17 b Fc(a1)34 b Fl(+)22 b(4)17 b Fc(b1)c
Fg(;)33 b Fc(g1)41 b Fl(=)28 b(4)17 b Fc(a1)34 b Fl(+)22
b(3)17 b Fc(b1)35 b Fl(+)22 b(2)17 b Fc(c1)c Fe(g)146
3312 y Fi(>)304 3320 y Fh(assign\("\);)146 3436 y Fi(>)304
3444 y Fh(map\(eval,A1\);)912 3566 y Ff(2)912 3741 y(6)912
3801 y(6)912 3861 y(6)912 3920 y(6)912 3980 y(6)912 4040
y(6)912 4104 y(4)1020 3686 y Fc(a1)131 b(b1)314 b(c1)604
b(d1)1052 3866 y Fl(0)115 b(2)17 b Fc(a1)96 b Fl(3)17
b Fc(a1)34 b Fl(+)22 b(2)17 b Fc(b1)96 b Fl(4)17 b Fc(a1)35
b Fl(+)22 b(3)17 b Fc(b1)34 b Fl(+)22 b(2)17 b Fc(c1)1052
4047 y Fl(0)180 b(0)295 b(4)17 b Fc(a1)365 b Fl(12)17
b Fc(a1)34 b Fl(+)22 b(4)17 b Fc(b1)1052 4227 y Fl(0)180
b(0)359 b(0)589 b(8)17 b Fc(a1)2841 3566 y Ff(3)2841
3741 y(7)2841 3801 y(7)2841 3861 y(7)2841 3920 y(7)2841
3980 y(7)2841 4040 y(7)2841 4104 y(5)146 4370 y Fl(On)33
b(a)f(donc)h(plusieurs)i(solutions,)e(don)m(t)g(celle-ci)h(:)146
4485 y Fi(>)304 4493 y Fh(P:=subs\()p Fe(f)p Fh(a1=1,b1=0,c1=0,d1=0)q
Fe(g)p Fh(,"\);)1438 4995 y Fg(P)41 b Fl(:=)1672 4615
y Ff(2)1672 4791 y(6)1672 4850 y(6)1672 4910 y(6)1672
4970 y(6)1672 5030 y(6)1672 5090 y(6)1672 5153 y(4)1780
4735 y Fl(1)83 b(0)g(0)132 b(0)1780 4916 y(0)83 b(2)g(3)132
b(4)1780 5096 y(0)83 b(0)g(4)g(12)1780 5277 y(0)g(0)g(0)132
b(8)2315 4615 y Ff(3)2315 4791 y(7)2315 4850 y(7)2315
4910 y(7)2315 4970 y(7)2315 5030 y(7)2315 5090 y(7)2315
5153 y(5)146 5433 y Fi(>)304 5441 y Fh(iszero\(evalm\(P)55
b(&*)d(A)f(*)h(P^\(-1\))g(-)g(B\)\);)1820 5644 y Fc(true)1885
5944 y Fl(9)p eop
%%Page: 10 10
10 9 bop 0 84 a Fl(Corrig)m(\023)-46 b(e)33 b(TP1)g Fk(Maple)2262
b Fl(Alg)m(\022)-46 b(ebre)33 b(lin)m(\023)-46 b(eaire)p
0 124 3820 4 v 0 407 a Fj(Exercice)53 b(7)146 523 y Fi(>)304
531 y Fh(A:=matrix\(3,3,[a,1,b,1,c,d)q(,e,f)q(,-1)q(]\);)1485
942 y Fg(A)28 b Fl(:=)1716 652 y Ff(2)1716 827 y(6)1716
887 y(6)1716 947 y(6)1716 1010 y(4)1824 772 y Fg(a)88
b Fl(1)130 b Fg(b)1825 953 y Fl(1)93 b Fg(c)129 b(d)1827
1133 y(e)86 b(f)94 b Fe(\000)p Fl(1)2268 652 y Ff(3)2268
827 y(7)2268 887 y(7)2268 947 y(7)2268 1010 y(5)146 1289
y Fi(>)304 1297 y Fh(X:=vector\([1,1,0]\);)1625 1501
y Fg(X)36 b Fl(:=)27 b([1)p Fg(;)34 b Fl(1)p Fg(;)f Fl(0])146
1627 y Fi(>)304 1635 y Fh(Y:=vector\([1,2,1]\);)1631
1838 y Fg(Y)49 b Fl(:=)27 b([1)p Fg(;)33 b Fl(2)p Fg(;)g
Fl(1])146 1965 y Fi(>)304 1973 y Fh(Z:=vector\([1,1,2]\);)1633
2176 y Fg(Z)h Fl(:=)28 b([1)p Fg(;)33 b Fl(1)p Fg(;)g
Fl(2])146 2303 y Fi(>)304 2311 y Fh(evalm\(A)53 b(&*)f(X)f(-)h
(lambda[X])h(*)f(X\);)1265 2514 y Fl([)-16 b Fg(a)22
b Fl(+)g(1)g Fe(\000)g Fg(\025)1674 2529 y Fi(X)1742
2514 y Fg(;)33 b Fl(1)22 b(+)g Fg(c)g Fe(\000)h Fg(\025)2192
2529 y Fi(X)2259 2514 y Fg(;)33 b(e)23 b Fl(+)f Fg(f)-6
b Fl(])146 2641 y Fi(>)304 2649 y Fh(S:=convert\(",set\);)1114
2852 y Fg(S)33 b Fl(:=)28 b Fe(f)p Fg(a)22 b Fl(+)g(1)g
Fe(\000)h Fg(\025)1787 2867 y Fi(X)1854 2852 y Fg(;)33
b Fl(1)22 b(+)g Fg(c)g Fe(\000)h Fg(\025)2304 2867 y
Fi(X)2371 2852 y Fg(;)33 b(e)23 b Fl(+)f Fg(f)11 b Fe(g)146
2978 y Fi(>)304 2986 y Fh(evalm\(A)53 b(&*)f(Y)f(-)h(lambda[Y])h(*)f
(Y\);)802 3190 y Fl([)-16 b Fg(a)22 b Fl(+)g(2)g(+)g
Fg(b)h Fe(\000)f Fg(\025)1373 3205 y Fi(Y)1434 3190 y
Fg(;)33 b Fl(1)22 b(+)g(2)17 b Fg(c)22 b Fl(+)g Fg(d)g
Fe(\000)g Fl(2)17 b Fg(\025)2186 3205 y Fi(Y)2246 3190
y Fg(;)34 b(e)22 b Fl(+)g(2)17 b Fg(f)32 b Fe(\000)23
b Fl(1)f Fe(\000)g Fg(\025)2945 3205 y Fi(Y)2989 3190
y Fl(])146 3316 y Fi(>)304 3324 y Fh(S:=S)52 b(union)h
(convert\(",set\);)0 3528 y Fg(S)33 b Fl(:=)28 b Fe(f)p
Fg(a)22 b Fl(+)g(2)g(+)g Fg(b)h Fe(\000)f Fg(\025)834
3543 y Fi(Y)895 3528 y Fg(;)33 b Fl(1)22 b(+)g(2)17 b
Fg(c)22 b Fl(+)g Fg(d)g Fe(\000)g Fl(2)17 b Fg(\025)1647
3543 y Fi(Y)1707 3528 y Fg(;)34 b(e)22 b Fl(+)g(2)17
b Fg(f)32 b Fe(\000)23 b Fl(1)f Fe(\000)g Fg(\025)2406
3543 y Fi(Y)2467 3528 y Fg(;)33 b(a)23 b Fl(+)f(1)g Fe(\000)g
Fg(\025)2926 3543 y Fi(X)2993 3528 y Fg(;)34 b Fl(1)22
b(+)g Fg(c)g Fe(\000)g Fg(\025)3443 3543 y Fi(X)3511
3528 y Fg(;)33 b(e)22 b Fl(+)g Fg(f)11 b Fe(g)146 3654
y Fi(>)304 3662 y Fh(evalm\(A)53 b(&*)f(Z)f(-)h(lambda[Z])h(*)f(Z\);)
809 3865 y Fl([)-17 b Fg(a)22 b Fl(+)g(1)g(+)g(2)17 b
Fg(b)22 b Fe(\000)h Fg(\025)1445 3880 y Fi(Z)1502 3865
y Fg(;)33 b Fl(1)22 b(+)g Fg(c)g Fl(+)g(2)17 b Fg(d)k
Fe(\000)i Fg(\025)2188 3880 y Fi(Z)2244 3865 y Fg(;)34
b(e)22 b Fl(+)g Fg(f)33 b Fe(\000)22 b Fl(2)g Fe(\000)h
Fl(2)17 b Fg(\025)2944 3880 y Fi(Z)2983 3865 y Fl(])146
3992 y Fi(>)304 4000 y Fh(S:=S)52 b(union)h(convert\(",set\);)0
4203 y Fg(S)33 b Fl(:=)28 b Fe(f)p Fg(a)22 b Fl(+)g(1)g(+)g(2)17
b Fg(b)22 b Fe(\000)h Fg(\025)900 4218 y Fi(Z)956 4203
y Fg(;)34 b Fl(1)22 b(+)g Fg(c)g Fl(+)g(2)17 b Fg(d)k
Fe(\000)i Fg(\025)1643 4218 y Fi(Z)1699 4203 y Fg(;)33
b(e)23 b Fl(+)f Fg(f)33 b Fe(\000)22 b Fl(2)g Fe(\000)h
Fl(2)17 b Fg(\025)2399 4218 y Fi(Z)2455 4203 y Fg(;)33
b(a)22 b Fl(+)g(2)g(+)g Fg(b)h Fe(\000)g Fg(\025)3076
4218 y Fi(Y)3136 4203 y Fg(;)34 b Fl(1)21 b(+)h(2)17
b Fg(c)22 b Fl(+)g Fg(d)g Fe(\000)g Fl(2)17 b Fg(\025)3888
4218 y Fi(Y)3948 4203 y Fg(;)166 4336 y(e)22 b Fl(+)g(2)17
b Fg(f)33 b Fe(\000)22 b Fl(1)g Fe(\000)h Fg(\025)805
4351 y Fi(Y)865 4336 y Fg(;)34 b(a)22 b Fl(+)g(1)g Fe(\000)h
Fg(\025)1325 4351 y Fi(X)1392 4336 y Fg(;)33 b Fl(1)22
b(+)g Fg(c)g Fe(\000)h Fg(\025)1842 4351 y Fi(X)1909
4336 y Fg(;)33 b(e)23 b Fl(+)f Fg(f)11 b Fe(g)146 4463
y Fi(>)304 4471 y Fh(solve\(S\);)331 4674 y Fe(f)p Fg(d)27
b Fl(=)h Fe(\000)p Fl(3)p Fg(;)33 b(\025)806 4689 y Fi(X)901
4674 y Fl(=)28 b(5)p Fg(;)33 b(\025)1171 4689 y Fi(Y)1259
4674 y Fl(=)28 b(3)p Fg(;)33 b(e)28 b Fl(=)f Fe(\000)p
Fl(4)p Fg(;)34 b(b)28 b Fl(=)g Fe(\000)p Fl(3)p Fg(;)33
b(c)28 b Fl(=)f(4)p Fg(;)33 b(a)28 b Fl(=)g(4)p Fg(;)33
b(\025)2825 4689 y Fi(Z)2909 4674 y Fl(=)28 b Fe(\000)p
Fl(1)p Fg(;)33 b(f)39 b Fl(=)27 b(4)p Fe(g)146 4800 y
Fi(>)304 4808 y Fh(assign\("\);)146 4924 y Fi(>)304 4932
y Fh(map\(eval,A\);)1568 5053 y Ff(2)1568 5229 y(6)1568
5289 y(6)1568 5348 y(6)1568 5412 y(4)1753 5174 y Fl(4)83
b(1)g Fe(\000)p Fl(3)1753 5355 y(1)g(4)g Fe(\000)p Fl(3)1676
5535 y Fe(\000)p Fl(4)g(4)g Fe(\000)p Fl(1)2185 5053
y Ff(3)2185 5229 y(7)2185 5289 y(7)2185 5348 y(7)2185
5412 y(5)1861 5944 y Fl(10)p eop
%%Page: 11 11
11 10 bop 0 84 a Fl(Corrig)m(\023)-46 b(e)33 b(TP1)g
Fk(Maple)2262 b Fl(Alg)m(\022)-46 b(ebre)33 b(lin)m(\023)-46
b(eaire)p 0 124 3820 4 v 146 368 a Fi(>)304 376 y Fh(charpoly\(",x\);)
1492 580 y Fg(x)1547 539 y Fd(3)1609 580 y Fe(\000)22
b Fl(7)17 b Fg(x)1829 539 y Fd(2)1891 580 y Fl(+)22 b(7)17
b Fg(x)22 b Fl(+)g(15)146 706 y Fi(>)304 714 y Fh(factor\("\);)1441
918 y Fl(\()p Fg(x)g Fe(\000)h Fl(5\))17 b(\()p Fg(x)22
b Fe(\000)h Fl(3\))17 b(\()p Fg(x)k Fl(+)h(1\))0 1061
y Fj(Exercice)53 b(8)146 1177 y Fi(>)304 1185 y Fh
(A:=matrix\(3,3,[x,0,0,0,y,s)q(qrt\()q(3\),)q(0,sq)q(rt\(3)q(\),z])58
b(\);)1443 1596 y Fg(A)28 b Fl(:=)1675 1306 y Ff(2)1675
1481 y(6)1675 1541 y(6)1675 1601 y(6)1675 1665 y(4)1783
1427 y Fg(x)125 b Fl(0)165 b(0)1786 1607 y(0)126 b Fg(y)2136
1525 y Fe(p)p 2219 1525 49 4 v 82 x Fl(3)1786 1788 y(0)1921
1705 y Fe(p)p 2004 1705 V 83 x Fl(3)e Fg(z)2309 1306
y Ff(3)2309 1481 y(7)2309 1541 y(7)2309 1601 y(7)2309
1665 y(5)146 1944 y Fi(>)304 1952 y Fh(P:=)52 b(X)f(->)h
(charpoly\(A,X\);)1338 2155 y Fg(P)41 b Fl(:=)27 b Fg(X)36
b Fe(!)27 b Fl(c)m(harp)s(oly)r(\()p Fg(A;)34 b(X)8 b
Fl(\))146 2281 y Fi(>)304 2289 y Fh(solve\()p Fe(f)p
Fh(P\(4\),P\(8\),P\(12\))p Fe(g)p Fh(\);)0 2493 y Fe(f)p
Fg(x)28 b Fl(=)f(8)p Fg(;)34 b(z)e Fl(=)c(Ro)s(otOf)5
b(\(51)22 b Fe(\000)g Fl(16)p 1226 2493 30 4 v 52 w Fc(Z)36
b Fl(+)p 1456 2493 V 57 w Fc(Z)1560 2451 y Fd(2)1599
2493 y Fl(\))p Fg(;)d(y)e Fl(=)d(16)21 b Fe(\000)i Fl(Ro)s(otOf)5
b(\(51)22 b Fe(\000)h Fl(16)p 2799 2493 V 51 w Fc(Z)36
b Fl(+)p 3028 2493 V 58 w Fc(Z)3132 2451 y Fd(2)3171
2493 y Fl(\))p Fe(g)p Fg(;)166 2626 y Fe(f)p Fg(x)28
b Fl(=)g(12)p Fg(;)k(z)h Fl(=)27 b(5)p Fg(;)33 b(y)e
Fl(=)d(7)p Fe(g)p Fg(;)33 b Fe(f)p Fg(x)28 b Fl(=)f(12)p
Fg(;)33 b(z)f Fl(=)c(7)p Fg(;)33 b(y)e Fl(=)c(5)p Fe(g)p
Fg(;)33 b Fe(f)p Fg(z)g Fl(=)27 b(9)p Fg(;)33 b(x)28
b Fl(=)g(4)p Fg(;)33 b(y)e Fl(=)c(11)p Fe(g)p Fg(;)33
b Fe(f)p Fg(x)28 b Fl(=)f(4)p Fg(;)33 b(y)e Fl(=)d(9)p
Fg(;)33 b(z)f Fl(=)c(11)p Fe(g)0 2757 y Fl(Il)33 b(y)g(a)f(donc)h(4)f
(triplets)i(solutions.)0 2948 y Fj(Exercice)53 b(9)146
3064 y Fi(>)304 3072 y Fh(A:=matrix\(4,4,[0,1,0,0,0,0)q(,1,0)q(,0,)q
(0,0,)q(1,0,)q(0,0,)58 b(0]\);)1464 3573 y Fg(A)28 b
Fl(:=)1695 3194 y Ff(2)1695 3369 y(6)1695 3429 y(6)1695
3488 y(6)1695 3548 y(6)1695 3608 y(6)1695 3668 y(6)1695
3731 y(4)1803 3313 y Fl(0)83 b(1)g(0)g(0)1803 3494 y(0)g(0)g(1)g(0)1803
3675 y(0)g(0)g(0)g(1)1803 3855 y(0)g(0)g(0)g(0)2289 3194
y Ff(3)2289 3369 y(7)2289 3429 y(7)2289 3488 y(7)2289
3548 y(7)2289 3608 y(7)2289 3668 y(7)2289 3731 y(5)146
4011 y Fi(>)304 4019 y Fh(est_nil:=proc\(A\))359 4140
y(local)52 b(n,i,R;)359 4260 y(n:=coldim\(A\);)359 4381
y(R:=A;)359 4501 y(for)g(i)f(from)i(1)e(to)h(n-1)g(while)h(not)f
(iszero\(R\))i(do)461 4621 y(R:=)e(evalm\(R)i(&*)d(A\);)359
4742 y(od;)359 4862 y(if)h(i<n-1)g(then)h(true)359 4983
y(else)f(iszero\(R\))359 5103 y(fi;)308 5223 y(end:)146
5339 y Fi(>)304 5347 y Fh(est_nil\(A\);)1820 5550 y Fc(true)1861
5944 y Fl(11)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
