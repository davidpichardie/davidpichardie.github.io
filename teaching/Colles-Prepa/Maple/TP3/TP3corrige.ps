%!PS-Adobe-2.0
%%Creator: dvips(k) 5.85 Copyright 1999 Radical Eye Software
%%Title: TP3corrige.dvi
%%Pages: 7
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Courier
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o TP3corrige.ps TP3corrige.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.06.27:1005
%%BeginProcSet: texc.pro
%!
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id
ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{
rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get
/gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp add /cp
X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add /gp X
adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{dup
255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1 adv}
B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2 idiv
S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Created 1994/6/23. Source file was pstricks.doc
% Version 0.93a, 93/03/12.
% For use with Rokicki's dvips.
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
def
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
%  Modification Denis GIROU (CNRS/IDRIS - France) <Denis.Girou@idris.fr> - 15 Jan. 1997
% /Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
% pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
% div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
% d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt { 1 setlinecap [ 0 dx n div ]
dy n div 2 div setdash } { 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Created 1994/6/7. Source file was pst-node.doc
% Version 0.93a/b-97 patch 1, 97/05/09.
% For use with Rokicki's dvips.
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - 9 May 1997
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @psencodingfile{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "14 April 1995",
%   filename = "8r.enc",
%   email = "kb@cs.umb.edu",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "xx",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% }
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (TP3corrige.dvi)
@start
%DVIPSBitmapFont: Fa cmex10 12 5
/Fa 5 89 df<EC01C01403EC0780EC0F00141E5C147C5C495A13035C495A130F5C131F49
C7FCA2137EA25BA2485AA3485AA212075BA2120F5BA2121FA25BA2123FA490C8FC5AA712
FEB3A5127FA77E7FA4121FA27FA2120FA27F1207A27F1203A26C7EA36C7EA2137EA27FA2
6D7E130F8013076D7E8013016D7E147C143C8080EC0780EC03C014011A7771832E>0
D<12E07E12787E7E7E7F6C7E6C7E7F12016C7E7F137C137E7FA26D7EA26D7EA26D7EA36D
7EA2801301A2801300A280A2147EA2147FA4801580A7EC1FC0B3A5EC3F80A715005CA414
7EA214FEA25CA213015CA213035CA2495AA3495AA2495AA249C7FCA2137E137C13FC5B48
5A12035B485A485A90C8FC121E5A5A5A5A1A777C832E>I[<EF03E01707EF0FC0EF1F8017
3F1800177E5F16014C5A5F4C5A160F4C5A5F163F4CC7FC16FEA24B5A15035E4B5AA24B5A
151F5E153F5E157F93C8FC5D4A5AA24A5AA24A5AA24A5AA34A5AA24A5AA2147F5DA214FF
92C9FC5B5CA213035CA213075C130FA35C131FA25C133FA3495AA4495AA45A91CAFCA45A
5BA31207A35BA3120FA35BA3121FA55BA2123FA85BA2127FAD5B12FFB3B3A6127F7FAD12
3FA27FA8121FA27FA5120FA37FA31207A37FA31203A37F7EA4807EA46D7EA46D7EA3131F
80A2130F80A31307801303A2801301A2807F81147FA281143FA26E7EA26E7EA36E7EA26E
7EA26E7EA26E7E8182153F82151F82150F6F7EA26F7E8215016F7EA2167F707E161F8370
7E1607707E83707E1600177E831880171FEF0FC0EF07E01703>51
298 104 131 79 32 D[<12F87E127E7E7F121F6C7E6C7E7F6C7E12016C7E7F137F7F80
6D7E6D7EA26D7E8013036D7EA26D7E808081143F81141F816E7EA26E7EA26E7EA26E7EA3
6E7EA26F7EA282153FA282151F82150FA2821507A282150382A3150182A28183A3707EA4
707EA483161FA483160FA383A31607A383A31603A383A582A21880A882A218C0AD177F18
E0B3B3A618C017FFAD1880A25EA81800A25EA55FA31607A35FA3160FA35FA3161F5FA416
3F5FA44C5AA44C5AA394C7FC5DA25E1503A35E15075EA2150F5EA2151F5E153F5EA2157F
5EA24BC8FCA24A5AA34A5AA24A5AA24A5AA24A5A5D143F5D147F92C9FC5C5C495AA2495A
13075C495AA2495A495A91CAFC5B13FE5B485A1203485A5B485A485A123F90CBFC127E5A
5A>51 298 125 131 79 I<C27E8DA38D6C01C0CC12036EDF0001816C6DF200076C6DE1
007F7F6C1E0F6E1C016C6D766C7E6C6D1D1F6CF707FE6F1C036C6EF400FF6D6D896D8B6F
F51F806D6D1D0F6DF707C06F1D036D6DF501E06D6D1D007F701D706D806E6D1D386E1F00
826E7F6E7F80826E7F80836E806F7F81836F7F6F7F81836F7F816F8084707F8284707F70
7F8284707F70808285717F83717F85717F8385717F718083A27290CEFC725A725A61725A
61181F4E5A614ECFFC18FE4D5A4D5A17074D5A604D5A4D5A4DD0FC17FE16014C5A5F4C5A
4C5A4C5A4C5A167F4CD1FC5E4B5A4B5A4B5A150F4B5A4B5A4C1D384BD1127015FE4A481E
F002031FE04A481D014B1D034A481EC04A481D074A48F50F804AD1121F4A1E3F4948F6FF
004A6549481D074948535A49481D3F494852B45A013F1D0749481C3F91CF0003B55A01FE
1C7F484850B7FC48C15A5A48685AA248685AC2FC69858B7B7F90>88
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmsy8 8 3
/Fb 3 50 df<130C131EA50060EB01800078130739FC0C0FC0007FEB3F80393F8C7F0038
07CCF83801FFE038007F80011EC7FCEB7F803801FFE03807CCF8383F8C7F397F0C3F8000
FCEB0FC039781E078000601301000090C7FCA5130C1A1D7C9E23>3
D<170EA3170F8384170384170184717E1878187C84180FF007C0BA12F819FC19F8CBEA07
C0F00F00183E601878604D5A60170360170795C7FC5F170EA33E237CA147>33
D<D93F80EC07F0D9FFF0EC3FFC000301FC91B5FC4801FF903901F80780D80F80903A8007
C001C03D1E003FC00F8000E0486D6C48C71270003890260FF03E143048902607F83C1438
6E6C48141800606D6C5A00E06D6C48141C48027F150C5E153F6F7E6F7E82151F6C6F141C
0060DA3DFE1418DB78FF143800704A6C7E003001016D6C1370003849486C6C13F06C903B
07C00FF001E06C903B0F8007FC07C02807807E0003B512806CB44801001400C601F0EC3F
FCD93F80EC07F03E1F7C9D47>49 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmr8 8 12
/Fc 12 62 df<EC0380B3A4B812FCA3C7D80380C7FCB3A42E2F7CA737>43
D<EB3FC0EBFFF03803E07C48487E48487E497E001EEB0780A2003E14C0A248EB03E0A500
FC14F0B0007C14E0A3007E1307003E14C0A36CEB0F806C14006D5A3807C03E3803F0FC38
00FFF0EB3FC01C2D7DAB23>48 D<130C133C137CEA03FC12FFEAFC7C1200B3B113FE387F
FFFEA2172C7AAB23>I<EB7F803801FFF0380780FC380E003F48EB1F8048EB0FC05A0060
EB07E012F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC3F00147E14
7C5C495A495A495A495A011EC7FC5B5B4913305B485A4848136048C7FC000E14E0001FB5
FC5A4814C0B6FCA21C2C7DAB23>I<EB3FC03801FFF03807C0FC380E007E487FEC1F8000
3F14C0A2EB800F1300A2000C131FC7FC1580A2EC3F00143E5C5CEB03F0EBFFC014F0EB00
FC143FEC1F8015C0140F15E0A2EC07F0A21238127C12FEA3EC0FE012F8006014C0007013
1F6C1480001EEB3F00380780FC3801FFF038007FC01C2D7DAB23>I<140EA2141E143EA2
147E14FEA2EB01BE1303143E1306130E130C131813381330136013E013C0EA0180120313
001206120E120C5A123812305A12E0B612FCA2C7EA3E00A9147F90381FFFFCA21E2D7EAC
23>I<000CEB0180380FC01F90B512005C5C14F014C0D80C7EC7FC90C8FCA8EB1FC0EB7F
F8380DE07C380F801F01001380000E130F000CEB07C0C713E0A2140315F0A4127812FCA4
48EB07E012E0006014C00070130F6C14806CEB1F006C133E380780F83801FFE038007F80
1C2D7DAB23>I<EB03F8EB0FFE90383E0780EBF8013901F007C03803E00FEA07C0EA0F80
A2391F00078091C7FC123EA2127EA2127CEB0FC038FC3FF0EBF07C38FDC01EB4487E0100
1380EC07C04814E0A214034814F0A4127CA3127EA2003E14E01407121E001F14C06CEB0F
803907801F003803C03E6C6C5A38007FF0EB1FC01C2D7DAB23>I<1230123C003FB512F8
A215F05A15E039700001C000601480140348EB0700140E140CC7121C5C143014705C495A
A2495AA249C7FCA25B130E131EA2133EA3133C137CA413FCA913781D2E7CAC23>I<EB1F
C0EBFFF03803E07C3807801E48487E001EEB0780A248EB03C0A4123E1407003F1480381F
C00F01E01300EBF81E6C6C5A3807FFF86C13E0C6FCEB3FF8EBFFFC3803C7FFD807831380
D81F0013C0001E133F48EB1FE0007C13070078EB03F012F84813011400A46C14E0007813
01007C14C0003C13036CEB0780390F800F003807E03C3801FFF038003FC01C2D7DAB23>
I<EB3F80EBFFF03803E0783807C03E48487E48487E003E14801407007E14C0127C00FC14
E01403A315F0A5007C1307127EA2003E130F7E6C131F3807803B3803E0F33800FFC39038
3F03E013001407A215C0A2140F001E1480003F14005C143E143C003E5B001C5B380E03E0
3807FF80D801FEC7FC1C2D7DAB23>I<007FB712F8B812FCA2CBFCADB812FCA26C16F82E
137C9937>61 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmmi12 12 13
/Fd 13 121 df<010FB712C0013F16E05B90B8FC4817C02803E0060030C7FCD807801470
D80F001460000C130E48130C4815E0A248011C5B4813181240C7EA3801A214301470A2EC
F00314E0A21301A214C01303A29038078007A2130FA202007F5BA25B013E6D7E137EA249
80A21501495C01706D5A332C7EAA37>25 D<EC07FE91387FFFC00103B512F0010F14F890
391FE003FC013EC7127E0178141C01E01408D80180140048C9FC5A1206A57E3801803C39
00C7FF8090387FC3C014FFD801EF5BD80380C8FC0006C9FC5A5A5AA25AA25AA56CEC0180
00601403007015006C140E001E143C390FE001F86CB55A6C14C0C691C7FCEB1FF0272D7E
AB2E>34 D<121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A0A78891B>58
D<121E123FEA7F80EAFFC0A313E0127FEA3F60121E1200A513C0A4EA0180A2EA0300A212
065AA25A5A12200B1D78891B>I<127012FCB4FCEA7FC0EA1FF0EA07FCEA01FF38007FC0
EB1FF0EB07FE903801FF809038007FE0EC1FF8EC03FE913800FF80ED3FE0ED0FF8ED03FF
030013C0EE3FF0EE0FFCEE01FF9338007FC0EF1FF0EF07FCEF01FF9438007FC0F01FE0A2
F07FC0943801FF00EF07FCEF1FF0EF7FC04C48C7FCEE0FFCEE3FF0EEFFC0030390C8FCED
0FF8ED3FE0EDFF80DA03FEC9FCEC1FF8EC7FE0903801FF80D907FECAFCEB1FF0EB7FC048
48CBFCEA07FCEA1FF0EA7FC048CCFC12FC12703B3878B44C>62 D<001FB500F849B512E0
485E6C4A6D14C026003FF8C8381FF800D91FE0ED07E0725A49485E96C7FCA349481506A4
49C95AA448485EA448485EA448485EA448485EA448484B5AA448484BC8FCA448481506A4
48C95AA35FA25FA25F17E06C5E4C5A4CC9FC6C5D6D140E001F5D6C6C5C000715E0D803F0
EB03C06C6CEB0F806CB401FECAFC90387FFFF8011F13E0010190CBFC43457AC342>85
D<EC0FC0EC7FE0903901F03038903903C0187C903907800CFC90381F0006013EEB07F849
1303A25B00015D485AA2485A000F4A5A5B121FA249495A123FA348C7485AA4007E4AC7FC
A212FE1720037E1360A2127EA24B13C0A2003E13010203EB0180EC067C6C010CEB03006C
EB183C2607807013063A03C1E01E1C3A01FF800FF83A007E0003E02B2D7CAB33>97
D<01FCEB03F8486CEB1FFE3B0307803C0F8000069138E007C03A0C03C1C0030018D9E300
7F14E683003013EC14F8495A12605CA2484848495AA21200A24948495AA34C5A49C7FCA2
4CC7FCA2137E167EA21820494A1360A34B4813C0485AA29338F00180EF0300485A17065F
03005B4848EC78700003ED3FE06C48EC0F80332D7DAB3A>110 D<D907E0133F903A0FF0
01FFC0903A183C03C1E0013090380600F0496C4813789026C01F18137C4B133C4B133ED8
01805B4B133F143FD8030090C7FCA30006137EA2C7FCA24A147FA4494814FEA317FC4948
1301A217F81603494814F0A2EE07E0A2010FEC0FC01780EE1F00163ED91FB0133C5E0298
5BED03E090393F0E0F806EB4C7FCEC01F891C9FC137EA45BA4485AA412031207B512E080
5C303F82AB31>112 D<131FD97FC0EB01C02601E1E0EB03E0260380F01307EA06008048
ED0FC05A13011230EE1F801260495AA2484848EB3F00A21200495A167EA2495AA25E49C7
FCA3017E495AA31701017C903803F00313FCA3923807E006A2137C030F130CA2013C011B
1318013E1331011E01E11330903A0F83C0F0E0903A07FF007FC0D900FCEB1F00302D7DAB
38>117 D<011F140ED97FC0131F2601E1E0EB3F80380380F0EA06006E14C048151F48ED
0F80130100301507A2126049481303A24848481400A21200495A1606A2495AA25E49C7FC
A25E137EA25EA3495CA25EA2017C495A4BC7FCA2017E1306013E5B011E5B6D5B903807C0
E06DB45A010090C8FC2A2D7DAB2F>I<011F1738D97FC0D901C0137C2601E1E0496C13FE
260380F01307EA06006E16FF484B48137F48183E13010030181E4C5A12604948160EA248
484849C7120CA21200495A047E1418A2495AA24C143049C7FCA21960017E495AA319C0A2
017C4948EB018013FCA2017CEE0300A21806017E01075C013EEB06F8030C5C6DD9187C5B
90270F80303C5B903B07E0E01F03C0903B01FFC00FFF809028007F0001FCC7FC402D7DAB
46>I<02FCEB07E0D903FFEB1FF8903A0703C0381E903A1C01E0601F01389038F0C03F90
3A6000F1807F499038FB00FFA2484813FE48C7147E4B133800061600A348495AA2C7FCA2
4A5AA44A5AA44A5AA317104A481330A31760001E133F003F16C0EA7F80026FEB018026FF
00CFEB030002C71306267E01875B3A7C0303C0183A3C0E01E0703A1FFC00FFE0D803F0EB
3F80302D7EAB37>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmsy10 12 9
/Fe 9 104 df<007FB912E0BA12F0A26C18E03C04789A4D>0 D<19E0F003F0180FF03FE0
F0FF80943803FE00EF0FF8EF3FE0EFFF80DC03FEC7FCEE0FF8EE3FE0EEFF80DB03FEC8FC
ED1FF8ED7FE0913801FF80DA07FEC9FCEC1FF0EC7FC04948CAFCEB07FCEB1FF0EB7FC048
48CBFCEA07FCEA1FF0EA7FC048CCFCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB
07FCEB01FF9038007FC0EC1FF0EC07FC913801FF809138007FE0ED1FF8ED07FE923800FF
80EE3FE0EE0FF8EE03FE933800FF80EF3FE0EF0FF8EF03FE943800FF80F03FE0F00FF018
03F000E01900B0007FB912E0BA12F0A26C18E03C4E78BE4D>20 D<037FB612E00207B712
F0143F91B812E0010301C0C9FCD907FCCAFCEB0FE0EB3F8049CBFC13FC485A485A485A5B
485A121F90CCFC123EA2123C127CA2127812F8A25AA87EA21278127CA2123C123EA27E7F
120F6C7E7F6C7E6C7E6C7E137E6D7EEB1FE0EB07FC6DB47E010090B712E0023F16F01407
020016E03C3A78B54D>26 D<1AF0A3861A78A21A7C1A3CA21A3E1A1E1A1F747EA2747E74
7E87747E747E1B7E87757EF30FE0F303F8007FBC12FEBE1280A26CF3FE00CEEA03F8F30F
E0F31F8051C7FC1B7E63505A505A63505A505AA250C8FC1A1E1A3E1A3CA21A7C1A78A21A
F862A359347BB264>33 D<49B4EF3FC0010F01E0923803FFF8013F01FC030F13FE4901FF
92383FE01F48B66C91397E0007C02603F80301E0D901F8EB01E02807E0007FF049486D7E
01806D6CD907C0147048C76C6C494880001EDA07FE49C87E001C6E6C013E150C486E6D48
150E71481506486E01E0160793387FF1F0006092263FF3E08193381FFBC000E004FF1780
486F4915017090C9FC82707F8482717E844D7E6C4B6D1503006004EF1700933803E7FE00
70922607C7FF5DDC0F837F003004816D140E00384BC6FC0018033E6D6C5C001C4B6D6C14
3C6C4BD91FFC5C6C4A486D6C5C6DD907E06D6C13036C6C49486D9038E00FE0D801F0013F
C890B55A27007C03FE6F91C7FC90263FFFF8031F5B010F01E0030313F8D901FECAEA7FC0
592D7BAB64>49 D<92B6FC02071580143F91B7120001030180C8FCD907FCC9FCEB1FE0EB
3F80017ECAFC5B485A485A485A5B485A121F90CBFC123EA2123C127CA2127812F8A25AA2
B9FC1880A2180000F0CBFCA27EA21278127CA2123C123EA27E7F120F6C7E7F6C7E6C7E6C
7E137E6D7EEB1FE0EB07FC6DB47E010090B6FC023F1580140702001500313A78B542>I<
1706170F171FA2173EA2177CA217F8A2EE01F0A2EE03E0A2EE07C0A2EE0F80A2EE1F00A2
163EA25EA25EA24B5AA24B5AA24B5AA24B5AA24BC7FCA2153EA25DA25DA24A5AA24A5AA2
4A5AA24A5AA24AC8FCA2143EA25CA25CA2495AA2495AA2495AA2495AA249C9FCA2133EA2
5BA25BA2485AA2485AA2485AA2485AA248CAFCA2123EA25AA25AA25A1260305C72C600>
54 D<ED0FE015FF913803FC00EC0FE0EC3FC04A5A4AC7FC5C495AA2495AB3AD495AA249
5A131F495A495A01FEC8FCEA07F8EAFFE0A2EA07F8EA00FEEB7F806D7E6D7E130F6D7EA2
6D7EB3AD6D7EA26D7E806E7E6E7EEC0FE0EC03FC913800FFE0150F236479CA32>102
D<12FEEAFFE0EA07F8EA00FEEB7F806D7E6D7E130F6D7EA26D7EB3AD6D7EA26D7E806E7E
6E7EEC0FE0EC03FC913800FFE0A2913803FC00EC0FE0EC3FC04A5A4AC7FC5C495AA2495A
B3AD495AA2495A131F495A495A01FEC8FCEA07F8EAFFE048C9FC236479CA32>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmbx12 12 2
/Ff 2 82 df<B64BB512FE8181A281D8003F6D91C7EA780081013D7F81133C6E7E6E7F6E
7F6E7F6E7F82806E7F6E7F6F7E6F7F83816F7F6F7F6F7F6F7F6F7F8382707F707F707F70
7F8482707F707F717E7113807113C019E0837113F07113F87113FC7113FE19FF847213F8
84848484A28484197F193F191FA2190F1907B61603190119001A78A24F447CC358>78
D<923807FFC092B512FE0207ECFFC0021F15F091267FFE0013FC902601FFF0EB1FFF0107
01C0010713C04990C700017F49486E7F49486F7E49486F7E49486F7E48496F7E48496F13
80A248496F13C0A24819E091C97E4819F0A248487013F8A3007F19FCA249177FA300FF19
FEAD007F19FCA36D17FF003F19F8A3001F19F06D5EA26C19E06E01FE5B6C912603FF8014
C06C6D486D4813804B13E06C9028E01F83F00F13006C903BF01E00F81FFE90267FF83E90
387C3FFC90263FFC3C6D485AD91FFE91381EFFF0D90FFF021F5B6D01FE5D010194C7FC6D
6D6CB45A023F90B512F8020703E0130202006F1307030713C792C7EA07F8716C130F7213
1F9538FF80FF96B5FC7114FEA3831AFCA27213F81AF0847213E07213C0721300F001FC48
587AC454>81 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmmi8 8 5
/Fg 5 113 df<90B612F812035A4815F03A1E0380C000003C130000701301130700E05C
EAC00638000E03A3131CA2133C140713381378A201F07FA21201A2D803E07FA200071303
13C0A26C486C5A251E7E9C29>25 D<124012F012FC127FEA1FC0EA07F0EA01FCEA007FEB
1FC0EB07F0EB01FCEB007FEC1FC0EC07F0EC01FCEC007FED1FC0ED07F0ED01FCED007FEE
1FC01607161FEE7F00ED01FCED07F0ED1FC0037FC7FCEC01FCEC07F0EC1FC0027FC8FCEB
01FCEB07F0EB1FC0017FC9FCEA01FCEA07F0EA1FC0007FCAFC12FC12F012402A2B7AA537
>62 D<131FEA03FFA2EA003FA2133EA2137EA2137CA213FCA25BA2120115F89038F003FC
EC0F0E0003EB1C1EEC387EEBE07014E03807E1C09038E3803849C7FC13CEEA0FDC13F8A2
EBFF80381F9FE0EB83F0EB01F81300481404150C123EA2007E141C1518007CEBF038ECF8
3000FC1470EC78E048EB3FC00070EB0F801F2F7DAD25>107 D<3907C007E0391FE03FF8
3918F8783E393879E01E39307B801F38707F00126013FEEAE0FC12C05B00815C0001143E
5BA20003147E157C5B15FC0007ECF8081618EBC00115F0000F1538913803E03001801470
16E0001F010113C015E390C7EAFF00000E143E251F7E9D2B>110
D<90387C01F89038FE07FE3901CF8E0F3A03879C0780D907B813C0000713F000069038E0
03E0EB0FC0000E1380120CA2D8081F130712001400A249130F16C0133EA2017EEB1F80A2
017C14005D01FC133E5D15FC6D485A3901FF03E09038FB87C0D9F1FFC7FCEBF0FC000390
C8FCA25BA21207A25BA2120FA2EAFFFCA2232B829D24>112 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmtt12 12 52
/Fh 52 122 df<00085B003EEB07C0007FEB0FE0A24814F0A26C14E0B3A2007E1307003E
14C0A20008EB01001C1E75BD33>34 D<EA07C0EA0FF0EA1FF8A213FCA213FE120F1207EA
007EA613FE13FCA21201EA03F8A2EA07F0120FEA1FE0EA7FC0EAFF8013005A5A12700F1E
6EBC33>39 D<140FEC3F80147F14FF491300495AEB07F8495A495A495A495A49C7FC5B12
015B485A12075B120F5B121F5BA2123F5BA2127F90C8FCA45A5AAD7E7EA47F123FA27F12
1FA27F120F7F12077F12036C7E7F12007F6D7E6D7E6D7E6D7E6D7EEB03FE6D7E6D138014
7F143FEC0F00194D6FC433>I<127812FE7E7F6C7E6C7EEA0FF06C7E6C7E6C7E6C7E6D7E
133F80131F6D7E801307801303801301A2801300A28080A41580143FAD147F1500A45C5C
A213015CA213035C13075C130F5C495A133F5C137F49C7FC485A485A485A485AEA3FE048
5A485A90C8FC5A1278194D78C433>I<14F0497EA8007015E000F8EC01F000FE140700FF
140F01C1133F01F113FF263FF9F913C0000FB61200000314FCC614F06D5B011F1380D907
FEC7FC90381FFF80017F13E090B57E000314FC000F14FF263FF9F913C026FFF1F813F001
C1133F0101130F00FE140700F814010070EC00E000001500A86D5A242B79B333>I<141F
A24A7EB0007FB71280A2B812C0A36C1680A2C7D83F80C7FCB06EC8FCA22A2B7CB333>I<
EA07C0EA0FF0EA1FF8123F13FCA213FEA2121F120F1207EA007E13FEA213FC1201EA03F8
1207EA0FF0EA7FE012FF13C013005A12780F196E8A33>I<007FB612FEA2B8FCA36C15FE
A228077BA133>I<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B0B6C8A33>I<16
7816F8ED01FCA21503A2ED07F8A2ED0FF0A2ED1FE0A216C0153FA2ED7F80A2EDFF00A24A
5AA25D1403A24A5AA24A5AA24A5AA25D143FA24A5AA24AC7FCA2495AA25C1303A2495AA2
495AA25C131FA2495AA2495AA249C8FCA25B1201A2485AA2485AA2485AA25B121FA2485A
A2485AA248C9FCA25AA2127CA2264D7AC433>I<14FF010313C0010F13F0497F497F497F
9038FF81FF3A01FE007F804848EB3FC049131F4848EB0FE0A24848EB07F0A24848EB03F8
A24848EB01FCA348C812FEA4007E157E00FE157FAE6C15FF6C15FEA46D1301003F15FCA2
6D1303001F15F8A26C6CEB07F0A26C6CEB0FE06D131F6C6CEB3FC0A26CB4EBFF806C0181
13006DB45A6D5B6D5B6D5B010313C0010090C7FC283F7BBD33>I<EB01E0497EA21307A2
130FA2131F133F137F13FF1203123F5AEAFFF713E71387EA7E071200B3B3A2003FB512FE
48801680A216006C5C213E76BD33>I<EB03FF011F13E0017F13FC48B57E48ECFF804815
C0260FFE0313E03A1FF0007FF049EB1FF84848130F49EB03FC127F90C7EA01FE4814005A
6C15FF167FA3127E123CC9FCA216FF16FEA2150116FC150316F81507ED0FF0ED1FE0153F
16C0ED7F80EDFF004A5AEC07FC4A5A4A5A4A5A4A5A4A5A4990C7FC495AEB07F8EB1FF049
5A495A495A4890C8FC4848143E4848147FEA0FF0485A48B7FCB8FCA37E6C15FE283E7BBD
33>I<903801FFC0010F13F8013F13FF90B67E48814881489038807FF03A0FFC000FF801
F06D7E484813036F7EA21500A26C5A6C5AC9FC15015EA215034B5A150F4B5A4B5A913803
FFC00103B55A4991C7FC5D8116C06D8090C76C7EED0FF8ED03FC6F7E6F7E821780163FA2
EE1FC0A3123C127EB4FCA2163F1780167F6C16006D5C6D495A6C6C1303D81FF8EB0FFC3A
0FFF807FF86C90B55A6C5D6C15806C6C91C7FC010F13FC010113C02A3F7CBD33>I<0007
B612F04815F85AA316F001C0C8FCB0ECFFC001C713F801DF7F90B6FC168016C0028013E0
9039FC001FF001F0EB0FF849130749EB03FC6C4813016CC713FEC9FCA216FF167FA41218
127EA2B415FF16FEA24814016C15FC6C14036DEB07F86D130F6C6CEB1FF06C6CEB7FE090
39FE03FFC06CB612806C150000015C6C14F8013F13E0010390C7FC283E7BBC33>53
D<EC07FC91383FFF8091B512C0010314F0130F4914F890383FFC0790397FE003FCEBFFC0
481300485A5B4848EB01F849EB00F0000F15005B121F5B123F5BA2127FEB0004903801FF
F0010713FCD8FF1F7F4848EBFF8090B612C0B712E09038FE007F01F8EB1FF049EB0FF849
EB07FC49130349EB01FEA290C8FC16FF167FA37EA47F123F16FF6D14FE121F15016C6CEB
03FC6D13076C6C14F86DEB1FF06C6C133F3A01FF80FFE06C90B512C06D14806DEBFE006D
5B010713F001001380283F7BBD33>I<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F
00C7FCB3A3121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B2B6CAA33>58
D<EA07C0EA0FE0EA1FF0EA3FF8A5EA1FF0EA0FE0EA07C0C7FCB3A3EA07C0EA0FE0EA1FF0
EA3FF8A213FCA3121F120F12071200A2120113F81203EA07F0120FEA1FE0127FEAFFC013
80130012FC12700E396EAA33>I<007FB71280A2B812C0A36C16806C1600CBFCA9003FB7
FC481680B812C0A36C1680A22A177CA933>61 D<1210127CB4FC7F13E07FEA7FFC6C7E38
0FFF806C13E000017F6C13FCEB3FFE6D6C7E01077F010113F06D7FEC3FFE6E7E020713C0
6E13E0020013F8ED7FFE151FED0FFF1503150FED1FFE157FEDFFF8020313E04A13C0021F
13004A5AECFFF8495B010713C0011F5B4948C7FCEBFFFC4813F000075B481380D83FFEC8
FC485AEAFFF05B138090C9FC127C121028337BB733>I<EC1F804A7E4A7EA34A7EA314F9
01017FA501037FA214F0A201077FA4ECE07E010F137FA449486C7EA549486C7EA4017F80
EC000FA291B5FCA290B67EA43A01FE0007F8491303A4000381491301A3000781491300D8
7FFF90380FFFE0B56C4813F06E5AA24A7E6C496C13E02C3E7DBD33>65
D<387FFFF8B57E80A25C6C5BD801FCC9FCB3B3A3EE03E0EE07F0A9007FB7FCB8FCA46C16
E02C3D7DBC33>76 D<003FB512FC48ECFF80B712E016F86C816C813A01FC000FFF030313
801500EE7FC0163FEE1FE0160FA217F01607A6160F17E0A2161FEE3FC0167FEEFF801503
030F130090B65A5E5E16E0168003FCC7FC01FCC9FCB3383FFFE0487FB57EA26C5B6C5B2C
3D7EBC33>80 D<D907FE137890393FFFC07C90B5EAF0FC4814FC000714FF5AEBFC03391F
F0007F4848133F0180131F007F140F90C712074814035AA21501A46CEC00F86C15007F7F
6C7E7FEA1FFE380FFFE06C13FF6C14F06C14FC6C6C13FF011F1480010314C0D9003F13E0
020313F09138003FF8ED0FFC1507ED03FE1501150016FFA2007C157F12FEA56C15FF16FE
7FED01FC6D130301F0EB07F801FC130F9039FF807FF091B512E016C000FC1580013FEBFE
00D8F80F5BD8780013E0283F7BBD33>83 D<273FFFE001B5FC486D481480B56C4814C0A2
6C496C14806C496C1400D801FCC7EA0FE0B3B3A36D141F00005EA26D143F6D5DA26D6C49
C7FC6E5B6D6C485AECF00390390FFC0FFC6DB55A6D5C6D5C6D6C1380DA1FFEC8FCEC07F8
323E80BC33>85 D<007FB512C0B612E0A415C048C8FCB3B3B3ABB612C015E0A46C14C01B
4D6CC433>91 D<007FB512C0B612E0A47EC7120FB3B3B3AB007FB5FCB6FCA46C14C01B4D
7DC433>93 D<EB01C0EB07E0EB1FF8EB7FFE48B51280000714E0001F14F8393FFE7FFC39
FFF81FFF497EEBC00390C7FC007E147E0038141C200E77BC33>I<EB1FFC90B57E000314
E048804814FC48809038F007FFEBE0016E7F153F6C48806C48131FC87F150FA5EC0FFF49
B5FC131F137F48B6FC0007140F4813C0381FFC00EA3FF0EA7FC05B48C7FC5AA56C141F7E
6D137FD83FE0497ED9F807EBFFF06CB712F87E6C14F36C14C1C69138003FF0D91FF090C7
FC2D2E7BAC33>97 D<EA3FFC487E12FFA2127F123F1200ABEC01FE91380FFFC04A13F002
7F7F91B512FE90B7FCECFE07DAF800138002E0EB7FC04AEB3FE04A131FEE0FF091C7FC16
074915F81603A217FC1601A9160317F8A26D140717F06E130F17E06E131FEE3FC06E137F
9139F801FF80DAFE07130091B55A495C6E5BD97E3F13E0D93C0F138090260003FEC7FC2E
3E7FBC33>I<ECFFF0010713FE011FEBFF804914C04914E048B612F048EBC01F9038FE00
0F485A485A4848EB07E049EB03C0484890C7FC5BA2127F90C9FCA25A5AA97E7EA27F003F
EC01F06DEB03F86C7E6D13076C6C14F06C6C130F01FFEB1FE06CEBE07F6C90B512C06C15
80013F14006D13FC01075B010013C0252E79AC33>I<ED7FF84B7E5CA280157F1501ABEB
01FF010713C1011F13F1017F13F990B6FC5A4813813907FE003FD80FF8131F49130F4848
1307491303123F491301127F90C7FCA25A5AA97E7E15037F123F6D1307A26C6C130F6D13
1F6C6C133F6C6C137F2603FF81B512F091B612F8C602FD13FC6D13F96D01E113F8010F01
8013F0D901FEC8FC2E3E7DBC33>I<ECFF80010713F0011F13FC497F90B6FC4815804801
8013C03A07FE003FE001F8EB0FF048481307484814F8491303003F15FC491301127F90C7
FC16FE15005A5AB7FCA516FC48C9FC7E7EA36C7E167C6C6C14FE7F6C7E6D13016C6CEB03
FC6CB4130F6C9038C03FF86C90B512F06D14E06D14C0010F1400010313FC9038007FE027
2E7BAC33>I<ED3FE0913801FFFC020713FE141F4A13FF5CECFFC015004948137E4A133C
010314005CA8003FB612F84815FCB7FCA36C15F8260003F8C7FCB3AD003FB612804815C0
A46C1580283E7DBD33>I<D901FEEB1FE0903A0FFFC0FFF0013F01F313F84990B512FC90
B7FC5A48010313E12607FC00EB80F849017F1360484890383FC00049131FA2001F814913
0FA66D131F000F5DA26D133F6C6C495A6D13FF2603FF0390C7FCECFFFE485C5D5DD80FCF
13C0D981FEC8FC0180C9FCA27FA26C7E7F90B512FC6CECFFC06C15F0000715FC4815FF48
16809038E0000748489038007FC090C8EA1FE048150F007E150700FE16F0481503A56C15
07007E16E0007F150F6C6CEC1FC001E0147FD81FF8903801FF80270FFF801F13006C90B5
5A6C5DC615F0013F14C0010F91C7FC010013F02E447DAB33>I<EA3FFC487E12FFA2127F
123F1200AB4AB4FC020713C0021F13F0027F7F91B5FC90B67EED07FEECF801ECF0004A7F
4A7F5CA291C7FCA35BB3A43B3FFFF80FFFFC486D4813FEB56C4813FFA26C496C13FE6C49
6C13FC303D7FBC33>I<14E0EB03F8A2497EA36D5AA2EB00E091C8FCAA383FFFF8487FA4
7EEA0001B3AD007FB612C0B712E016F0A216E06C15C0243E78BD33>I<EA7FF8487EA412
7F1200AC4AB512C04A14E04A14F0A26E14E06E14C09139000FF0004B5A4B5A4B5A4BC7FC
4A5A4A5A4A5A4A5A4A5A4A5A4A5A4A7E01FD7F90B5FC81ECF3F8ECE3FC14C1EC80FEEC00
7F5B496D7E6F7E82150F6F7E6F7E8215016F7E3B7FFFF80FFFF0B56C4813F817FCA217F8
6C496C13F02E3D7EBC33>107 D<383FFFFC487FB5FCA27E7EC7FCB3B3AD003FB612F848
15FCB712FEA26C15FC6C15F8273D7ABC33>I<02FC137E3B7FC3FF01FF80D8FFEF01877F
90B500CF7F15DF92B57E6C010F13872607FE07130301FC01FE7F9039F803FC01A201F013
F8A401E013F0B3A53C7FFE0FFF07FF80B548018F13C0A46C486C01071380322C80AB33>
I<4AB4FC263FFC0713C0267FFE1F13F000FF017F7F91B5FC6CB67E6CEC07FEC6EBF801EC
F0004A7F4A7F5CA291C7FCA35BB3A43B3FFFF80FFFFC486D4813FEB56C4813FFA26C496C
13FE6C496C13FC302C7FAB33>I<EB01FE90380FFFC0013F13F0497F90B57E488048EB03
FF2607FC0013804848EB7FC049133F4848EB1FE049130F4848EB07F0A2007F15F890C712
03A300FEEC01FCAA6C14036C15F8A26D1307003F15F06D130FA26C6CEB1FE06D133F6C6C
EB7FC06C6CEBFF802603FF0313006CEBFFFE6C5C6D5B6D5B010F13C0D901FEC7FC262E7A
AC33>I<EC01FE3A3FFC0FFFC0486C4813F000FF017F7F91B512FE6CB7FC6CEBFE07C6D9
F800138002E0EB7FC04AEB3FE04A131FEE0FF091C7FC16074915F81603A217FC1601A916
0317F8A26D140717F06E130F17E06E131FEE3FC06E137F9139F801FF80DAFE07130091B5
5A495C6E5B6E13E0020F1380DA03FEC7FC91C9FCAF383FFFF8487FB57EA26C5B6C5B2E42
7FAB33>I<02FF137C0107EBE0FE011F13F0017F13FC90B512FE4814FF4813C03907FE00
3F4848131F01F0130F484813071503485A491301127F90C7FC15005A5AA97E7E15017F12
3F6D130315076C7E6C6C130F6D131FD807FE137F3903FF81FF6CEBFFFE6C14FC6D13F86D
13F0010F13C0903801FE0090C8FCAF92387FFFFC92B512FEA46F13FC2F427CAB33>I<ED
03FE3B7FFF801FFF80B5D8C07F13E002C1B5FC02C314F014C76C9038CFFE0F39001FDFF0
9139FFC007E092388003C092C8FC5C5C5CA25CA25CA35CB2007FB512FEB7FCA46C5C2C2C
7DAB33>I<90381FFE0F90B5EA8F80000314FF120F5A5AEBF007387F800190C7FC00FE14
7F5A153FA37E007FEC1F0001C090C7FCEA3FF8EBFFC06C13FF6C14E0000314F8C680011F
13FF01001480020713C0EC007FED1FE0007C140F00FEEC07F01503A27EA27F15076D14E0
6D130F6DEB3FC09038FE01FF90B61280160000FD5C00FC14F8D8F83F13E0D8780790C7FC
242E79AC33>I<EB03C0497E130FAA003FB612FC4881B7FCA36C5D26000FE0C8FCB3A316
1FEE3F80A5167F6E140001075C6E5A9138FE07FE6DB55A6D5C6D5C6E5B021F1380DA07FC
C7FC29387EB633>I<D83FFCEB1FFE486C497E00FF5CA2007F80003F800000EC007FB3A7
5EA25DA26D5B90387F800FDAE03F13FC6DB612FE17FF6D806D01FE13FE01039038F83FFC
010001C0C7FC302C7FAA33>I<3B3FFFC00FFFF0486D4813F8B56C4813FCA26C496C13F8
6C496C13F0D801F8C7EA7E006D14FE00005DA26D1301017E5CA2017F13036D5CA2EC8007
011F5CA2ECC00F010F5CA36D6C485AA3ECF03F010391C7FCA26E5A0101137EA2ECFCFE01
005BA214FF6E5AA36E5AA26E5A6E5A2E2B7EAA33>I<3B7FFF8007FFF8B56C4813FC6E5A
A24A7E6C496C13F8D80FC0C7EA0FC06D141F00071680A56D143F00031600A3EC0FC0EC1F
E0A23A01F83FF07EA3EC7FF8147CA20000157C9039FCFCFCFCA3ECF87CA2017C5C017D13
7EECF03EA2017F133FA26D486C5AA3ECC00F90390F8007C02E2B7EAA33>I<3B3FFFC07F
FF80486DB512C0B500F114E0A26C01E014C06C496C13803B00FE000FE000017F495AEB3F
804B5A6D6C48C7FC90380FE07E903807F0FEECF1FC903803FBF8EB01FF6D5B5D6E5A143F
6E5A143F814A7E14FF903801FBF0ECF9F8903803F1FCEB07E0157E90380FC07F011F6D7E
90383F801F02007F496D7E01FE6D7E484813033B7FFFC03FFFE0B56C4813F0A46C496C13
E02C2B7DAA33>I<3B7FFF801FFFE0B56C4813F06E4813F8A24A6C13F06C496C13E0D803
F8C7EAFC00000114015E7F000014036D5C137EA2017F495A7FA26E485A131FA26D6C485A
A214E0010749C7FCA214F01303157EEB01F8A2157C010013FC14FC5D147C147DEC3FF0A3
6E5AA36E5AA2141F5DA2143F92C8FCA3147EA214FE003F5B1301387F81F81383EB87F013
9FEBFFE06C5B5C6C90C9FCEA0FFCEA03F02D427DAA33>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmbx12 17.28 8
/Fi 8 121 df<16F04B7E1507151F153FEC01FF1407147F011FB5FCB7FCA41487EBE007
C7FCB3B3B3B2007FB91280A6395D74DC51>49 D<913801FFF8021FEBFFC091B612F80103
15FF010F16C0013F16F09026FFF80180489026C0003F13FE4890C7000F7FD807FC020314
8048486E14C048486E14E04981D83FF86F13F001FE6F13F8487E6E6E13FC80B56F13FE80
A319FF83A26C5BA26C5BA26C90C8FCEA07FCD800E04B13FE90C9FCA219FC5FA219F85F19
F04D13E0A24D13C0198094B512004C5B604C5B4C5B4C5B604C90C7FC4C5A4C5A4C5A4B13
E04B5B4B5B4CC8FC4B5A4B5AED3FE04B48143F4B5A4A90C8FC4A5ADA07F8157E4A5A4A5A
4A5A4A5A02FEC912FE495A495A4948ED01FC4948150749B8FC5B5B90B9FC5A4818F85A5A
5A5A5AA2BAFC19F0A4405D78DC51>I<BD12FCA488A2D8000102C0C71201F1000F1A01F2
007F1B3F1B0F1B07757EA28787A288A3F43F80A31C1FA3197EA3F40FC0A499C7FC19FEA3
1801A218031807181F18FF93B6FCA6EEC000181F180718031801A21800A21D7E197EA21D
FCA696C812011DF8A31C03A3F407F0A31C0FA21C1F1C3F1DE01C7F1CFF63631B0F093F13
C098B5FC1A0797B6FCBEFCA31D80A35F617AE06A>69 D<92380FFFFC4AB612E0020F15FC
023F15FF91B8128001039026FE000713C04901F015E0011F01C05B4990C7FC49484A13F0
495A485B5A5C487013E0485B7113C0485B0501130048EE007C95C7FCA2485BA4B5FCAC7E
A280A27EA36C7F19FC7E806CEF01F86C7F6EED03F06C6D15076CEF0FE06D6C6CEC1FC06D
6DEC3F806D6DEC7F00010701FCEB01FE6D9039FF801FFC010091B55A023F15E0020F1580
020102FCC7FCDA000F13C03E407BBF48>99 D<92381FFFC04AB512FE020F6E7E027F15F0
91B77E0103D9FE0113FE010F9039F0003FFF4901C0010F7F4990C76C7F494802017F4948
8248498048496F7E85485B48717EA24849151F855AA34849811A80A3B5FCA291B9FCA31A
000280CBFCA67EA3807EA36C7F190F6CF01F806C7F193F6C6D17006C606C6D16FE6D6C4B
5A6D6C4B5A6D01C0EC0FF06D01F0EC3FE06D01FCECFFC001019026FFC00F5B6D91B6C7FC
023F15FC020715F002001580030701F0C8FC41407CBF4A>101 D<EB0FE0EB3FF8497E49
7E487F4880A24880A76C5CA26C91C7FC6C5B6D5A6D5AEB0FE090C9FCB0903807FF80007F
B5FCA6C6FC7F7FB3B3ADB712C0A622657BE42C>105 D<D90FFFEB07F8B6EB3FFF4C13C0
4BB512F04B14F8923907F87FFCED0FE0C6923880FFFE6D495A6DD91E0113FF153CA21578
A24B6C13FEA24BEB7FFCA2EF1FF04BEB07C094C7FCA45DB3B0B712F8A638407BBF42>
114 D<007FB600C0017FB512F8A6D8000F01F8C70007EBE000060090C7FC6D6D4A5A6D6D
4A5A6D6D4A5A6D6E495A4E5A6E6D5C6E6D133F6E6D495A6E6D49C8FC4D5A6E6D485A6E6D
485A6E01FF5B6E148FEF9FE06FEBFFC06F5C6F91C9FC6F5B5F816F7F6F7F6F80A2707F84
93B57E4B805D4B80DB0FF37FDB1FE17F04C180ED3FC04B486C7F4B486C7F4A486D7F4A48
814A487F4B6D7F020F6E7F4A486D7F4A48824A487F4AC86C7F49486F7F4A6F7F010384D9
3FFF81B600F00103B7FCA650407EBF55>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmcsc10 12 5
/Fj 5 113 df<B500F094381FFFFEA26E5FC6F2FE00017F61D93BFCEF77F8A2D939FE17
E7A3D938FFEE01C7A26E6CED0387A36E6CED0707A26E6C150EA26E6C151CA36E6C1538A2
6E6C1570A36E6C15E0A26E6CEC01C0A36F6CEB0380A26F6CEB0700A26F6C130EA36F6C5B
A26F6C5BA36F6C5BA26F6C5BA36F6C485AA293387F8380A2DC3FC7C7FCA3EE1FEEA2EE0F
FCA3017C6E5AA248B46E484A7E000701C04D7EB500FE041FB512FE705AA257447BC363>
77 D<157015F8A34A7EA24A7EA34A7E81A291380E3F80A2021E7FEC1C1FA24A6C7EA34A
6C7EA202F07FECE003A249486C7EA349486C7EA201078091C77EA249B67EA24981011CC7
121FA2013C810138140FA2496E7EA201F081491403120183486C140100074B7ED81FF84A
7EB5027F13F8A335357CB43D>97 D<B812F0A3D803FEC7123F6C48EC07F816011600A217
78A21738A3171C1507A31700A25DA25D157F90B6FCA39038FC007F151F81A2811707A317
0E92C7FCA4171EA2173CA2177C17FC16011607486C143FB812F8A330337BB238>101
D<B512FEA3000390C9FCEA01FCB3A9EE01C0A416031780A41607A2160F161FA2167FEEFF
00486C1307B8FCA32A337BB233>108 D<B7FC16F016FC3A03FE0003FF6C489038007F80
EE3FC0EE1FE0EE0FF0A2EE07F8A217FCA617F8A2EE0FF0A2EE1FE0EE3FC0EEFF00ED03FE
90B612F816C001FCC9FCB3A2487EB512F8A32E337BB238>112 D
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmr12 12 59
/Fk 59 121 df<9239FF8003F8020F9038F01FFE913A3F807C3E07913BFC000E780F80D9
01F090381FF01F494890393FE03FC04948137F494814C0011FEE1F8091C7FC4991393F80
0600013E021F90C7FC137EAFB912F0A3D8007EC7D81F80C7FCB3B18301FF4A7E007FD9FE
1FB512E0A33A467EC539>11 D<4AB4FC020F13C091383F00F002FC1338D901F0130C4948
131E4948133E4948137F011F5C49C7FCA2013E147E017E143C93C7FCAD167FB8FCA3D800
7EC7FC8282B3B001FFEC7F80007FD9FC1FB5FCA330467EC536>I<DBFF80EB3FE0020F90
39E003FFF8913B3F80780FE01E913BFC001C3F0007D901F0D9067CEB01804948D90FF849
7E4948D93FF0130749484948497E011F171F91C75B5B013E6E486D5A017E021F6E5A96C8
FCADF10FE0BBFCA3D8007EC7391F80001F190F1907B3B001FF4A6C497E007FD9FE1FB500
87B512E0A34B467EC551>14 D<127812FCA27E7E6C7E123FEA0FC06C7E6C7E12016C7E13
7C7F130E7FEB0380EB0100111275C431>18 D<130FEB1F80A2133F137FEBFF005BEA01F8
485A485A5B485A48C7FC123E12385A5A124011126CC431>I<13FCA4EBFF80EB1FE0EB07
F0EB01F814FC1300A3130114F8EB07F0EB3FE0B51280EBF0001612737E2B>24
D<121E123FEA7F80EAFFC0A313E0127FEA3F60121E1200A513C0A4EA0180A2EA0300A212
065AA25A5A12200B1D78C41B>39 D<1406140E14181430147014E0EB01C0EB0380EB0700
A2130E5B133C133813785BA2485AA2485AA212075BA2120F90C7FCA25A121EA2123EA312
3C127CA6127812F8B21278127CA6123C123EA3121EA2121F7EA27F1207A27F1203A26C7E
A26C7EA213781338133C131C7F7FA2EB0380EB01C0EB00E0147014301418140E14061764
77CA26>I<7E7E12607E12387E7E7E6C7EA26C7E6C7E7F137013787FA27FA27FA2148013
07A214C01303A214E01301A214F0A3130014F8A61478147CB2147814F8A614F01301A314
E0A2130314C0A213071480A2130F1400A2131EA25BA25B137013F05B485A485AA248C7FC
120E5A5A12305A5A5A16647ACA26>I<16C04B7EB3AB007FBAFCBB1280A26C1900C8D801
E0C9FCB3AB6F5A41407BB84C>43 D<121E123FEA7F80EAFFC0A313E0127FEA3F60121E12
00A513C0A4EA0180A2EA0300A212065AA25A5A12200B1D78891B>I<B612C0A51A057F97
21>I<121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A0A78891B>I<14FF010713E09038
1F81F890387E007E01F8131F4848EB0F80000315C04913074848EB03E0000F15F0A24848
EB01F8A3003F15FCA348C812FEA64815FFB3A26C15FEA56D1301003F15FCA3001F15F8A2
6D1303000F15F0A26C6CEB07E0000315C06D130F6C6CEB1F806C6CEB3F00017E137E9038
1F81F8903807FFE0010090C7FC28427CC031>48 D<143014F013011307131F13FFB5FC13
E713071200B3B3AF497E497E007FB6FCA3204178C031>I<EB03FE90381FFFC0017F13F0
3901F80FFC3903C001FE48C7127F000EEC3F80000CEC1FC04815E048EC0FF0A248EC07F8
A2127C00FE15FC7E6D1303A46CC71207123EC813F8A3ED0FF0A216E0151F16C0153F1680
ED7F00157E5D4A5A5D4A5A4A5A4A5A4AC7FC141E5C5C5C495A495A495A91C7120C130E5B
4914185B5B485A49143848C8123000061570000FB612F05A5A5AB712E0A326417BC031>
I<49B4FC010F13F0013F13FC9038FE01FE3901E0007FD80380EB3F8048C7EA1FC0000EEC
0FE0D80F8014F0EA1FE016F86D1307A36C5AA2D80380130FC813F0A3ED1FE016C0A2ED3F
801600157E5DEC03F0EC1FC0D90FFFC7FC15F090380001FCEC007EED1F8016C0ED0FE0ED
07F016F8150316FC16FE1501A216FFA3121E123F487E487EA216FEA24913036CC713FC12
7E0070EC07F8003015F06C140F000E15E06CEC1FC0D803E0EB7F803A01FC01FE0039007F
FFFC011F13E0010190C7FC28427CC031>I<1507A25D5DA25D5DA25DA25C5C811406140E
140C141814381430146014E014C01301EB038014005B13065B131C13185B137013605B12
015B48C7FC5A1206120E120C5A123812305A12E0B812C0A3C86CC7FCAC4B7E4A7F91B612
80A32A427DC131>I<000215C0D807C0130701FCEB7F8090B612005D5D15F05D15802606
3FFCC7FC90C9FCAE14FF010713E090381F01F0903878007C01E07FD807807F90C71380ED
0FC01202C8EA07E016F0A3ED03F8A316FCA4121C123E127F487EA216F890C7FC48140748
15F01260A26CEC0FE016C06C141F001C15806CEC3F006C147E3903C001FC3901F807F039
007FFFE06D1380D907FCC7FC26427BC031>I<EC07F8EC3FFF91B51280903903FC03C090
3907E000E0D90F80133090391F0001F0013EEB03F84913075B1201485A49EB03F00007EC
01E0000F91C7FC5B121FA25B123FA3127F90C9FCEC7F80903801FFF039FF0780FC90380E
003E0118130F49EB078016C049EB03E04914F0ED01F8A24914FC150016FEA290C8FC16FF
A27EA66C7EA216FE121FA2ED01FC6C7E16F8000714036C6C14F06DEB07E0000115C06C6C
EB0F80017EEB3F0090383F80FE90380FFFF86D5B0100138028427CC031>I<121CA2EA1F
8090B712C0A34816801700A25E0038C8120C00305D127000605D5EA25E484A5A4BC7FCA2
C812065DA25D5D5DA25D14015D1403A24AC8FCA25C140E141EA2143E143CA2147CA214FC
A313015CA31303A61307AA6D5A6D5A2A447BC231>I<14FF010713E0011F13F890383F00
FE0178131F01E0EB0F804848EB03C04848EB01E048C7FCED00F0120E1678121EA4121FA2
6D14F07FD80FF0EB01E07FD807FEEB03C06DEB07806C9038C00F006CEBE01E6CEBF83890
387FFEF090383FFFC0130F6D7F010113F801077F90381E3FFFD9781F1380D9F00713C026
01C00313E04848C613F048C7EA7FF8000E141F001EEC0FFC48EC03FE150148EC007E163F
A248151FA2160FA4160E1278161E161C6C15186C1538001F15706C6C14E06C6CEB03C0D8
03F0EB0F80C6B4EB7F0090383FFFFC010F13F00101138028427CC031>I<14FF010713E0
011F13F890387F80FC9038FC003E48487F4848EB0F804848EB07C0484814E01503484814
F0123FED01F848C7FCA216FC5AA2ED00FEA516FFA37E5DA27E7F001F5CA26C7E00071406
6C6C5B12016C6C5B017C137090383F01E090390FFF80FE903801FE0090C8FCA2ED01FCA4
16F8150316F0A2D80780EB07E0487E486CEB0FC01680151F160049133E6C485B390C0001
F80007495A3903E01FC06CB55A6C6C48C7FCEB1FF028427CC031>I<121E123FEA7F80EA
FFC0A4EA7F80EA3F00121EC7FCB3A5121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A2B
78AA1B>I<007FBAFCBB1280A3CEFCB0BB1280A36C190041187BA44C>61
D<DB0FFE146092B512C0020302F013E0913A1FFC01FC0191393FC0001E02FFC7EA0703D9
01FCEC0387D907F0EC00C74948156F4948153F4948151F49C9120F13FE000117075B4848
16031207491601120F491600121FA2123F491760A2127FA219005B12FFAC127F7FA21960
123FA27F121FA26C6C17C0A212076DEE018012036C6C16036D170000001706137F6D6C5D
6D6C5D6D6C5D6D6C5DD901FC4A5A6DB4EC0780DA3FC0011FC7FCDA1FFC13FC0203B55A02
0014C0DB0FFEC8FC3B467BC446>67 D<B912F8A3000101C0C7127F6C49EC07FC017F1501
1700187C183C181CA284A31806A41807040C7FA395C7FCA4161CA2163C167CED01FC91B5
FCA3EC8001ED007C163C161CA2160CA319C0A3F0018093C7FCA41803A21900A260A260A2
181EA2183E187EEF01FE01FF1507486D147FB95AA33A447CC342>69
D<DB0FFE146092B512C0020302F013E0913A1FFC01FC0191393FC0001E02FFC7EA0703D9
01FCEC0387D907F0EC00C74948156F4948153F4948151F49C9120F13FE000117075B4848
16031207491601120F491600121FA2123F491760A2127FA296C7FC5B12FFAC007F4BB612
C07FA293C7387FF000003F715A181F7F121FA26C7EA212077F12036C7E7F1200137F6D7E
6D6C153F6D7ED907F81567D901FC15C76DB4EC0383DA3FE0EB0F01DA1FFC137E0203B5EA
F800020002E01360DB0FFEC9FC42467BC44D>71 D<B612F0A3C6EBF0006D5A6D5AB3B3B3
A4497E497EB612F0A31C447DC323>73 D<B612F8A3000101E0C9FC6C5B6D5AB3B31830A4
18701860A518E0A3EF01C0A217031707A2170F173F177F01FFEC01FF486D011F1380B9FC
A334447CC33D>76 D<B56C933807FFFC6E5EA20001F1FE002600EFE0EE1BFC016F60A2D9
67F01633A2D963F81663A3D961FC16C3A3D960FEED0183A2027FED0303A36E6C1406A36E
6C140CA26E6C1418A36E6C1430A36E6C1460A26E6C14C0A36E6CEB0180A3037FEB0300A2
92383F8006A36F6C5AA36F6C5AA26F6C5AA36F6C5AA36F6C5AA26FB45AA370C7FC13F0A2
486C023E4A7ED80FFF4D7EB500F0011C0107B512FCA34E447BC359>I<ED1FFC4AB512C0
91390FF007F891393F8000FE027EC7123FD901F8EC0FC049486E7ED90FE0EC03F849486E
7E49486E7E49C9127F01FE707E49161F0001844848707EA24848707E000F84491603001F
84A2491601003F84A3007F844982A300FF1980AC007F19006D5EA4003F606D1603A2001F
606D1607000F60A26C6C4C5AA26C6C4C5A0001606C6C4C5A6D167F6D94C7FC6D6C15FE6D
6C4A5A6D6C4A5AD903F0EC07E0D901FCEC1FC0D9007E4AC8FC6E6C13FE91390FF007F802
01B512C09126001FFCC9FC41467BC44C>79 D<B712FCEEFFC017F800019039C0000FFE6C
49EB01FF017F9138007F80EF1FE0170FEF07F018F8EF03FCA218FE1701A218FFA718FEA2
170318FCA2EF07F818F0EF0FE0EF1FC0EF7F80933801FE00EE0FFC91B612F017800280C9
FCB3A9497E487FB612C0A338447CC342>I<49B41303010F13E0013FEBF8079038FE00FC
D801F0EB1F0F4848EB079F4848EB01DF48486DB4FC48C87E001E81123E007E81127C8212
FC82A46C81A37E6C6C91C7FCA2EA3FE07FEA1FFEEBFFE06C13FE6CEBFFE06C14FC6C14FF
6C15C0013F80010F80010180D9001F7F02017F9138001FFF150303001380167FEE3FC016
1FA2EE0FE0124012C01607A47EA217C07E160F6C1680A26CED1F006C151E6C153ED8FBC0
5CD8F9F05CD8F07CEB03F03AE03FC00FE0010FB51280D8C00349C7FC9038003FF02B467B
C436>83 D<003FB912E0A3903BF0003FF0007F01806D48130F003EC7150348EF01F00078
170019701270A219301260A5481818A5C81600B3B3A54B7EEDFFFC0103B7FCA33D447CC3
46>I<EAFFF8A4EAF000B3B3B3B3B3A2EAFFF8A40D6475CA1B>91
D<EAFFF8A4EA0078B3B3B3B3B3A2EAFFF8A40D647ECA1B>93 D<130C131E133F497EEBF3
C03801E1E03803C0F03807807848487E001E7F487F0070EB038048EB01C00040EB00801A
0E75C331>I<EB07F8EB3FFF9038F80FC03901C003E048C66C7E00066D7E48147CD80F80
137E486C133E6D133F8182A26C5A6C5AC8FCA4EC0FFF49B5FC90380FFC1FEB3FC0EBFF00
EA03FCEA07F0485A121F485A5B127F176048C7FCA4153FA26C146F7F003F9138C7C0C039
1FC001873B0FE00307E1803A07F81E03FF2701FFFC0113003A001FE0007C2B2E7CAC31>
97 D<EA01FC12FFA3120312011200B3EC01FC91380FFF8091383E07E091387000F802C0
137CD9FD807F01FFC77EEE0F804915C049EC07E017F0160317F8A217FC1601A317FEA917
FCA21603A217F8A2EE07F017E07FEE0FC001FBEC1F801700D9F180133ED9F0C05B9039E0
6001F891383C07E09039C01FFF8090260003FCC7FC2F467DC436>I<EC7F80903803FFF0
90380FC07C90383E000E49130349EB01804848EB00C0000314074848EB0FE04848131FA2
121F5B003FEC0FC0ED0780007F91C7FC90C9FCA25AAA7EA27FA2123F16306C7EA2000F15
606C7E6C6C14C00001EC01806C7E017CEB07006D130E90381FC078903807FFF001001380
242E7DAC2B>I<16FE157FA315011500167EB3EC7F80903803FFF090380FC07890383F00
0C017C13064913034848EB01FE00031400485A4848147EA2121F485AA2127FA290C8FCA2
5AA97EA37F123FA2121F7F000F15FE6C7E000314016C6CEB037E6C6C147F017C010E1380
6D011C13FE90380FC0F0903803FFE09026007F0013002F467DC436>I<EB01FE903807FF
C090381F03F090387C00F849137C48487F48487F0007158049130F000F15C0121F4914E0
003F1407A2127F90C713F0A35AA290B6FCA290C9FCA67EA36C7EA21630121F7F000F1560
6C7E000315C06C6CEB01806C6CEB0300017C13066D131C90380FC078903803FFE0903800
7F80242E7DAC2B>I<EC1FC0EC7FF0ECF038903803E07C903807C0FC90380F81FEA2EB1F
0190383F00FCA2013E1330017E1300B0B61280A3D8007EC7FCB3B1137F497E007FEBFF80
A31F467EC51E>I<D901FCEB1FC0903A0FFF807FE0903A3F07E1E1F090397C01F7819039
F800FE01484890387C00E048486D13000007143FA248486D7EA2001F81A7000F5DA26C6C
49C7FCA20003143E6C6C5B6C6C5B486C485A39033F07E090380FFF80260701FCC8FC0006
CAFCA3120E120F7EA27F13E06CB512F86CECFF806C15E06D14F848B67E3A07E0000FFED8
0F80EB00FF001EC8123F003EED1F8048150F17C0481507A6007CED0F80A26CED1F006C15
3E6C6C5CD807E0495AD801F8EB07E0D8007FEB3F8090261FFFFEC7FC010113E02C417DAB
31>I<EA01FC12FFA3120312011200B3EC01FE913807FF8091381E07E091383801F00260
7FECC000D9FD807F167C01FFC7FC167E5BA35BB3A9486C14FFB5D8FC7F13FEA32F457DC4
36>I<13E0EA03F8487EA66C5AEA00E090C7FCADEA01FC127FA3120312011200B3B0487E
B512F8A315437EC21B>I<EA01FC12FFA3120312011200B3B3B3A5487EB512FCA316457E
C41B>108 D<2701FC01FEEC7F8000FF903B07FFC001FFF0913B0E03F00380FC913B3800
F80E003E0003495C000101C0D97C307F0000037E81D9FD805C01FFC7D83EC0130F043F81
495DA34992C7FCB3A9486C4A6C497EB5D8FC3FB5000FB512C0A34A2C7DAB51>I<3901FC
01FE00FF903807FF8091381E07E091383801F0000301607F0001EBC0002600FD807F167C
01FFC7FC167E5BA35BB3A9486C14FFB5D8FC7F13FEA32F2C7DAB36>I<EC7F80903803FF
F090380FC0FC90383E001F496D7E496D7E48486D7E48486D7E48486D7E000F81A2484814
7E003F157FA290C87E481680A44816C0AA6C1680A26D147F003F1600A2001F157E6D14FE
000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49C7FC90381FC0FE903807FFF8
9038007F802A2E7DAC31>I<3901FC01FC00FF90380FFF8091383E07E091387001F80003
9038C0007C2601FD807F6CB4C7123FEE1F8049EC0FC04915E0EE07F0A217F8160317FCA3
160117FEA917FC1603A317F8160717F0EE0FE07FEE1FC06D1580EE3F00D9FD80137ED9FC
C05B91386001F891383C0FE091381FFF80DA03FCC7FC91C9FCAE487EB512FCA32F3F7DAB
36>I<91387F8006903903FFE00E90380FE07890383F001C017EEB061E5B4848EB033E48
48EB01BE12074848EB00FEA2485A003F157E5B127FA390C8FC5AA97E7FA3123F7F121F16
FE6C7E000714016C7E6C6CEB037E00001406017C130C013F131890380FC0F0903803FFE0
9038007F0091C7FCAE16FF037F13FEA32F3F7DAB33>I<3901F807E000FFEB1FF8EC383C
EC607E0003EBC0FF12013800F980EBFB00157E153C01FE1300A45BB3A77F487EB6FCA320
2C7DAB26>I<90383FE0303801FFF83907C01E70390F0007F0001C1301481300A2481470
A212F01530A37E7E007E1400EA7F80EA3FF0EBFF806C13F86C13FE0003EBFF806C14C0D8
003F13E0010313F09038001FF81403EC00FC0040147C00C0147E153E7E151EA37E151C7E
153C6C14386C147000FB14E039F18001C039E0F00F8039C07FFE00EB0FF01F2E7DAC26>
I<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2D8007EC7FCB3A4
150CAA133E013F1318A27F90380F803001071360903803E0C0903801FF809038003F001E
3E7EBC26>I<D801FC14FE00FF147FA300031401000114000000157EB3A916FEA3017C13
01A2017EEB037E013E147F011E010613806D011C13FE903807C078903803FFE09026007F
8013002F2D7DAB36>I<B539E001FFFCA3D807FEC7EA7FE0D801FCEC1F8017000000150E
160CA2017E5CA2017F14386D1430A26D6C5BA26E13E0010F5CA26D6C485AA36D6C48C7FC
A26E5A01011306A26D6C5AA2ECFE1CEC7E18A26E5AA3EC1FE0A36E5AA26E5AA36EC8FC2E
2C7EAA33>I<3B7FFFF007FFFCA30001D9800113C06C90C7EAFE006D147C6D14706D6C5B
6D6C5BECE0010107495AD903F090C7FCECF806903801FC0E01005BEC7E18EC7F30EC3F70
6E5A6E5A811407814A7EEC0DFC1418EC387E4A7E02607FECC01F01016D7ED903807F4A6C
7E01061303496D7E011C80013C1300017C147ED801FC14FFD80FFE4913C0B5D8800713FF
A3302B7FAA33>120 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop 0 84 a Fk(Corrig)m(\023)-46 b(e)33 b(TP3)g Fj(Maple)2676
b Fk(Suites)p 0 124 3820 4 v 0 407 a Fi(Exercice)53 b(1)0
527 y Fk(P)m(our)34 b(r)m(\023)-46 b(eduire)35 b(les)g(temps)g(de)f
(calcul,)h(on)f(utilise)h(l'option)f Fh(remember)i Fk(qui)e(p)s(ermet)h
(\022)-49 b(a)33 b Fj(Maple)g Fk(de)h(se)0 648 y(souv)m(enir)g(des)g
(calculs)g(pr)m(\023)-46 b(ec)m(\023)g(eden)m(ts)35 b(et)e(on)f(app)s
(elle)h(qu'une)i(seule)f(fois)e(l')m(\023)-46 b(ev)-5
b(aluation)33 b(de)g Fh(A\(n-1\))h Fk(:)146 763 y Fg(>)304
771 y Fh(A:=proc\(n\))308 863 y(local)52 b(t;)308 966
y(option)g(remenber;)308 1068 y(if)f(n=0)h(then)h(11/2)308
1170 y(elif)f(n=1)g(then)g(61/11)308 1273 y(else)g(t:=A\(n-1\);)461
1375 y(111-\(1130/t\)+\(3000/\(t*A)q(\(n-2)q(\)\)\))308
1477 y(fi;)308 1580 y(end:)0 1819 y Fk(On)g(p)s(eut)g(encore)h(acc)m
(\023)-46 b(el)m(\023)g(erer)53 b(les)g(calculs)g(grace)f(\022)-49
b(a)52 b(une)h(b)s(oucle)f Fh(for)h Fk(et)f(\022)-49
b(a)52 b(deux)h(v)-5 b(ariables)52 b(qui)0 1939 y(repr)m(\023)-46
b(esen)m(ten)m(t)31 b(les)d(deux)h(derniers)h(termes)f(calcul)m(\023)
-46 b(es.)44 b(On)27 b(garde)h(en)h(m)m(\023)-46 b(emoire)29
b(les)f(termes)i(successiv)m(e-)0 2060 y(men)m(t)k(calcul)m(\023)-46
b(es)34 b(dans)f(une)g(liste)h(de)f(fa\030)-43 b(con)32
b(\022)-49 b(a)32 b(tracer)h(la)g(suite)g(a)m(v)m(ec)h
Fh(plot)p Fk(.)146 2175 y Fg(>)304 2183 y Fh(Aliste1:=proc\(n\))308
2275 y(local)52 b(i,a,b,c,L;)308 2378 y(a:=11/2;)308
2480 y(b:=61/11;)308 2582 y(L:=[0,a],[1,b];)308 2685
y(for)g(i)f(from)i(2)e(to)h(n)f(do)410 2787 y
(c:=111-\(1130/b\)+\(3000/\(a)q(*b\)\))q(;)410 2889 y(a:=b;)410
2992 y(b:=c;)410 3094 y(L:=L,[i,c];)308 3196 y(od;)308
3299 y([L];)308 3401 y(end:)146 3625 y Fg(>)304 3633
y Fh(plot\(Aliste1\(100\),n=0..100)q(\);)574 3675 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 574
3675 a @beginspecial 0 @llx 0 @lly 612 @urx 792 @ury
2477 @rwi 3205 @rhi @setspecial
%%BeginDocument: TP301.eps
%!PS-Adobe-3.0 EPSF
%%Title: Maple plot
%%Creator: MapleV 
%%Pages:  1
%%BoundingBox: 0 0 612 792 
%%DocumentNeededResources: font Courier
%%EndComments
20 dict begin
gsave
/m {moveto} def
/l {lineto} def
/C {setrgbcolor} def
/Y /setcmykcolor where { %%ifelse Use built-in operator
       /setcmykcolor get
   }{ %%ifelse Emulate setcmykcolor with setrgbcolor
       { %%def
           1 sub 3 { %%repeat
               3 index add neg dup 0 lt { pop 0 } if 3 1 roll
           } repeat setrgbcolor
       } bind
   } ifelse def
/G {setgray} def
/S {stroke} def
/NP {newpath} def
%%%%This draws a filled polygon and avoids bugs/features
%%%%   of some postscript interpreters
%%%%GHOSTSCRIPT: has a bug in reversepath - removing
%%%%the call to reversepath is a sufficient work around
/P {gsave fill grestore reversepath stroke} def
%%%%This function is needed for drawing text
/stringbbox {gsave NP 0 0 m false charpath flattenpath
   pathbbox 4 2 roll pop pop 1.1 mul cvi exch 1.1 mul 
   cvi exch grestore} def
/thin 3 def
/medium 7 def
/thick 16 def
/boundarythick 20 def %% thickness of bounding box
%%IncludeResource: font Courier
576 36 translate
90 rotate
0.108 0.108 scale
1 setlinejoin
1 setlinecap
0.0 setgray
/inch {72 mul} def
/fheight 0.35 inch neg def
    0 G
medium setlinewidth
[] 0 setdash   0.3 G
NP 666 576 m 719 926 l
773 1270 l
826 1602 l
879 1919 l
933 2217 l
986 2492 l
1039 2743 l
1093 2970 l
1146 3173 l
1199 3352 l
1253 3509 l
1306 3646 l
1359 3764 l
1413 3865 l
1466 3952 l
1519 4027 l
1573 4089 l
1626 4143 l
1679 4188 l
1733 4226 l
1786 4257 l
1839 4284 l
1893 4307 l
1946 4326 l
1999 4341 l
2053 4354 l
2106 4365 l
2159 4375 l
2213 4382 l
2266 4389 l
2319 4394 l
2373 4399 l
2426 4402 l
2479 4405 l
2533 4408 l
2586 4410 l
2639 4412 l
2693 4414 l
2746 4415 l
2799 4416 l
2853 4417 l
2906 4417 l
2959 4418 l
3013 4419 l
3066 4419 l
3119 4419 l
3173 4420 l
3226 4420 l
3279 4420 l
3333 4420 l
3386 4420 l
3439 4420 l
3492 4421 l
3546 4421 l
3599 4421 l
3652 4421 l
3706 4421 l
3759 4421 l
3812 4421 l
3866 4421 l
3919 4421 l
3972 4421 l
4026 4421 l
4079 4421 l
4132 4421 l
4186 4421 l
4239 4421 l
4292 4421 l
4346 4421 l
4399 4421 l
4452 4421 l
4506 4421 l
4559 4421 l
4612 4421 l
4666 4421 l
4719 4421 l
4772 4421 l
4826 4421 l
4879 4421 l
4932 4421 l
4986 4421 l
5039 4421 l
5092 4421 l
5146 4421 l
5199 4421 l
5252 4421 l
5306 4421 l
5359 4421 l
5412 4421 l
5466 4421 l
5519 4421 l
5572 4421 l
5626 4421 l
5679 4421 l
5732 4421 l
5786 4421 l
5839 4421 l
5892 4421 l
5946 4421 l
5999 4421 l
S
    0 G
medium setlinewidth
NP 666 500 m 666 4500 l
S
thin setlinewidth
NP 623 576 m 709 576 l
S
NP 645 730 m 687 730 l
S
NP 645 884 m 687 884 l
S
NP 645 1038 m 687 1038 l
S
NP 645 1192 m 687 1192 l
S
NP 623 1345 m 709 1345 l
S
NP 645 1499 m 687 1499 l
S
NP 645 1653 m 687 1653 l
S
NP 645 1807 m 687 1807 l
S
NP 645 1960 m 687 1960 l
S
NP 623 2114 m 709 2114 l
S
NP 645 2268 m 687 2268 l
S
NP 645 2422 m 687 2422 l
S
NP 645 2576 m 687 2576 l
S
NP 645 2729 m 687 2729 l
S
NP 623 2883 m 709 2883 l
S
NP 645 3037 m 687 3037 l
S
NP 645 3191 m 687 3191 l
S
NP 645 3345 m 687 3345 l
S
NP 645 3498 m 687 3498 l
S
NP 623 3652 m 709 3652 l
S
NP 645 3806 m 687 3806 l
S
NP 645 3960 m 687 3960 l
S
NP 645 4113 m 687 4113 l
S
NP 645 4267 m 687 4267 l
S
NP 623 4421 m 709 4421 l
S
medium setlinewidth
NP 666 500 m 5999 500 l
S
thin setlinewidth
NP 666 468 m 666 532 l
S
NP 879 484 m 879 516 l
S
NP 1093 484 m 1093 516 l
S
NP 1306 484 m 1306 516 l
S
NP 1519 484 m 1519 516 l
S
NP 1733 468 m 1733 532 l
S
NP 1946 484 m 1946 516 l
S
NP 2159 484 m 2159 516 l
S
NP 2373 484 m 2373 516 l
S
NP 2586 484 m 2586 516 l
S
NP 2799 468 m 2799 532 l
S
NP 3013 484 m 3013 516 l
S
NP 3226 484 m 3226 516 l
S
NP 3439 484 m 3439 516 l
S
NP 3652 484 m 3652 516 l
S
NP 3866 468 m 3866 532 l
S
NP 4079 484 m 4079 516 l
S
NP 4292 484 m 4292 516 l
S
NP 4506 484 m 4506 516 l
S
NP 4719 484 m 4719 516 l
S
NP 4932 468 m 4932 532 l
S
NP 5146 484 m 5146 516 l
S
NP 5359 484 m 5359 516 l
S
NP 5572 484 m 5572 516 l
S
NP 5786 484 m 5786 516 l
S
NP 5999 468 m 5999 532 l
S
medium setlinewidth
/Courier findfont 115 scalefont setfont
(5.5) dup stringbbox 2 idiv 576 exch sub exch 623 exch sub exch m show
(5.6) dup stringbbox 2 idiv 1345 exch sub exch 623 exch sub exch m show
(5.7) dup stringbbox 2 idiv 2114 exch sub exch 623 exch sub exch m show
(5.8) dup stringbbox 2 idiv 2883 exch sub exch 623 exch sub exch m show
(5.9) dup stringbbox 2 idiv 3652 exch sub exch 623 exch sub exch m show
(6) dup stringbbox 2 idiv 4421 exch sub exch 623 exch sub exch m show
(0) dup stringbbox 468 exch sub exch pop 666 exch m show
(20) dup stringbbox 468 exch sub exch 2 idiv 1733 exch sub exch m show
(40) dup stringbbox 468 exch sub exch 2 idiv 2799 exch sub exch m show
(60) dup stringbbox 468 exch sub exch 2 idiv 3866 exch sub exch m show
(80) dup stringbbox 468 exch sub exch 2 idiv 4932 exch sub exch m show
(100) dup stringbbox 468 exch sub exch 2 idiv 5999 exch sub exch m show
(n) dup stringbbox 339 exch sub exch 2 idiv 3333 exch sub exch m show
boundarythick setlinewidth
%%%% The following draws a box around the plot.
/bd boundarythick 2 idiv def
[] 0 setdash 
NP bd bd m bd 5000 bd sub l 
6666 bd sub 5000 bd sub l 
6666 bd sub bd l 
bd bd l S

showpage
grestore
end
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2638 3675 a
 currentpoint grestore moveto
 2638 3675 a 1885 5944 a Fk(1)p
eop
%%Page: 2 2
2 1 bop 0 84 a Fk(Corrig)m(\023)-46 b(e)33 b(TP3)g Fj(Maple)2676
b Fk(Suites)p 0 124 3820 4 v 0 407 a(On)44 b(constate)h(que)g(la)g
(suite)g(con)m(v)m(erge)h(v)m(ers)f(6.)79 b(Il)44 b(s'agit)h(ici)f
(d'un)h(calcul)g(formel)g(:)66 b Fj(Maple)43 b Fk(ne)0
527 y(manipule)34 b(que)f(des)h(rationnels.)146 643 y
Fg(>)304 651 y Fh(Aliste2:=proc\(n\))308 737 y(local)52
b(i,a,b,c,L;)308 840 y(a:=evalf\(11/2\);)308 942 y(b:=evalf\(61/11\);)
308 1044 y(L:=[0,a],[1,b];)308 1147 y(for)g(i)f(from)i(2)e(to)h(n)f(do)
410 1249 y(c:=111-\(1130/b\)+\(3000/\(a)q(*b\)\))q(;)410
1351 y(a:=b;)410 1454 y(b:=c;)410 1556 y(L:=L,[i,c];)308
1658 y(od;)308 1761 y([L];)308 1863 y(end:)146 2081 y
Fg(>)304 2089 y Fh(plot\(Aliste2\(100\),n=0..100)q(\);)574
2131 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 574 2131 a @beginspecial 0 @llx 0 @lly 612 @urx
792 @ury 2477 @rwi 3205 @rhi @setspecial
%%BeginDocument: TP302.eps
%!PS-Adobe-3.0 EPSF
%%Title: Maple plot
%%Creator: MapleV 
%%Pages:  1
%%BoundingBox: 0 0 612 792 
%%DocumentNeededResources: font Courier
%%EndComments
20 dict begin
gsave
/m {moveto} def
/l {lineto} def
/C {setrgbcolor} def
/Y /setcmykcolor where { %%ifelse Use built-in operator
       /setcmykcolor get
   }{ %%ifelse Emulate setcmykcolor with setrgbcolor
       { %%def
           1 sub 3 { %%repeat
               3 index add neg dup 0 lt { pop 0 } if 3 1 roll
           } repeat setrgbcolor
       } bind
   } ifelse def
/G {setgray} def
/S {stroke} def
/NP {newpath} def
%%%%This draws a filled polygon and avoids bugs/features
%%%%   of some postscript interpreters
%%%%GHOSTSCRIPT: has a bug in reversepath - removing
%%%%the call to reversepath is a sufficient work around
/P {gsave fill grestore reversepath stroke} def
%%%%This function is needed for drawing text
/stringbbox {gsave NP 0 0 m false charpath flattenpath
   pathbbox 4 2 roll pop pop 1.1 mul cvi exch 1.1 mul 
   cvi exch grestore} def
/thin 3 def
/medium 7 def
/thick 16 def
/boundarythick 20 def %% thickness of bounding box
%%IncludeResource: font Courier
576 36 translate
90 rotate
0.108 0.108 scale
1 setlinejoin
1 setlinecap
0.0 setgray
/inch {72 mul} def
/fheight 0.35 inch neg def
    0 G
medium setlinewidth
[] 0 setdash   0.3 G
NP 666 2238 m 719 2238 l
773 2239 l
826 2240 l
879 2241 l
933 2242 l
986 2242 l
1039 2240 l
1093 2191 l
1146 576 l
1199 4421 l
1253 4163 l
1306 4150 l
1359 4149 l
1413 4149 l
1466 4149 l
1519 4149 l
1573 4149 l
1626 4149 l
1679 4149 l
1733 4149 l
1786 4149 l
1839 4149 l
1893 4149 l
1946 4149 l
1999 4149 l
2053 4149 l
2106 4149 l
2159 4149 l
2213 4149 l
2266 4149 l
2319 4149 l
2373 4149 l
2426 4149 l
2479 4149 l
2533 4149 l
2586 4149 l
2639 4149 l
2693 4149 l
2746 4149 l
2799 4149 l
2853 4149 l
2906 4149 l
2959 4149 l
3013 4149 l
3066 4149 l
3119 4149 l
3173 4149 l
3226 4149 l
3279 4149 l
3333 4149 l
3386 4149 l
3439 4149 l
3492 4149 l
3546 4149 l
3599 4149 l
3652 4149 l
3706 4149 l
3759 4149 l
3812 4149 l
3866 4149 l
3919 4149 l
3972 4149 l
4026 4149 l
4079 4149 l
4132 4149 l
4186 4149 l
4239 4149 l
4292 4149 l
4346 4149 l
4399 4149 l
4452 4149 l
4506 4149 l
4559 4149 l
4612 4149 l
4666 4149 l
4719 4149 l
4772 4149 l
4826 4149 l
4879 4149 l
4932 4149 l
4986 4149 l
5039 4149 l
5092 4149 l
5146 4149 l
5199 4149 l
5252 4149 l
5306 4149 l
5359 4149 l
5412 4149 l
5466 4149 l
5519 4149 l
5572 4149 l
5626 4149 l
5679 4149 l
5732 4149 l
5786 4149 l
5839 4149 l
5892 4149 l
5946 4149 l
5999 4149 l
S
    0 G
medium setlinewidth
NP 666 500 m 666 4500 l
S
thin setlinewidth
NP 623 508 m 709 508 l
S
NP 645 589 m 687 589 l
S
NP 645 670 m 687 670 l
S
NP 645 751 m 687 751 l
S
NP 645 832 m 687 832 l
S
NP 623 913 m 709 913 l
S
NP 645 994 m 687 994 l
S
NP 645 1075 m 687 1075 l
S
NP 645 1155 m 687 1155 l
S
NP 645 1236 m 687 1236 l
S
NP 623 1317 m 709 1317 l
S
NP 645 1398 m 687 1398 l
S
NP 645 1479 m 687 1479 l
S
NP 645 1560 m 687 1560 l
S
NP 645 1641 m 687 1641 l
S
NP 623 1722 m 709 1722 l
S
NP 645 1803 m 687 1803 l
S
NP 645 1884 m 687 1884 l
S
NP 645 1964 m 687 1964 l
S
NP 645 2045 m 687 2045 l
S
NP 623 2126 m 709 2126 l
S
NP 645 2207 m 687 2207 l
S
NP 645 2288 m 687 2288 l
S
NP 645 2369 m 687 2369 l
S
NP 645 2450 m 687 2450 l
S
NP 623 2531 m 709 2531 l
S
NP 645 2612 m 687 2612 l
S
NP 645 2693 m 687 2693 l
S
NP 645 2774 m 687 2774 l
S
NP 645 2854 m 687 2854 l
S
NP 623 2935 m 709 2935 l
S
NP 645 3016 m 687 3016 l
S
NP 645 3097 m 687 3097 l
S
NP 645 3178 m 687 3178 l
S
NP 645 3259 m 687 3259 l
S
NP 623 3340 m 709 3340 l
S
NP 645 3421 m 687 3421 l
S
NP 645 3502 m 687 3502 l
S
NP 645 3583 m 687 3583 l
S
NP 645 3664 m 687 3664 l
S
NP 623 3744 m 709 3744 l
S
NP 645 3825 m 687 3825 l
S
NP 645 3906 m 687 3906 l
S
NP 645 3987 m 687 3987 l
S
NP 645 4068 m 687 4068 l
S
NP 623 4149 m 709 4149 l
S
NP 645 4230 m 687 4230 l
S
NP 645 4311 m 687 4311 l
S
NP 645 4392 m 687 4392 l
S
NP 645 4473 m 687 4473 l
S
medium setlinewidth
NP 666 2126 m 5999 2126 l
S
thin setlinewidth
NP 879 2110 m 879 2142 l
S
NP 1093 2110 m 1093 2142 l
S
NP 1306 2110 m 1306 2142 l
S
NP 1519 2110 m 1519 2142 l
S
NP 1733 2094 m 1733 2158 l
S
NP 1946 2110 m 1946 2142 l
S
NP 2159 2110 m 2159 2142 l
S
NP 2373 2110 m 2373 2142 l
S
NP 2586 2110 m 2586 2142 l
S
NP 2799 2094 m 2799 2158 l
S
NP 3013 2110 m 3013 2142 l
S
NP 3226 2110 m 3226 2142 l
S
NP 3439 2110 m 3439 2142 l
S
NP 3652 2110 m 3652 2142 l
S
NP 3866 2094 m 3866 2158 l
S
NP 4079 2110 m 4079 2142 l
S
NP 4292 2110 m 4292 2142 l
S
NP 4506 2110 m 4506 2142 l
S
NP 4719 2110 m 4719 2142 l
S
NP 4932 2094 m 4932 2158 l
S
NP 5146 2110 m 5146 2142 l
S
NP 5359 2110 m 5359 2142 l
S
NP 5572 2110 m 5572 2142 l
S
NP 5786 2110 m 5786 2142 l
S
NP 5999 2094 m 5999 2158 l
S
medium setlinewidth
/Courier findfont 115 scalefont setfont
(-80) dup stringbbox 2 idiv 508 exch sub exch 623 exch sub exch m show
(-60) dup stringbbox 2 idiv 913 exch sub exch 623 exch sub exch m show
(-40) dup stringbbox 2 idiv 1317 exch sub exch 623 exch sub exch m show
(-20) dup stringbbox 2 idiv 1722 exch sub exch 623 exch sub exch m show
(0) dup stringbbox 2126 exch sub exch 623 exch sub exch m show
(20) dup stringbbox 2 idiv 2531 exch sub exch 623 exch sub exch m show
(40) dup stringbbox 2 idiv 2935 exch sub exch 623 exch sub exch m show
(60) dup stringbbox 2 idiv 3340 exch sub exch 623 exch sub exch m show
(80) dup stringbbox 2 idiv 3744 exch sub exch 623 exch sub exch m show
(100) dup stringbbox 2 idiv 4149 exch sub exch 623 exch sub exch m show
(20) dup stringbbox 2094 exch sub exch 2 idiv 1733 exch sub exch m show
(40) dup stringbbox 2094 exch sub exch 2 idiv 2799 exch sub exch m show
(60) dup stringbbox 2094 exch sub exch 2 idiv 3866 exch sub exch m show
(80) dup stringbbox 2094 exch sub exch 2 idiv 4932 exch sub exch m show
(100) dup stringbbox 2094 exch sub exch 2 idiv 5999 exch sub exch m show
(n) dup stringbbox 1966 exch sub exch 2 idiv 3333 exch sub exch m show
boundarythick setlinewidth
%%%% The following draws a box around the plot.
/bd boundarythick 2 idiv def
[] 0 setdash 
NP bd bd m bd 5000 bd sub l 
6666 bd sub 5000 bd sub l 
6666 bd sub bd l 
bd bd l S

showpage
grestore
end
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2638 2131 a
 currentpoint grestore moveto
 2638 2131 a 0 4323 a Fk(Si)41
b(on)f(force)h Fj(Maple)e Fk(\022)-49 b(a)40 b(faire)h(du)g(calcul)g(n)
m(um)m(\023)-46 b(erique)43 b(\(en)e(donnan)m(t)g(les)g(premi)m(\022)
-46 b(eres)43 b(v)-5 b(aleurs)41 b(de)g(la)0 4443 y(suite)29
b(sous)f(forme)g(d)m(\023)-46 b(ecimal\),)30 b(la)e(suite)h(calcul)m
(\023)-46 b(ee)29 b(sem)m(ble)h(con)m(v)m(erger)f(v)m(ers)h(100.)41
b(Le)28 b(calcul)h(n)m(um)m(\023)-46 b(erique)0 4564
y(donne)33 b(donc)g(un)g(r)m(\023)-46 b(esultat)33 b(faux.)146
4679 y Fg(>)304 4687 y Fh(Uliste1:=proc\(n\))308 4774
y(local)52 b(i,a,b,c,L;)308 4876 y(a:=1;)308 4978 y(b:=1/3;)308
5081 y(L:=[0,a],[1,b];)308 5183 y(for)g(i)f(from)i(2)e(to)h(n)f(do)410
5285 y(c:=10/3*b-a;)410 5388 y(a:=b;)410 5490 y(b:=c;)410
5592 y(L:=L,[i,c];)308 5695 y(od;)1885 5944 y Fk(2)p
eop
%%Page: 3 3
3 2 bop 0 84 a Fk(Corrig)m(\023)-46 b(e)33 b(TP3)g Fj(Maple)2676
b Fk(Suites)p 0 124 3820 4 v 308 407 a Fh([L];)308 509
y(end:)146 733 y Fg(>)304 741 y Fh(plot\(Uliste1\(20\),n=0..20\);)574
783 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 574 783 a @beginspecial 0 @llx 0 @lly 612 @urx
792 @ury 2477 @rwi 3205 @rhi @setspecial
%%BeginDocument: TP303.eps
%!PS-Adobe-3.0 EPSF
%%Title: Maple plot
%%Creator: MapleV 
%%Pages:  1
%%BoundingBox: 0 0 612 792 
%%DocumentNeededResources: font Courier
%%EndComments
20 dict begin
gsave
/m {moveto} def
/l {lineto} def
/C {setrgbcolor} def
/Y /setcmykcolor where { %%ifelse Use built-in operator
       /setcmykcolor get
   }{ %%ifelse Emulate setcmykcolor with setrgbcolor
       { %%def
           1 sub 3 { %%repeat
               3 index add neg dup 0 lt { pop 0 } if 3 1 roll
           } repeat setrgbcolor
       } bind
   } ifelse def
/G {setgray} def
/S {stroke} def
/NP {newpath} def
%%%%This draws a filled polygon and avoids bugs/features
%%%%   of some postscript interpreters
%%%%GHOSTSCRIPT: has a bug in reversepath - removing
%%%%the call to reversepath is a sufficient work around
/P {gsave fill grestore reversepath stroke} def
%%%%This function is needed for drawing text
/stringbbox {gsave NP 0 0 m false charpath flattenpath
   pathbbox 4 2 roll pop pop 1.1 mul cvi exch 1.1 mul 
   cvi exch grestore} def
/thin 3 def
/medium 7 def
/thick 16 def
/boundarythick 20 def %% thickness of bounding box
%%IncludeResource: font Courier
576 36 translate
90 rotate
0.108 0.108 scale
1 setlinejoin
1 setlinecap
0.0 setgray
/inch {72 mul} def
/fheight 0.35 inch neg def
    0 G
medium setlinewidth
[] 0 setdash   0.3 G
NP 666 4421 m 933 1858 l
1199 1004 l
1466 719 l
1733 624 l
1999 592 l
2266 582 l
2533 578 l
2799 577 l
3066 577 l
3333 576 l
3599 576 l
3866 576 l
4132 576 l
4399 576 l
4666 576 l
4932 576 l
5199 576 l
5466 576 l
5732 576 l
5999 576 l
S
    0 G
medium setlinewidth
NP 666 499 m 666 4500 l
S
thin setlinewidth
NP 623 576 m 709 576 l
S
NP 645 730 m 687 730 l
S
NP 645 884 m 687 884 l
S
NP 645 1038 m 687 1038 l
S
NP 645 1192 m 687 1192 l
S
NP 623 1345 m 709 1345 l
S
NP 645 1499 m 687 1499 l
S
NP 645 1653 m 687 1653 l
S
NP 645 1807 m 687 1807 l
S
NP 645 1960 m 687 1960 l
S
NP 623 2114 m 709 2114 l
S
NP 645 2268 m 687 2268 l
S
NP 645 2422 m 687 2422 l
S
NP 645 2576 m 687 2576 l
S
NP 645 2729 m 687 2729 l
S
NP 623 2883 m 709 2883 l
S
NP 645 3037 m 687 3037 l
S
NP 645 3191 m 687 3191 l
S
NP 645 3345 m 687 3345 l
S
NP 645 3498 m 687 3498 l
S
NP 623 3652 m 709 3652 l
S
NP 645 3806 m 687 3806 l
S
NP 645 3960 m 687 3960 l
S
NP 645 4113 m 687 4113 l
S
NP 645 4267 m 687 4267 l
S
NP 623 4421 m 709 4421 l
S
medium setlinewidth
NP 666 576 m 5999 576 l
S
thin setlinewidth
NP 933 560 m 933 592 l
S
NP 1199 560 m 1199 592 l
S
NP 1466 560 m 1466 592 l
S
NP 1733 560 m 1733 592 l
S
NP 1999 544 m 1999 608 l
S
NP 2266 560 m 2266 592 l
S
NP 2533 560 m 2533 592 l
S
NP 2799 560 m 2799 592 l
S
NP 3066 560 m 3066 592 l
S
NP 3333 544 m 3333 608 l
S
NP 3599 560 m 3599 592 l
S
NP 3866 560 m 3866 592 l
S
NP 4132 560 m 4132 592 l
S
NP 4399 560 m 4399 592 l
S
NP 4666 544 m 4666 608 l
S
NP 4932 560 m 4932 592 l
S
NP 5199 560 m 5199 592 l
S
NP 5466 560 m 5466 592 l
S
NP 5732 560 m 5732 592 l
S
NP 5999 544 m 5999 608 l
S
medium setlinewidth
/Courier findfont 115 scalefont setfont
(0) dup stringbbox 576 exch sub exch 623 exch sub exch m show
(0.2) dup stringbbox 2 idiv 1345 exch sub exch 623 exch sub exch m show
(0.4) dup stringbbox 2 idiv 2114 exch sub exch 623 exch sub exch m show
(0.6) dup stringbbox 2 idiv 2883 exch sub exch 623 exch sub exch m show
(0.8) dup stringbbox 2 idiv 3652 exch sub exch 623 exch sub exch m show
(1) dup stringbbox 2 idiv 4421 exch sub exch 623 exch sub exch m show
(5) dup stringbbox 544 exch sub exch 2 idiv 1999 exch sub exch m show
(10) dup stringbbox 544 exch sub exch 2 idiv 3333 exch sub exch m show
(15) dup stringbbox 544 exch sub exch 2 idiv 4666 exch sub exch m show
(20) dup stringbbox 544 exch sub exch 2 idiv 5999 exch sub exch m show
(n) dup stringbbox 416 exch sub exch 2 idiv 3333 exch sub exch m show
boundarythick setlinewidth
%%%% The following draws a box around the plot.
/bd boundarythick 2 idiv def
[] 0 setdash 
NP bd bd m bd 5000 bd sub l 
6666 bd sub 5000 bd sub l 
6666 bd sub bd l 
bd bd l S

showpage
grestore
end
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2638 783 a
 currentpoint grestore moveto
 2638 783 a 146 2881 a Fg(>)304
2889 y Fh(Uliste2:=proc\(n\))308 2981 y(local)52 b(i,a,b,c,L;)308
3083 y(a:=1;)308 3186 y(b:=evalf\(1/3\);)308 3288 y(L:=[0,a],[1,b];)308
3390 y(for)g(i)f(from)i(2)e(to)h(n)f(do)410 3492 y(c:=10/3*b-a;)410
3595 y(a:=b;)410 3697 y(b:=c;)410 3799 y(L:=L,[i,c];)308
3902 y(od;)308 4004 y([L];)308 4106 y(end:)146 4330 y
Fg(>)304 4338 y Fh(plot\(Uliste2\(50\),n=0..50\);)1885
5944 y Fk(3)p eop
%%Page: 4 4
4 3 bop 0 84 a Fk(Corrig)m(\023)-46 b(e)33 b(TP3)g Fj(Maple)2676
b Fk(Suites)p 0 124 3820 4 v 574 407 a
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 574 407 a @beginspecial
0 @llx 0 @lly 612 @urx 792 @ury 2477 @rwi 3205 @rhi @setspecial
%%BeginDocument: TP304.eps
%!PS-Adobe-3.0 EPSF
%%Title: Maple plot
%%Creator: MapleV 
%%Pages:  1
%%BoundingBox: 0 0 612 792 
%%DocumentNeededResources: font Courier
%%EndComments
20 dict begin
gsave
/m {moveto} def
/l {lineto} def
/C {setrgbcolor} def
/Y /setcmykcolor where { %%ifelse Use built-in operator
       /setcmykcolor get
   }{ %%ifelse Emulate setcmykcolor with setrgbcolor
       { %%def
           1 sub 3 { %%repeat
               3 index add neg dup 0 lt { pop 0 } if 3 1 roll
           } repeat setrgbcolor
       } bind
   } ifelse def
/G {setgray} def
/S {stroke} def
/NP {newpath} def
%%%%This draws a filled polygon and avoids bugs/features
%%%%   of some postscript interpreters
%%%%GHOSTSCRIPT: has a bug in reversepath - removing
%%%%the call to reversepath is a sufficient work around
/P {gsave fill grestore reversepath stroke} def
%%%%This function is needed for drawing text
/stringbbox {gsave NP 0 0 m false charpath flattenpath
   pathbbox 4 2 roll pop pop 1.1 mul cvi exch 1.1 mul 
   cvi exch grestore} def
/thin 3 def
/medium 7 def
/thick 16 def
/boundarythick 20 def %% thickness of bounding box
%%IncludeResource: font Courier
576 36 translate
90 rotate
0.108 0.108 scale
1 setlinejoin
1 setlinecap
0.0 setgray
/inch {72 mul} def
/fheight 0.35 inch neg def
    0 G
medium setlinewidth
[] 0 setdash   0.3 G
NP 666 4421 m 773 4421 l
879 4421 l
986 4421 l
1093 4421 l
1199 4421 l
1306 4421 l
1413 4421 l
1519 4421 l
1626 4421 l
1733 4421 l
1839 4421 l
1946 4421 l
2053 4421 l
2159 4421 l
2266 4421 l
2373 4421 l
2479 4421 l
2586 4421 l
2693 4421 l
2799 4421 l
2906 4421 l
3013 4421 l
3119 4421 l
3226 4421 l
3333 4421 l
3439 4421 l
3546 4421 l
3652 4421 l
3759 4421 l
3866 4421 l
3972 4421 l
4079 4421 l
4186 4421 l
4292 4421 l
4399 4421 l
4506 4421 l
4612 4421 l
4719 4421 l
4826 4421 l
4932 4421 l
5039 4421 l
5146 4420 l
5252 4419 l
5359 4416 l
5466 4405 l
5572 4374 l
5679 4279 l
5786 3994 l
5892 3140 l
5999 576 l
S
    0 G
medium setlinewidth
NP 666 500 m 666 4500 l
S
thin setlinewidth
NP 645 651 m 687 651 l
S
NP 645 822 m 687 822 l
S
NP 623 994 m 709 994 l
S
NP 645 1165 m 687 1165 l
S
NP 645 1336 m 687 1336 l
S
NP 645 1508 m 687 1508 l
S
NP 645 1679 m 687 1679 l
S
NP 623 1850 m 709 1850 l
S
NP 645 2022 m 687 2022 l
S
NP 645 2193 m 687 2193 l
S
NP 645 2365 m 687 2365 l
S
NP 645 2536 m 687 2536 l
S
NP 623 2707 m 709 2707 l
S
NP 645 2879 m 687 2879 l
S
NP 645 3050 m 687 3050 l
S
NP 645 3221 m 687 3221 l
S
NP 645 3393 m 687 3393 l
S
NP 623 3564 m 709 3564 l
S
NP 645 3736 m 687 3736 l
S
NP 645 3907 m 687 3907 l
S
NP 645 4078 m 687 4078 l
S
NP 645 4250 m 687 4250 l
S
NP 623 4421 m 709 4421 l
S
medium setlinewidth
NP 666 4421 m 5999 4421 l
S
thin setlinewidth
NP 879 4405 m 879 4437 l
S
NP 1093 4405 m 1093 4437 l
S
NP 1306 4405 m 1306 4437 l
S
NP 1519 4405 m 1519 4437 l
S
NP 1733 4389 m 1733 4453 l
S
NP 1946 4405 m 1946 4437 l
S
NP 2159 4405 m 2159 4437 l
S
NP 2373 4405 m 2373 4437 l
S
NP 2586 4405 m 2586 4437 l
S
NP 2799 4389 m 2799 4453 l
S
NP 3013 4405 m 3013 4437 l
S
NP 3226 4405 m 3226 4437 l
S
NP 3439 4405 m 3439 4437 l
S
NP 3652 4405 m 3652 4437 l
S
NP 3866 4389 m 3866 4453 l
S
NP 4079 4405 m 4079 4437 l
S
NP 4292 4405 m 4292 4437 l
S
NP 4506 4405 m 4506 4437 l
S
NP 4719 4405 m 4719 4437 l
S
NP 4932 4389 m 4932 4453 l
S
NP 5146 4405 m 5146 4437 l
S
NP 5359 4405 m 5359 4437 l
S
NP 5572 4405 m 5572 4437 l
S
NP 5786 4405 m 5786 4437 l
S
NP 5999 4389 m 5999 4453 l
S
medium setlinewidth
/Courier findfont 115 scalefont setfont
(-8e+12) dup stringbbox 2 idiv 994 exch sub exch 623 exch sub exch m show
(-6e+12) dup stringbbox 2 idiv 1850 exch sub exch 623 exch sub exch m show
(-4e+12) dup stringbbox 2 idiv 2707 exch sub exch 623 exch sub exch m show
(-2e+12) dup stringbbox 2 idiv 3564 exch sub exch 623 exch sub exch m show
(0) dup stringbbox 4421 exch sub exch 623 exch sub exch m show
(10) dup stringbbox pop 4453 exch 2 idiv 1733 exch sub exch m show
(20) dup stringbbox pop 4453 exch 2 idiv 2799 exch sub exch m show
(30) dup stringbbox pop 4453 exch 2 idiv 3866 exch sub exch m show
(40) dup stringbbox pop 4453 exch 2 idiv 4932 exch sub exch m show
(50) dup stringbbox pop 4453 exch 2 idiv 5999 exch sub exch m show
(n) dup stringbbox pop 4581 exch 2 idiv 3333 exch sub exch m show
boundarythick setlinewidth
%%%% The following draws a box around the plot.
/bd boundarythick 2 idiv def
[] 0 setdash 
NP bd bd m bd 5000 bd sub l 
6666 bd sub 5000 bd sub l 
6666 bd sub bd l 
bd bd l S

showpage
grestore
end
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2638 407 a
 currentpoint grestore moveto
 2638 407 a 0 2599 a Fk(Le)37
b(calcul)h(exacte)g(sur)f Ff(Q)g Fk(mon)m(tre)g(que)h(cette)f(suite)h
(tend)g(v)m(ers)g(0,)f(alors)g(que)h(le)f(calcul)h(n)m(um)m(\023)-46
b(erique)0 2720 y(div)m(erge.)146 2835 y Fg(>)304 2843
y Fh(rsolve\()p Fe(f)p Fh(y\(n\)=10/3*y\(n-1\)-y\(n)q(-2\))q(,y\(0)q
(\)=1,)q(y\(1\))q(=)57 b(1/3)p Fe(g)p Fh(,y\);)1814 3090
y Fk(\()1862 3023 y(1)p 1862 3067 49 4 v 1862 3159 a(3)1920
3090 y(\))1958 3049 y Fg(n)146 3266 y(>)304 3274 y Fh(rsolve\()p
Fe(f)p Fh(y\(n\)=10/3*y\(n-1\)-y\(n)q(-2\))q(,y\(0)q(\)=1,)q(y\(1\))q
(=)g(1/3+epsilon)p Fe(g)p Fh(,y\);)1402 3453 y Fk(3)p
1402 3498 V 1402 3589 a(8)1477 3521 y Fd(")17 b Fk(3)1589
3480 y Fg(n)1657 3521 y Fe(\000)1767 3453 y Fk(1)p 1767
3498 V 1767 3589 a(3)1842 3521 y(\()1890 3453 y(9)p 1890
3498 V 1890 3589 a(8)1965 3521 y Fd(")22 b Fe(\000)h
Fk(3\))17 b(\()2285 3453 y(1)p 2285 3498 V 2285 3589
a(3)2343 3521 y(\))2381 3480 y Fg(n)0 3690 y Fk(Lorsque)41
b Fj(Maple)e Fk(calcule)i Fh(evalf\(1/3\))p Fk(,)j(il)c(manipule)h(en)g
(fait)2500 3651 y Fc(1)p 2500 3667 36 4 v 2500 3725 a(3)2573
3690 y Fk(+)27 b Fd(")39 b Fk(a)m(v)m(ec)j Fd(")e Fe(6)p
Fk(=)g(0)f(et)h(ce)h(dernier)0 3811 y(calcul)35 b(explique)h(alors)e(p)
s(ourquoi)g(la)g(suite)g(div)m(erge)i(\(sans)e(compter)h(les)g(autres)f
(erreurs)h(d'arrondis)0 3931 y(au)d(cours)i(du)f(calcul\).)0
4114 y Fi(Exercice)53 b(2)0 4284 y Fk(P)m(our)37 b(calculer)h(les)f
(termes)h(de)f(la)g(suite)g(on)g(utilise)h(la)e(fonction)h
Fh(fsolve)h Fk(qui)f(p)s(ermet)h(de)f(r)m(\023)-46 b(esoudre)0
4404 y(des)31 b(\023)-46 b(equations)33 b(non-lin)m(\023)-46
b(eaires)34 b(de)f(mani)m(\022)-46 b(ere)34 b(appro)s(c)m(h)m(\023)-46
b(ee.)146 4520 y Fg(>)304 4528 y Fh(u:=n->fsolve\(tan\(x\)=x,x,\(n)q
(-1/2)q(\)*P)q(i..\()q(n+1/)q(2\)*P)58 b(i\);)796 4775
y Fd(u)27 b Fk(:=)h Fd(n)g Fe(!)f Fk(fsolv)m(e)q(\(tan\()p
Fd(x)p Fk(\))h(=)g Fd(x;)34 b(x;)f Fk(\()p Fd(n)23 b
Fe(\000)2360 4708 y Fk(1)p 2360 4752 49 4 v 2360 4843
a(2)2419 4775 y(\))17 b Fd(\031)t(::)p Fk(\()p Fd(n)22
b Fk(+)2813 4708 y(1)p 2813 4752 V 2813 4843 a(2)2872
4775 y(\))17 b Fd(\031)t Fk(\))146 4945 y Fg(>)304 4953
y Fh(seq\(u\(i\),i=1..6\);)214 5156 y Fk(4)p Fd(:)p Fk(493409458)p
Fd(;)31 b Fk(7)p Fd(:)p Fk(725251837)p Fd(;)h Fk(10)p
Fd(:)p Fk(90412166)p Fd(;)f Fk(14)p Fd(:)p Fk(06619391)p
Fd(;)g Fk(17)p Fd(:)p Fk(22075527)p Fd(;)g Fk(20)p Fd(:)p
Fk(37130296)1885 5944 y(4)p eop
%%Page: 5 5
5 4 bop 0 84 a Fk(Corrig)m(\023)-46 b(e)33 b(TP3)g Fj(Maple)2676
b Fk(Suites)p 0 124 3820 4 v 0 407 a(P)m(our)33 b(tout)f
Fd(n)c Fe(2)g Ff(N)p Fk(,)1365 566 y(\()p Fd(n)22 b Fe(\000)1593
499 y Fk(1)p 1593 543 49 4 v 1593 634 a(2)1652 566 y(\))p
Fd(\031)31 b Fe(\024)d Fd(n)g Fe(\024)g Fk(\()p Fd(n)23
b Fk(+)2299 499 y(1)p 2299 543 V 2299 634 a(2)2357 566
y(\))p Fd(\031)0 753 y Fk(donc)85 b(lim)233 813 y Fg(n)p
Fb(!)p Fc(+)p Fb(1)488 753 y Fd(u)544 768 y Fg(n)619
753 y Fk(=)27 b(+)p Fe(1)p Fk(.)0 920 y(P)m(our)44 b
Fd(n)k Fe(2)f Ff(N)555 884 y Fb(\003)594 920 y Fk(,)g(]\()p
Fd(n)30 b Fe(\000)939 881 y Fc(1)p 939 897 36 4 v 939
954 a(2)984 920 y Fk(\))p Fd(\031)t(;)17 b Fk(\()p Fd(n)30
b Fk(+)1366 881 y Fc(1)p 1366 897 V 1366 954 a(2)1412
920 y Fk(\))p Fd(\031)t Fk([)p Fe(\032)p Fk(]0)p Fd(;)17
b Fk(+)p Fe(1)p Fk([)43 b(donc)i Fd(u)2280 935 y Fg(n)2373
920 y Fd(>)i Fk(0.)77 b(On)44 b(a)g(ainsi)h(tan\()p Fd(u)3391
935 y Fg(n)3437 920 y Fk(\))i Fd(>)g Fk(0)d(et)0 1041
y Fd(u)56 1056 y Fg(n)143 1041 y Fe(2)p Fk(])p Fd(n\031)t(;)17
b Fk(\()p Fd(n)28 b Fk(+)634 1001 y Fc(1)p 634 1018 V
634 1075 a(2)679 1041 y Fk(\))p Fd(\031)t Fk([.)66 b(Ceci)41
b(p)s(ermet)g(d'a\016rmer)g(que)g Fd(v)2149 1056 y Fg(n)2237
1041 y Fe(2)p Fk(]0)p Fd(;)2433 1001 y Fg(\031)p 2433
1018 43 4 v 2437 1075 a Fc(2)2485 1041 y Fk([)g(p)s(our)e
Fd(n)i Fe(2)g Ff(N)3084 1004 y Fb(\003)3123 1041 y Fk(.)66
b(On)40 b(p)s(eut)g(donc)0 1161 y(calculer)34 b(tan\()p
Fd(v)584 1176 y Fg(n)631 1161 y Fk(\))e(:)1001 1374 y(tan\()p
Fd(v)1227 1389 y Fg(n)1274 1374 y Fk(\))83 b(=)g(tan\()p
Fd(n\031)26 b Fk(+)1980 1307 y Fd(\031)p 1980 1351 59
4 v 1985 1443 a Fk(2)2071 1374 y Fe(\000)c Fd(u)2226
1389 y Fg(n)2273 1374 y Fk(\))1395 1586 y(=)83 b(tan\()1743
1519 y Fd(\031)p 1743 1563 V 1748 1654 a Fk(2)1834 1586
y Fe(\000)22 b Fd(u)1989 1601 y Fg(n)2036 1586 y Fk(\))32
b(par)h Fd(\031)t Fk(-p)m(\023)-46 b(erio)s(dicit)m(\023)g(e)1395
1819 y(=)1699 1752 y(1)p 1564 1796 320 4 v 1564 1888
a(tan\()p Fd(u)1799 1903 y Fg(n)1845 1888 y Fk(\))0 2065
y(Or)73 b(lim)135 2125 y Fg(n)p Fb(!)p Fc(+)p Fb(1)391
2065 y Fd(u)447 2080 y Fg(n)521 2065 y Fk(=)28 b(+)p
Fe(1)21 b Fk(donc)74 b(lim)1044 2125 y Fg(n)p Fb(!)p
Fc(+)p Fb(1)1299 2065 y Fk(tan\()p Fd(v)1525 2080 y Fg(n)1572
2065 y Fk(\))28 b(=)g(0.)39 b(Mais)23 b(puisque)g Fd(v)2474
2080 y Fg(n)2549 2065 y Fe(2)p Fk(]0)p Fd(;)2745 2026
y Fg(\031)p 2745 2043 43 4 v 2749 2100 a Fc(2)2798 2065
y Fk([,)h(on)e(a)f Fd(v)3118 2080 y Fg(n)3193 2065 y
Fk(=)27 b(arctan\(tan\()p Fd(v)3831 2080 y Fg(n)3878
2065 y Fk(\)\))0 2220 y(et)33 b(ainsi)85 b(lim)342 2279
y Fg(n)p Fb(!)p Fc(+)p Fb(1)597 2220 y Fd(v)644 2235
y Fg(n)719 2220 y Fk(=)28 b(0.)146 2387 y Fg(>)304 2395
y Fh(v:=n->n*Pi+Pi/2-u\(n\);)1344 2634 y Fd(v)k Fk(:=)27
b Fd(n)h Fe(!)g Fd(n)17 b(\031)25 b Fk(+)2030 2566 y(1)p
2030 2611 49 4 v 2030 2702 a(2)2106 2634 y Fd(\031)h
Fe(\000)c Fk(u\()p Fd(n)p Fk(\))146 2804 y Fg(>)304 2812
y Fh(plot\([seq\([i,v\(i\)],i=1..50)q(\)],i)q(=1.)q(.50\))q(;)574
2854 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 574 2854 a @beginspecial 0 @llx 0 @lly 612 @urx
792 @ury 2477 @rwi 3205 @rhi @setspecial
%%BeginDocument: TP305.eps
%!PS-Adobe-3.0 EPSF
%%Title: Maple plot
%%Creator: MapleV 
%%Pages:  1
%%BoundingBox: 0 0 612 792 
%%DocumentNeededResources: font Courier
%%EndComments
20 dict begin
gsave
/m {moveto} def
/l {lineto} def
/C {setrgbcolor} def
/Y /setcmykcolor where { %%ifelse Use built-in operator
       /setcmykcolor get
   }{ %%ifelse Emulate setcmykcolor with setrgbcolor
       { %%def
           1 sub 3 { %%repeat
               3 index add neg dup 0 lt { pop 0 } if 3 1 roll
           } repeat setrgbcolor
       } bind
   } ifelse def
/G {setgray} def
/S {stroke} def
/NP {newpath} def
%%%%This draws a filled polygon and avoids bugs/features
%%%%   of some postscript interpreters
%%%%GHOSTSCRIPT: has a bug in reversepath - removing
%%%%the call to reversepath is a sufficient work around
/P {gsave fill grestore reversepath stroke} def
%%%%This function is needed for drawing text
/stringbbox {gsave NP 0 0 m false charpath flattenpath
   pathbbox 4 2 roll pop pop 1.1 mul cvi exch 1.1 mul 
   cvi exch grestore} def
/thin 3 def
/medium 7 def
/thick 16 def
/boundarythick 20 def %% thickness of bounding box
%%IncludeResource: font Courier
576 36 translate
90 rotate
0.108 0.108 scale
1 setlinejoin
1 setlinecap
0.0 setgray
/inch {72 mul} def
/fheight 0.35 inch neg def
    0 G
medium setlinewidth
[] 0 setdash   0.3 G
NP 666 4421 m 775 2790 l
884 2116 l
993 1745 l
1101 1511 l
1210 1349 l
1319 1231 l
1428 1140 l
1537 1069 l
1646 1011 l
1754 963 l
1863 923 l
1972 889 l
2081 859 l
2190 834 l
2299 811 l
2407 791 l
2516 774 l
2625 758 l
2734 743 l
2843 730 l
2952 718 l
3060 707 l
3169 697 l
3278 688 l
3387 680 l
3496 672 l
3605 664 l
3713 658 l
3822 651 l
3931 645 l
4040 640 l
4149 634 l
4258 629 l
4366 625 l
4475 620 l
4584 616 l
4693 612 l
4802 608 l
4911 605 l
5019 601 l
5128 598 l
5237 595 l
5346 592 l
5455 589 l
5564 586 l
5672 584 l
5781 581 l
5890 579 l
5999 576 l
S
    0 G
medium setlinewidth
NP 666 500 m 666 4500 l
S
thin setlinewidth
NP 645 535 m 687 535 l
S
NP 645 607 m 687 607 l
S
NP 645 679 m 687 679 l
S
NP 645 752 m 687 752 l
S
NP 623 824 m 709 824 l
S
NP 645 896 m 687 896 l
S
NP 645 969 m 687 969 l
S
NP 645 1041 m 687 1041 l
S
NP 645 1113 m 687 1113 l
S
NP 623 1186 m 709 1186 l
S
NP 645 1258 m 687 1258 l
S
NP 645 1330 m 687 1330 l
S
NP 645 1402 m 687 1402 l
S
NP 645 1475 m 687 1475 l
S
NP 623 1547 m 709 1547 l
S
NP 645 1619 m 687 1619 l
S
NP 645 1692 m 687 1692 l
S
NP 645 1764 m 687 1764 l
S
NP 645 1836 m 687 1836 l
S
NP 623 1909 m 709 1909 l
S
NP 645 1981 m 687 1981 l
S
NP 645 2053 m 687 2053 l
S
NP 645 2126 m 687 2126 l
S
NP 645 2198 m 687 2198 l
S
NP 623 2270 m 709 2270 l
S
NP 645 2343 m 687 2343 l
S
NP 645 2415 m 687 2415 l
S
NP 645 2487 m 687 2487 l
S
NP 645 2559 m 687 2559 l
S
NP 623 2632 m 709 2632 l
S
NP 645 2704 m 687 2704 l
S
NP 645 2776 m 687 2776 l
S
NP 645 2849 m 687 2849 l
S
NP 645 2921 m 687 2921 l
S
NP 623 2993 m 709 2993 l
S
NP 645 3066 m 687 3066 l
S
NP 645 3138 m 687 3138 l
S
NP 645 3210 m 687 3210 l
S
NP 645 3283 m 687 3283 l
S
NP 623 3355 m 709 3355 l
S
NP 645 3427 m 687 3427 l
S
NP 645 3499 m 687 3499 l
S
NP 645 3572 m 687 3572 l
S
NP 645 3644 m 687 3644 l
S
NP 623 3716 m 709 3716 l
S
NP 645 3789 m 687 3789 l
S
NP 645 3861 m 687 3861 l
S
NP 645 3933 m 687 3933 l
S
NP 645 4006 m 687 4006 l
S
NP 623 4078 m 709 4078 l
S
NP 645 4150 m 687 4150 l
S
NP 645 4223 m 687 4223 l
S
NP 645 4295 m 687 4295 l
S
NP 645 4367 m 687 4367 l
S
NP 623 4440 m 709 4440 l
S
medium setlinewidth
NP 666 500 m 5999 500 l
S
thin setlinewidth
NP 775 484 m 775 516 l
S
NP 993 484 m 993 516 l
S
NP 1210 484 m 1210 516 l
S
NP 1428 484 m 1428 516 l
S
NP 1646 468 m 1646 532 l
S
NP 1863 484 m 1863 516 l
S
NP 2081 484 m 2081 516 l
S
NP 2299 484 m 2299 516 l
S
NP 2516 484 m 2516 516 l
S
NP 2734 468 m 2734 532 l
S
NP 2952 484 m 2952 516 l
S
NP 3169 484 m 3169 516 l
S
NP 3387 484 m 3387 516 l
S
NP 3605 484 m 3605 516 l
S
NP 3822 468 m 3822 532 l
S
NP 4040 484 m 4040 516 l
S
NP 4258 484 m 4258 516 l
S
NP 4475 484 m 4475 516 l
S
NP 4693 484 m 4693 516 l
S
NP 4911 468 m 4911 532 l
S
NP 5128 484 m 5128 516 l
S
NP 5346 484 m 5346 516 l
S
NP 5564 484 m 5564 516 l
S
NP 5781 484 m 5781 516 l
S
NP 5999 468 m 5999 532 l
S
medium setlinewidth
/Courier findfont 115 scalefont setfont
(0.02) dup stringbbox 2 idiv 824 exch sub exch 623 exch sub exch m show
(0.04) dup stringbbox 2 idiv 1186 exch sub exch 623 exch sub exch m show
(0.06) dup stringbbox 2 idiv 1547 exch sub exch 623 exch sub exch m show
(0.08) dup stringbbox 2 idiv 1909 exch sub exch 623 exch sub exch m show
(0.1) dup stringbbox 2 idiv 2270 exch sub exch 623 exch sub exch m show
(0.12) dup stringbbox 2 idiv 2632 exch sub exch 623 exch sub exch m show
(0.14) dup stringbbox 2 idiv 2993 exch sub exch 623 exch sub exch m show
(0.16) dup stringbbox 2 idiv 3355 exch sub exch 623 exch sub exch m show
(0.18) dup stringbbox 2 idiv 3716 exch sub exch 623 exch sub exch m show
(0.2) dup stringbbox 2 idiv 4078 exch sub exch 623 exch sub exch m show
(0.22) dup stringbbox 2 idiv 4440 exch sub exch 623 exch sub exch m show
(10) dup stringbbox 468 exch sub exch 2 idiv 1646 exch sub exch m show
(20) dup stringbbox 468 exch sub exch 2 idiv 2734 exch sub exch m show
(30) dup stringbbox 468 exch sub exch 2 idiv 3822 exch sub exch m show
(40) dup stringbbox 468 exch sub exch 2 idiv 4911 exch sub exch m show
(50) dup stringbbox 468 exch sub exch 2 idiv 5999 exch sub exch m show
(i) dup stringbbox 339 exch sub exch 2 idiv 3333 exch sub exch m show
boundarythick setlinewidth
%%%% The following draws a box around the plot.
/bd boundarythick 2 idiv def
[] 0 setdash 
NP bd bd m bd 5000 bd sub l 
6666 bd sub 5000 bd sub l 
6666 bd sub bd l 
bd bd l S

showpage
grestore
end
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2638 2854 a
 currentpoint grestore moveto
 2638 2854 a 146 4952 a Fg(>)304
4960 y Fh(U:=n*Pi+Pi/2+sum\(a[k]/n^k,)q(k=1.)q(.p\))q(;)1330
5241 y Fd(U)38 b Fk(:=)28 b Fd(n)17 b(\031)26 b Fk(+)1829
5173 y(1)p 1829 5218 49 4 v 1829 5309 a(2)1904 5241 y
Fd(\031)g Fk(+)2083 5070 y Fa( )2200 5112 y Fg(p)2145
5146 y Fa(X)2153 5358 y Fg(k)r Fc(=1)2319 5173 y Fd(a)2370
5188 y Fg(k)p 2316 5218 101 4 v 2316 5309 a Fd(n)2374
5280 y Fg(k)2410 5070 y Fa(!)146 5462 y Fg(>)304 5470
y Fh(p:=3;)1781 5664 y Fd(p)i Fk(:=)g(3)1885 5944 y(5)p
eop
%%Page: 6 6
6 5 bop 0 84 a Fk(Corrig)m(\023)-46 b(e)33 b(TP3)g Fj(Maple)2676
b Fk(Suites)p 0 124 3820 4 v 146 399 a Fg(>)304 407 y
Fh(U;)1357 654 y Fd(n)17 b(\031)26 b Fk(+)1621 586 y(1)p
1621 631 49 4 v 1621 722 a(2)1697 654 y Fd(\031)g Fk(+)1886
586 y Fd(a)1937 601 y Fc(1)p 1886 631 91 4 v 1902 722
a Fd(n)2008 654 y Fk(+)2120 586 y Fd(a)2171 601 y Fc(2)p
2116 631 98 4 v 2116 722 a Fd(n)2174 693 y Fc(2)2246
654 y Fk(+)2358 586 y Fd(a)2409 601 y Fc(3)p 2354 631
V 2354 722 a Fd(n)2412 693 y Fc(3)0 810 y Fk(Gr^)-49
b(ace)33 b(\022)-49 b(a)33 b(quelques)j(essais,)f(on)f(constate)g
(qu'il)g(faut)f(e\013ectuer)i(un)e(d)m(\023)-46 b(ev)m(elopp)s(emen)m
(t)37 b(\022)-49 b(a)33 b(l'ordre)g Fd(p)23 b Fe(\000)g
Fk(1)0 931 y(p)s(our)32 b(a)m(v)m(oir)h(les)h Fd(p)e
Fk(premiers)j(co)s(e\016cien)m(ts.)146 1046 y Fg(>)304
1054 y Fh(series\(tan\(U-n*Pi\)-U,n=inf)q(init)q(y,p)q(-1\);)690
1560 y Fk(\()p Fe(\000)837 1493 y Fk(1)p 815 1537 91
4 v 815 1629 a Fd(a)866 1644 y Fc(1)938 1560 y Fe(\000)23
b Fd(\031)t Fk(\))17 b Fd(n)22 b Fk(+)1360 1493 y Fd(a)1411
1508 y Fc(2)p 1340 1537 131 4 v 1340 1629 a Fd(a)1391
1644 y Fc(1)1430 1600 y(2)1502 1560 y Fe(\000)1612 1493
y Fk(1)p 1612 1537 49 4 v 1612 1629 a(2)1687 1560 y Fd(\031)k
Fk(+)1876 1438 y Fe(\000)1963 1316 y(\000)2050 1249 y
Fd(a)2101 1264 y Fc(3)p 2050 1293 91 4 v 2050 1384 a
Fd(a)2101 1399 y Fc(1)2174 1316 y Fk(+)2282 1249 y Fd(a)2333
1264 y Fc(2)2372 1213 y(2)p 2282 1293 131 4 v 2282 1384
a Fd(a)2333 1399 y Fc(1)2372 1356 y(2)p 1963 1415 459
4 v 2147 1507 a Fd(a)2198 1522 y Fc(1)2454 1438 y Fe(\000)2563
1371 y Fk(2)p 2563 1415 49 4 v 2563 1507 a(3)2639 1438
y Fd(a)2690 1453 y Fc(1)p 1876 1537 854 4 v 2274 1629
a Fd(n)2761 1560 y Fk(+)c(O\()3008 1493 y(1)p 2983 1537
98 4 v 2983 1629 a Fd(n)3041 1600 y Fc(2)3091 1560 y
Fk(\))146 1745 y Fg(>)304 1753 y Fh(convert\(",polynom\):)146
1869 y Fg(>)304 1877 y Fh(coeffs\(",n\):)146 1993 y Fg(>)304
2001 y Fh(S:=)p Fe(f)p Fh(")p Fe(g)p Fh(:)146 2117 y
Fg(>)304 2125 y Fh(solve\(S\);)1024 2386 y Fe(f)p Fd(a)1125
2401 y Fc(2)1192 2386 y Fk(=)1306 2319 y(1)p 1306 2363
49 4 v 1306 2455 a(2)1396 2319 y(1)p 1391 2363 59 4 v
1391 2455 a Fd(\031)1460 2386 y(;)33 b(a)1571 2401 y
Fc(3)1639 2386 y Fk(=)27 b Fe(\000)1854 2319 y Fk(1)p
1829 2363 98 4 v 1829 2455 a(12)1964 2319 y(3)17 b Fd(\031)2089
2283 y Fc(2)2150 2319 y Fk(+)22 b(8)p 1964 2363 333 4
v 2081 2455 a Fd(\031)2140 2426 y Fc(3)2306 2386 y Fd(;)34
b(a)2418 2401 y Fc(1)2485 2386 y Fk(=)28 b Fe(\000)2681
2319 y Fk(1)p 2676 2363 59 4 v 2676 2455 a Fd(\031)2745
2386 y Fe(g)146 2556 y Fg(>)304 2564 y Fh(assign\("\);)146
2680 y Fg(>)304 2688 y Fh(U;)1069 2950 y Fd(n)17 b(\031)26
b Fk(+)1333 2882 y(1)p 1333 2927 49 4 v 1333 3018 a(2)1408
2950 y Fd(\031)g Fe(\000)1642 2882 y Fk(1)p 1599 2927
134 4 v 1599 3018 a Fd(\031)21 b(n)1765 2950 y Fk(+)1873
2882 y(1)p 1873 2927 49 4 v 1873 3018 a(2)2020 2882 y(1)p
1958 2927 174 4 v 1958 3018 a Fd(\031)g(n)2092 2989 y
Fc(2)2163 2950 y Fe(\000)2297 2882 y Fk(1)p 2273 2927
98 4 v 2273 3018 a(12)2407 2882 y(3)c Fd(\031)2532 2846
y Fc(2)2593 2882 y Fk(+)22 b(8)p 2407 2927 333 4 v 2467
3018 a Fd(\031)2526 2989 y Fc(3)2582 3018 y Fd(n)2640
2989 y Fc(3)0 3122 y Fk(P)m(our)33 b(v)m(\023)-46 b(eri\014er)34
b(la)e(v)-5 b(aleur)33 b(de)g Fd(a)1144 3137 y Fc(1)1184
3122 y Fk(,)g(on)f(regarde)85 b(lim)1726 3182 y Fg(n)p
Fb(!)p Fc(+)p Fb(1)1981 3122 y Fd(\031)t(n)2115 3041
y Fa(\000)2161 3122 y Fd(n\031)26 b Fk(+)2408 3083 y
Fg(\031)p 2408 3099 43 4 v 2412 3156 a Fc(2)2483 3122
y Fe(\000)d Fd(u)2639 3137 y Fg(n)2685 3041 y Fa(\001)2763
3122 y Fk(qui)34 b(doit)e(v)-5 b(aloir)32 b(1)h(:)146
3289 y Fg(>)304 3297 y Fh(w:=n->Pi*n*v\(n\);)1520 3501
y Fd(w)d Fk(:=)d Fd(n)h Fe(!)g Fd(\031)20 b(n)d Fk(v\()p
Fd(n)p Fk(\))146 3627 y Fg(>)304 3635 y Fh
(plot\([seq\([i,w\(i\)],i=1..50)q(\)],i)q(=1.)q(.50\))q(;)574
3677 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 574 3677 a @beginspecial 0 @llx 0 @lly 612 @urx
792 @ury 2477 @rwi 3205 @rhi @setspecial
%%BeginDocument: TP306.eps
%!PS-Adobe-3.0 EPSF
%%Title: Maple plot
%%Creator: MapleV 
%%Pages:  1
%%BoundingBox: 0 0 612 792 
%%DocumentNeededResources: font Courier
%%EndComments
20 dict begin
gsave
/m {moveto} def
/l {lineto} def
/C {setrgbcolor} def
/Y /setcmykcolor where { %%ifelse Use built-in operator
       /setcmykcolor get
   }{ %%ifelse Emulate setcmykcolor with setrgbcolor
       { %%def
           1 sub 3 { %%repeat
               3 index add neg dup 0 lt { pop 0 } if 3 1 roll
           } repeat setrgbcolor
       } bind
   } ifelse def
/G {setgray} def
/S {stroke} def
/NP {newpath} def
%%%%This draws a filled polygon and avoids bugs/features
%%%%   of some postscript interpreters
%%%%GHOSTSCRIPT: has a bug in reversepath - removing
%%%%the call to reversepath is a sufficient work around
/P {gsave fill grestore reversepath stroke} def
%%%%This function is needed for drawing text
/stringbbox {gsave NP 0 0 m false charpath flattenpath
   pathbbox 4 2 roll pop pop 1.1 mul cvi exch 1.1 mul 
   cvi exch grestore} def
/thin 3 def
/medium 7 def
/thick 16 def
/boundarythick 20 def %% thickness of bounding box
%%IncludeResource: font Courier
576 36 translate
90 rotate
0.108 0.108 scale
1 setlinejoin
1 setlinecap
0.0 setgray
/inch {72 mul} def
/fheight 0.35 inch neg def
    0 G
medium setlinewidth
[] 0 setdash   0.3 G
NP 666 576 m 775 2114 l
884 2790 l
993 3171 l
1101 3416 l
1210 3587 l
1319 3713 l
1428 3810 l
1537 3886 l
1646 3948 l
1754 4000 l
1863 4043 l
1972 4080 l
2081 4112 l
2190 4140 l
2299 4164 l
2407 4186 l
2516 4205 l
2625 4223 l
2734 4238 l
2843 4253 l
2952 4266 l
3060 4278 l
3169 4289 l
3278 4299 l
3387 4308 l
3496 4317 l
3605 4325 l
3713 4332 l
3822 4339 l
3931 4346 l
4040 4352 l
4149 4358 l
4258 4363 l
4366 4368 l
4475 4373 l
4584 4378 l
4693 4382 l
4802 4386 l
4911 4390 l
5019 4394 l
5128 4397 l
5237 4401 l
5346 4404 l
5455 4407 l
5564 4410 l
5672 4413 l
5781 4416 l
5890 4419 l
5999 4421 l
S
    0 G
medium setlinewidth
NP 666 500 m 666 4500 l
S
thin setlinewidth
NP 645 603 m 687 603 l
S
NP 623 730 m 709 730 l
S
NP 645 857 m 687 857 l
S
NP 645 984 m 687 984 l
S
NP 645 1111 m 687 1111 l
S
NP 645 1239 m 687 1239 l
S
NP 623 1366 m 709 1366 l
S
NP 645 1493 m 687 1493 l
S
NP 645 1620 m 687 1620 l
S
NP 645 1748 m 687 1748 l
S
NP 645 1875 m 687 1875 l
S
NP 623 2002 m 709 2002 l
S
NP 645 2129 m 687 2129 l
S
NP 645 2257 m 687 2257 l
S
NP 645 2384 m 687 2384 l
S
NP 645 2511 m 687 2511 l
S
NP 623 2638 m 709 2638 l
S
NP 645 2766 m 687 2766 l
S
NP 645 2893 m 687 2893 l
S
NP 645 3020 m 687 3020 l
S
NP 645 3147 m 687 3147 l
S
NP 623 3274 m 709 3274 l
S
NP 645 3402 m 687 3402 l
S
NP 645 3529 m 687 3529 l
S
NP 645 3656 m 687 3656 l
S
NP 645 3783 m 687 3783 l
S
NP 623 3911 m 709 3911 l
S
NP 645 4038 m 687 4038 l
S
NP 645 4165 m 687 4165 l
S
NP 645 4292 m 687 4292 l
S
NP 645 4420 m 687 4420 l
S
medium setlinewidth
NP 666 500 m 5999 500 l
S
thin setlinewidth
NP 775 484 m 775 516 l
S
NP 993 484 m 993 516 l
S
NP 1210 484 m 1210 516 l
S
NP 1428 484 m 1428 516 l
S
NP 1646 468 m 1646 532 l
S
NP 1863 484 m 1863 516 l
S
NP 2081 484 m 2081 516 l
S
NP 2299 484 m 2299 516 l
S
NP 2516 484 m 2516 516 l
S
NP 2734 468 m 2734 532 l
S
NP 2952 484 m 2952 516 l
S
NP 3169 484 m 3169 516 l
S
NP 3387 484 m 3387 516 l
S
NP 3605 484 m 3605 516 l
S
NP 3822 468 m 3822 532 l
S
NP 4040 484 m 4040 516 l
S
NP 4258 484 m 4258 516 l
S
NP 4475 484 m 4475 516 l
S
NP 4693 484 m 4693 516 l
S
NP 4911 468 m 4911 532 l
S
NP 5128 484 m 5128 516 l
S
NP 5346 484 m 5346 516 l
S
NP 5564 484 m 5564 516 l
S
NP 5781 484 m 5781 516 l
S
NP 5999 468 m 5999 532 l
S
medium setlinewidth
/Courier findfont 115 scalefont setfont
(0.7) dup stringbbox 2 idiv 730 exch sub exch 623 exch sub exch m show
(0.75) dup stringbbox 2 idiv 1366 exch sub exch 623 exch sub exch m show
(0.8) dup stringbbox 2 idiv 2002 exch sub exch 623 exch sub exch m show
(0.85) dup stringbbox 2 idiv 2638 exch sub exch 623 exch sub exch m show
(0.9) dup stringbbox 2 idiv 3274 exch sub exch 623 exch sub exch m show
(0.95) dup stringbbox 2 idiv 3911 exch sub exch 623 exch sub exch m show
(10) dup stringbbox 468 exch sub exch 2 idiv 1646 exch sub exch m show
(20) dup stringbbox 468 exch sub exch 2 idiv 2734 exch sub exch m show
(30) dup stringbbox 468 exch sub exch 2 idiv 3822 exch sub exch m show
(40) dup stringbbox 468 exch sub exch 2 idiv 4911 exch sub exch m show
(50) dup stringbbox 468 exch sub exch 2 idiv 5999 exch sub exch m show
(i) dup stringbbox 339 exch sub exch 2 idiv 3333 exch sub exch m show
boundarythick setlinewidth
%%%% The following draws a box around the plot.
/bd boundarythick 2 idiv def
[] 0 setdash 
NP bd bd m bd 5000 bd sub l 
6666 bd sub 5000 bd sub l 
6666 bd sub bd l 
bd bd l S

showpage
grestore
end
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2638 3677 a
 currentpoint grestore moveto
 2638 3677 a 1885 5944 a Fk(6)p
eop
%%Page: 7 7
7 6 bop 0 84 a Fk(Corrig)m(\023)-46 b(e)33 b(TP3)g Fj(Maple)2676
b Fk(Suites)p 0 124 3820 4 v 146 399 a Fg(>)304 407 y
Fh(evalf\(w\(1000\)\);)1652 610 y Fd(:)p Fk(9990264640)0
741 y(On)33 b(p)s(eut)f(aussi)i(v)m(\023)-46 b(eri\014er)34
b(les)f(autres)h(co)s(e\016cien)m(ts)g(de)f(cette)h(mani)m(\022)-46
b(ere.)0 862 y(En)33 b(p)s(oussan)m(t)h(plus)f(loin)g(les)g(calculs,)h
(on)f(obtien)m(t)g(:)146 977 y Fg(>)304 985 y Fh
(unassign\('a[1]','a[2]','a[)q(3]',)q('p')q(\);)146 1101
y Fg(>)304 1109 y Fh(U;)235 1356 y Fd(n)17 b(\031)25
b Fk(+)498 1289 y(1)p 498 1333 49 4 v 498 1424 a(2)574
1356 y Fd(\031)h Fk(+)763 1289 y Fd(a)814 1304 y Fc(1)p
763 1333 91 4 v 779 1424 a Fd(n)886 1356 y Fk(+)997 1289
y Fd(a)1048 1304 y Fc(2)p 994 1333 98 4 v 994 1424 a
Fd(n)1052 1396 y Fc(2)1123 1356 y Fk(+)1235 1289 y Fd(a)1286
1304 y Fc(3)p 1231 1333 V 1231 1424 a Fd(n)1289 1396
y Fc(3)1361 1356 y Fk(+)1473 1289 y Fd(a)1524 1304 y
Fc(4)p 1469 1333 V 1469 1424 a Fd(n)1527 1396 y Fc(4)1599
1356 y Fk(+)1710 1289 y Fd(a)1761 1304 y Fc(5)p 1707
1333 V 1707 1424 a Fd(n)1765 1396 y Fc(5)1837 1356 y
Fk(+)1948 1289 y Fd(a)1999 1304 y Fc(6)p 1944 1333 V
1944 1424 a Fd(n)2002 1396 y Fc(6)2074 1356 y Fk(+)2186
1289 y Fd(a)2237 1304 y Fc(7)p 2182 1333 V 2182 1424
a Fd(n)2240 1396 y Fc(7)2312 1356 y Fk(+)2423 1289 y
Fd(a)2474 1304 y Fc(8)p 2420 1333 V 2420 1424 a Fd(n)2478
1396 y Fc(8)2550 1356 y Fk(+)2661 1289 y Fd(a)2712 1304
y Fc(9)p 2658 1333 V 2658 1424 a Fd(n)2716 1396 y Fc(9)2787
1356 y Fk(+)2899 1289 y Fd(a)2950 1304 y Fc(10)p 2895
1333 133 4 v 2895 1424 a Fd(n)2953 1396 y Fc(10)3061
1356 y Fk(+)3172 1289 y Fd(a)3223 1304 y Fc(11)p 3168
1333 V 3168 1424 a Fd(n)3226 1396 y Fc(11)3334 1356 y
Fk(+)3445 1289 y Fd(a)3496 1304 y Fc(12)p 3442 1333 V
3442 1424 a Fd(n)3500 1396 y Fc(12)146 1518 y Fg(>)304
1526 y Fh(p:=12:)146 1642 y Fg(>)304 1650 y Fh
(series\(tan\(U-n*Pi\)-U,n=inf)q(init)q(y,p)q(-1\):)146
1765 y Fg(>)304 1773 y Fh(convert\(",polynom\):)146 1889
y Fg(>)304 1897 y Fh(S:=)p Fe(f)p Fh(coeffs\(",n\))p
Fe(g)p Fh(:)146 2013 y Fg(>)304 2021 y Fh(solve\(S\):)146
2137 y Fg(>)304 2145 y Fh(assign\("\);)146 2260 y Fg(>)304
2268 y Fh(U;)35 2530 y Fd(n)17 b(\031)26 b Fk(+)299 2463
y(1)p 299 2507 49 4 v 299 2598 a(2)375 2530 y Fd(\031)g
Fe(\000)608 2463 y Fk(1)p 565 2507 134 4 v 565 2598 a
Fd(\031)21 b(n)731 2530 y Fk(+)839 2463 y(1)p 839 2507
49 4 v 839 2598 a(2)987 2463 y(1)p 924 2507 174 4 v 924
2598 a Fd(\031)g(n)1058 2570 y Fc(2)1130 2530 y Fe(\000)1264
2463 y Fk(1)p 1239 2507 98 4 v 1239 2598 a(12)1373 2463
y(3)c Fd(\031)1498 2427 y Fc(2)1559 2463 y Fk(+)22 b(8)p
1373 2507 333 4 v 1433 2598 a Fd(\031)1492 2570 y Fc(3)1548
2598 y Fd(n)1606 2570 y Fc(3)1738 2530 y Fk(+)1846 2463
y(1)p 1846 2507 49 4 v 1846 2598 a(8)1931 2463 y(8)g(+)g
Fd(\031)2159 2427 y Fc(2)p 1931 2507 268 4 v 1959 2598
a Fd(\031)2018 2570 y Fc(3)2074 2598 y Fd(n)2132 2570
y Fc(4)2231 2530 y Fe(\000)2389 2463 y Fk(1)p 2340 2507
147 4 v 2340 2598 a(240)2523 2463 y(240)17 b Fd(\031)2746
2427 y Fc(2)2807 2463 y Fk(+)22 b(15)17 b Fd(\031)3079
2427 y Fc(4)3139 2463 y Fk(+)22 b(208)p 2523 2507 861
4 v 2847 2598 a Fd(\031)2906 2570 y Fc(5)2962 2598 y
Fd(n)3020 2570 y Fc(5)224 2778 y Fk(+)356 2711 y(1)p
332 2755 98 4 v 332 2846 a(96)466 2711 y(208)f(+)h(80)17
b Fd(\031)906 2674 y Fc(2)967 2711 y Fk(+)22 b(3)17 b
Fd(\031)1190 2674 y Fc(4)p 466 2755 763 4 v 741 2846
a Fd(\031)800 2818 y Fc(5)856 2846 y Fd(n)914 2818 y
Fc(6)1261 2778 y Fe(\000)1443 2711 y Fk(1)p 1370 2755
196 4 v 1370 2846 a(6720)1602 2711 y(21840)g Fd(\031)1923
2674 y Fc(2)1983 2711 y Fk(+)22 b(9344)f(+)h(4200)17
b Fd(\031)2668 2674 y Fc(4)2728 2711 y Fk(+)22 b(105)17
b Fd(\031)3049 2674 y Fc(6)p 1602 2755 1486 4 v 2238
2846 a Fd(\031)2297 2818 y Fc(7)2353 2846 y Fd(n)2411
2818 y Fc(7)224 3026 y Fk(+)405 2959 y(1)p 332 3003 196
4 v 332 3094 a(1920)563 2959 y(9344)k(+)h(7280)17 b Fd(\031)1150
2922 y Fc(2)1211 2959 y Fk(+)22 b(840)17 b Fd(\031)1532
2922 y Fc(4)1592 2959 y Fk(+)22 b(15)17 b Fd(\031)1864
2922 y Fc(6)p 563 3003 1340 4 v 1127 3094 a Fd(\031)1186
3065 y Fc(7)1241 3094 y Fd(n)1299 3065 y Fc(8)224 3274
y Fe(\000)431 3206 y Fk(1)p 333 3251 244 4 v 333 3342
a(80640)614 3206 y(23520)g Fd(\031)935 3170 y Fc(6)994
3206 y Fk(+)23 b(784896)17 b Fd(\031)1463 3170 y Fc(2)1522
3206 y Fk(+)22 b(199936)f(+)h(315)17 b Fd(\031)2256 3170
y Fc(8)2316 3206 y Fk(+)22 b(305760)17 b Fd(\031)2784
3170 y Fc(4)p 614 3251 2209 4 v 1611 3342 a Fd(\031)1670
3313 y Fc(9)1726 3342 y Fd(n)1784 3313 y Fc(9)224 3522
y Fk(+)429 3454 y(1)p 332 3499 244 4 v 332 3590 a(17920)612
3454 y(199936)k(+)h(261632)17 b Fd(\031)1395 3418 y Fc(2)1454
3454 y Fk(+)22 b(61152)17 b Fd(\031)1873 3418 y Fc(4)1933
3454 y Fk(+)22 b(3360)17 b Fd(\031)2303 3418 y Fc(6)2364
3454 y Fk(+)22 b(35)17 b Fd(\031)2636 3418 y Fc(8)p 612
3499 2063 4 v 1519 3590 a Fd(\031)1578 3561 y Fc(9)1634
3590 y Fd(n)1692 3561 y Fc(10)2706 3522 y Fe(\000)2962
3454 y Fk(1)p 2816 3499 342 4 v 2816 3590 a(3548160)211
3702 y(98968320)g Fd(\031)679 3666 y Fc(2)739 3702 y
Fk(+)22 b(16719872)e(+)i(64753920)17 b Fd(\031)1815 3666
y Fc(4)1874 3702 y Fk(+)22 b(10090080)17 b Fd(\031)2440
3666 y Fc(6)2500 3702 y Fk(+)22 b(415800)17 b Fd(\031)2968
3666 y Fc(8)3027 3702 y Fk(+)22 b(3465)17 b Fd(\031)3397
3666 y Fc(10)p 211 3747 3260 4 v 1699 3838 a Fd(\031)1758
3809 y Fc(11)1850 3838 y Fd(n)1908 3809 y Fc(11)224 4018
y Fk(+)453 3950 y(1)p 332 3995 293 4 v 332 4086 a(645120)661
3950 y(32989440)g Fd(\031)1129 3914 y Fc(2)1188 3950
y Fk(+)22 b(16719872)e(+)i(12950784)17 b Fd(\031)2264
3914 y Fc(4)2324 3950 y Fk(+)22 b(1441440)17 b Fd(\031)2841
3914 y Fc(6)2900 3950 y Fk(+)22 b(46200)17 b Fd(\031)3319
3914 y Fc(8)3379 3950 y Fk(+)22 b(315)17 b Fd(\031)3700
3914 y Fc(10)p 661 3995 3114 4 v 2076 4086 a Fd(\031)2135
4057 y Fc(11)2226 4086 y Fd(n)2284 4057 y Fc(12)0 4174
y Fk(On)33 b(compare)g(les)g(deux)h(calculs)g(de)f Fd(u)1431
4189 y Fc(10)1538 4174 y Fk(:)146 4290 y Fg(>)304 4298
y Fh(evalf\(subs\()p Fe(f)p Fh(n=10)p Fe(g)p Fh(,U\)\);)1652
4501 y Fk(32)p Fd(:)p Fk(95638904)146 4628 y Fg(>)304
4636 y Fh(u\(10\);)1652 4839 y Fk(32)p Fd(:)p Fk(95638904)1885
5944 y(7)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
