%!PS-Adobe-2.0
%%Creator: dvips(k) 5.85 Copyright 1999 Radical Eye Software
%%Title: TP2.dvi
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o TP2.ps TP2.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.06.27:1005
%%BeginProcSet: texc.pro
%!
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id
ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{
rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get
/gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp add /cp
X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add /gp X
adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{dup
255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1 adv}
B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2 idiv
S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Created 1994/6/23. Source file was pstricks.doc
% Version 0.93a, 93/03/12.
% For use with Rokicki's dvips.
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
def
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
%  Modification Denis GIROU (CNRS/IDRIS - France) <Denis.Girou@idris.fr> - 15 Jan. 1997
% /Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
% pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
% div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
% d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt { 1 setlinecap [ 0 dx n div ]
dy n div 2 div setdash } { 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Created 1994/6/7. Source file was pst-node.doc
% Version 0.93a/b-97 patch 1, 97/05/09.
% For use with Rokicki's dvips.
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - 9 May 1997
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (TP2.dvi)
@start
%DVIPSBitmapFont: Fa cmti12 12 9
/Fa 9 118 df<DB03FE130C92390FFF801C037FEBE03C9238FE03F8913A03F0007C7C4A
48EB3EF84A48131F4A48130F4AC7FC027EEC07F05C1703495A18E0495AA213074A15C0A3
130F1880A28094C7FCA280806D7EECFFE015FC6DEBFF806D14F016FC6D14FF023F80020F
801403DA003F7F150703007F163F161F160FA21607A3120716031607A2485EA2120E160F
001E5EA2001F4B5AA2484BC7FC6D143E167E6D5C007F4A5A6D495AD87CF0495AD8787CEB
1F8027F03F807FC8FC90381FFFFCD8E00713F039C0007F80364879C537>83
D<EE07F0ED03FFA39238000FE01607160FA217C0A2161FA21780A2163FA21700A25EA216
7EA216FEA25EEC1F80EC7FE1903801F071903907C039F890380F801D90381F001F013E13
0F017E5C5B48481307A248485C120749130F120F5E485A151F123F495CA2153F127F90C7
90C7FCA25DA200FE147EA29238FE0380160703FC1300A2007E13015E913803F80E140700
3E010F131E161C6C131C02385B3A0F80F078783A07C3E07C703A01FF801FE03A007E0007
802C4676C432>100 D<EC0FE0EC7FF8903801F83E903807C00F90391F800780EB3F0001
7E14C0491303485A48481307000715805B000F140F484814005D4848133E15FCEC07F000
7FEBFFC0D9FFFEC7FC14C090C9FC5A5AA55AA4ED0180ED03C0007CEC0780A2007EEC0F00
003E141E157C6C14F06CEB03E03907800F802603C07EC7FC3801FFF838003FC0222D75AB
2D>I<143C147E14FE1301A3EB00FC14701400AE137C48B4FC3803C780380703C0000F13
E0120E121C13071238A21278EA700F14C0131F00F0138012E0EA003F1400A25B137EA213
FE5B12015BA212035B141E0007131C13E0A2000F133CEBC038A21478EB807014F014E0EB
81C0EA0783EBC7803803FE00EA00F8174378C11E>105 D<D801F0D90FE0EB07F0D803FC
D97FF8EB3FFC28071E01F03EEBF81F3E0E1F03C01F01E00F80271E0F8700D983807F001C
018E90390F870007003C019C148E003801B802DC8002F814FC26781FF05C0070495CA24A
5C00F0494948130FD8E03F6091C75B1200043F141F4960017E92C7FCA24C143F01FE95C7
FC49147E6104FE147E1201494A14FE610301EE0780000305011400494A14F8A203030203
5B0007F0F00E495C1A1E0307EDE01C000F193C494A153862030F020113F0001FF0F1E049
4A903800FF800007C7D80380023EC7FC492D78AB50>109 D<D801F0EB3F803A03FC01FF
F03A071E03C0F83A0E0F0F007C001E90389E01FC001C139CECB803003813F0A2D91FE013
F80078EC00E00070491300A200F05BEAE03F91C8FC1200A25B137EA313FE5BA312015BA3
12035BA312075BA3120F5BA3121F5B0007C9FC262D78AB29>114
D<EC0FE0EC7FF8903801F01E903803C00F90390780078090380F0003011E14C015074913
1FA2017CEB3F801378137CED0E0092C7FC137E137F14F014FF6D13C06D13F06D7F6D7F13
00EC0FFE14011400157F81120E003F141E487EA2153E48C7123CA200FC5C12705D007849
5A6C495A6CEB0F80260F803EC7FC3803FFF838007FC0222D7AAB28>I<1470EB01F8A313
035CA313075CA3130F5CA3131F5CA2007FB512E0B6FC15C0D8003FC7FCA25B137EA313FE
5BA312015BA312035BA312075BA3120F5BA2EC0780001F140013805C140E003F131EEB00
1C143C14385C6C13F0495A6C485AEB8780D807FEC7FCEA01F81B3F78BD20>I<137C48B4
14072603C780EB1F80380703C0000F7F000E153F121C0107150012385E1278D8700F147E
5C011F14FE00F05B00E05DEA003FEC0001A2495C137E150313FE495CA215071201495CA2
030F13380003167849ECC070A3031F13F0EE80E0153F00011581037F13C06DEBEF830000
0101148090397C03C787903A3E0F07C70090391FFE01FE903903F000782D2D78AB34>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmex10 12 1
/Fb 1 91 df<1B3FF3FFC0973801F0F0973803E0380807131C97380FC07EF3C1FE97381F
83FFA2F23F03A21A7F1A7E9738FE01FEF300784F481300A3190362A21907A262190FA44F
5AA3193F62A3197FA262A219FFA397C8FC60A4611803A44E5AA4180FA261A2181FA361A2
183FA44E5AA518FF61A35FA361A25FA496C9FC5FA460170FA54D5AA54D5AA4177F60A517
FF60A44C5BA54C5BA595CAFC5EA45F160FA45FA2161FA35FA3163F5FA54C5AA45FA216FF
A35FA25DA294CBFCA44B5AA45E1507A45E150FA35EA2151FA25EA3153F5EA34B5AA393CC
FC5DA25D1401A25DA24A5AA2001E1307D87F805BEAFFC04A5A5D141F5D4ACDFCEA7F8038
7E007E00385B6C485A380F03E03803FF80C648CEFC58DD7B7F37>90
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmsy8 8 3
/Fc 3 49 df<B812C0A32A037A9137>0 D<130C131EA50060EB01800078130739FC0C0F
C0007FEB3F80393F8C7F003807CCF83801FFE038007F80011EC7FCEB7F803801FFE03807
CCF8383F8C7F397F0C3F8000FCEB0FC039781E078000601301000090C7FCA5130C1A1D7C
9E23>3 D<137813FE1201A3120313FCA3EA07F8A313F0A2EA0FE0A313C0121F1380A3EA
3F00A3123E127E127CA35AA35A0F227EA413>48 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmmi8 8 3
/Fd 3 116 df<1307EB0F80EB1FC0A2EB0F80EB070090C7FCA9EA01E0EA07F8EA0E3CEA
1C3E123812301270EA607EEAE07C12C013FC485A120012015B12035BA21207EBC04014C0
120F13801381381F01801303EB0700EA0F06131EEA07F8EA01F0122E7EAC18>105
D<3907C007E0391FE03FF83918F8783E393879E01E39307B801F38707F00126013FEEAE0
FC12C05B00815C0001143E5BA20003147E157C5B15FC0007ECF8081618EBC00115F0000F
1538913803E0300180147016E0001F010113C015E390C7EAFF00000E143E251F7E9D2B>
110 D<EB07E0EB3FF8EB781EEBF0063801E0073803C00F141FA20007131E140CEBE00013
F8EBFF806C13E06C13F06C13F8EB3FFC13011300147C0078133C12FCA2147C48137800E0
13F814F0386001E0387807C0381FFF00EA07F8181F7C9D21>115
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmtt12 12 33
/Fe 33 122 df<140FEC3F80147F14FF491300495AEB07F8495A495A495A495A49C7FC5B
12015B485A12075B120F5B121F5BA2123F5BA2127F90C8FCA45A5AAD7E7EA47F123FA27F
121FA27F120F7F12077F12036C7E7F12007F6D7E6D7E6D7E6D7E6D7EEB03FE6D7E6D1380
147F143FEC0F00194D6FC433>40 D<127812FE7E7F6C7E6C7EEA0FF06C7E6C7E6C7E6C7E
6D7E133F80131F6D7E801307801303801301A2801300A28080A41580143FAD147F1500A4
5C5CA213015CA213035C13075C130F5C495A133F5C137F49C7FC485A485A485A485AEA3F
E0485A485A90C8FC5A1278194D78C433>I<EA07C0EA0FF0EA1FF8123F13FCA213FEA212
1F120F1207EA007E13FEA213FC1201EA03F81207EA0FF0EA7FE012FF13C013005A12780F
196E8A33>44 D<007FB612FEA2B8FCA36C15FEA228077BA133>I<121FEA3F80EA7FC0EA
FFE0A5EA7FC0EA3F80EA1F000B0B6C8A33>I<14FF010313C0010F13F0497F497F497F90
38FF81FF3A01FE007F804848EB3FC049131F4848EB0FE0A24848EB07F0A24848EB03F8A2
4848EB01FCA348C812FEA4007E157E00FE157FAE6C15FF6C15FEA46D1301003F15FCA26D
1303001F15F8A26C6CEB07F0A26C6CEB0FE06D131F6C6CEB3FC0A26CB4EBFF806C018113
006DB45A6D5B6D5B6D5B010313C0010090C7FC283F7BBD33>48 D<15FF4A7F5C5CA25C5C
15DFEC3F9FA2EC7F1F14FEA2EB01FCA2EB03F8EB07F0A2EB0FE0EB1FC0A2EB3F80A2EB7F
0013FEA2485A12035B485AA2485A485AA2485AA248C7FC12FEB812E017F0A46C16E0C838
1F8000AC021FB512804A14C04A14E0A26E14C06E14802C3E7DBD33>52
D<007FB71280A2B812C0A36C16806C1600CBFCA9003FB7FC481680B812C0A36C1680A22A
177CA933>61 D<1210127CB4FC7F13E07FEA7FFC6C7E380FFF806C13E000017F6C13FCEB
3FFE6D6C7E01077F010113F06D7FEC3FFE6E7E020713C06E13E0020013F8ED7FFE151FED
0FFF1503150FED1FFE157FEDFFF8020313E04A13C0021F13004A5AECFFF8495B010713C0
011F5B4948C7FCEBFFFC4813F000075B481380D83FFEC8FC485AEAFFF05B138090C9FC12
7C121028337BB733>I<387FFFF8B57E80A25C6C5BD801FCC9FCB3B3A3EE03E0EE07F0A9
007FB7FCB8FCA46C16E02C3D7DBC33>76 D<EB1FFC90B57E000314E048804814FC488090
38F007FFEBE0016E7F153F6C48806C48131FC87F150FA5EC0FFF49B5FC131F137F48B6FC
0007140F4813C0381FFC00EA3FF0EA7FC05B48C7FC5AA56C141F7E6D137FD83FE0497ED9
F807EBFFF06CB712F87E6C14F36C14C1C69138003FF0D91FF090C7FC2D2E7BAC33>97
D<EA3FFC487E12FFA2127F123F1200ABEC01FE91380FFFC04A13F0027F7F91B512FE90B7
FCECFE07DAF800138002E0EB7FC04AEB3FE04A131FEE0FF091C7FC16074915F81603A217
FC1601A9160317F8A26D140717F06E130F17E06E131FEE3FC06E137F9139F801FF80DAFE
07130091B55A495C6E5BD97E3F13E0D93C0F138090260003FEC7FC2E3E7FBC33>I<ECFF
F0010713FE011FEBFF804914C04914E048B612F048EBC01F9038FE000F485A485A4848EB
07E049EB03C0484890C7FC5BA2127F90C9FCA25A5AA97E7EA27F003FEC01F06DEB03F86C
7E6D13076C6C14F06C6C130F01FFEB1FE06CEBE07F6C90B512C06C1580013F14006D13FC
01075B010013C0252E79AC33>I<ED7FF84B7E5CA280157F1501ABEB01FF010713C1011F
13F1017F13F990B6FC5A4813813907FE003FD80FF8131F49130F48481307491303123F49
1301127F90C7FCA25A5AA97E7E15037F123F6D1307A26C6C130F6D131F6C6C133F6C6C13
7F2603FF81B512F091B612F8C602FD13FC6D13F96D01E113F8010F018013F0D901FEC8FC
2E3E7DBC33>I<ECFF80010713F0011F13FC497F90B6FC48158048018013C03A07FE003F
E001F8EB0FF048481307484814F8491303003F15FC491301127F90C7FC16FE15005A5AB7
FCA516FC48C9FC7E7EA36C7E167C6C6C14FE7F6C7E6D13016C6CEB03FC6CB4130F6C9038
C03FF86C90B512F06D14E06D14C0010F1400010313FC9038007FE0272E7BAC33>I<ED3F
E0913801FFFC020713FE141F4A13FF5CECFFC015004948137E4A133C010314005CA8003F
B612F84815FCB7FCA36C15F8260003F8C7FCB3AD003FB612804815C0A46C1580283E7DBD
33>I<D901FEEB1FE0903A0FFFC0FFF0013F01F313F84990B512FC90B7FC5A48010313E1
2607FC00EB80F849017F1360484890383FC00049131FA2001F8149130FA66D131F000F5D
A26D133F6C6C495A6D13FF2603FF0390C7FCECFFFE485C5D5DD80FCF13C0D981FEC8FC01
80C9FCA27FA26C7E7F90B512FC6CECFFC06C15F0000715FC4815FF4816809038E0000748
489038007FC090C8EA1FE048150F007E150700FE16F0481503A56C1507007E16E0007F15
0F6C6CEC1FC001E0147FD81FF8903801FF80270FFF801F13006C90B55A6C5DC615F0013F
14C0010F91C7FC010013F02E447DAB33>I<EA3FFC487E12FFA2127F123F1200AB4AB4FC
020713C0021F13F0027F7F91B5FC90B67EED07FEECF801ECF0004A7F4A7F5CA291C7FCA3
5BB3A43B3FFFF80FFFFC486D4813FEB56C4813FFA26C496C13FE6C496C13FC303D7FBC33
>I<14E0EB03F8A2497EA36D5AA2EB00E091C8FCAA383FFFF8487FA47EEA0001B3AD007F
B612C0B712E016F0A216E06C15C0243E78BD33>I<1570EC01FCA2EC03FEA3EC01FCA2EC
00701500AA90383FFFFC4913FE90B5FCA27F7F90C7FCB3B3A9140115FCA21218007EEB03
F81407B414F0140F9038803FE090B512C06C14806C14006C5B6C13F8000113E01F557BBD
33>I<383FFFFC487FB5FCA27E7EC7FCB3B3AD003FB612F84815FCB712FEA26C15FC6C15
F8273D7ABC33>108 D<02FC137E3B7FC3FF01FF80D8FFEF01877F90B500CF7F15DF92B5
7E6C010F13872607FE07130301FC01FE7F9039F803FC01A201F013F8A401E013F0B3A53C
7FFE0FFF07FF80B548018F13C0A46C486C01071380322C80AB33>I<4AB4FC263FFC0713
C0267FFE1F13F000FF017F7F91B5FC6CB67E6CEC07FEC6EBF801ECF0004A7F4A7F5CA291
C7FCA35BB3A43B3FFFF80FFFFC486D4813FEB56C4813FFA26C496C13FE6C496C13FC302C
7FAB33>I<EB01FE90380FFFC0013F13F0497F90B57E488048EB03FF2607FC0013804848
EB7FC049133F4848EB1FE049130F4848EB07F0A2007F15F890C71203A300FEEC01FCAA6C
14036C15F8A26D1307003F15F06D130FA26C6CEB1FE06D133F6C6CEB7FC06C6CEBFF8026
03FF0313006CEBFFFE6C5C6D5B6D5B010F13C0D901FEC7FC262E7AAC33>I<EC01FE3A3F
FC0FFFC0486C4813F000FF017F7F91B512FE6CB7FC6CEBFE07C6D9F800138002E0EB7FC0
4AEB3FE04A131FEE0FF091C7FC16074915F81603A217FC1601A9160317F8A26D140717F0
6E130F17E06E131FEE3FC06E137F9139F801FF80DAFE07130091B55A495C6E5B6E13E002
0F1380DA03FEC7FC91C9FCAF383FFFF8487FB57EA26C5B6C5B2E427FAB33>I<02FF137C
0107EBE0FE011F13F0017F13FC90B512FE4814FF4813C03907FE003F4848131F01F0130F
484813071503485A491301127F90C7FC15005A5AA97E7E15017F123F6D130315076C7E6C
6C130F6D131FD807FE137F3903FF81FF6CEBFFFE6C14FC6D13F86D13F0010F13C0903801
FE0090C8FCAF92387FFFFC92B512FEA46F13FC2F427CAB33>I<ED03FE3B7FFF801FFF80
B5D8C07F13E002C1B5FC02C314F014C76C9038CFFE0F39001FDFF09139FFC007E0923880
03C092C8FC5C5C5CA25CA25CA35CB2007FB512FEB7FCA46C5C2C2C7DAB33>I<90381FFE
0F90B5EA8F80000314FF120F5A5AEBF007387F800190C7FC00FE147F5A153FA37E007FEC
1F0001C090C7FCEA3FF8EBFFC06C13FF6C14E0000314F8C680011F13FF01001480020713
C0EC007FED1FE0007C140F00FEEC07F01503A27EA27F15076D14E06D130F6DEB3FC09038
FE01FF90B61280160000FD5C00FC14F8D8F83F13E0D8780790C7FC242E79AC33>I<EB03
C0497E130FAA003FB612FC4881B7FCA36C5D26000FE0C8FCB3A3161FEE3F80A5167F6E14
0001075C6E5A9138FE07FE6DB55A6D5C6D5C6E5B021F1380DA07FCC7FC29387EB633>I<
D83FFCEB1FFE486C497E00FF5CA2007F80003F800000EC007FB3A75EA25DA26D5B90387F
800FDAE03F13FC6DB612FE17FF6D806D01FE13FE01039038F83FFC010001C0C7FC302C7F
AA33>I<3B3FFFC00FFFF0486D4813F8B56C4813FCA26C496C13F86C496C13F0D801F8C7
EA7E006D14FE00005DA26D1301017E5CA2017F13036D5CA2EC8007011F5CA2ECC00F010F
5CA36D6C485AA3ECF03F010391C7FCA26E5A0101137EA2ECFCFE01005BA214FF6E5AA36E
5AA26E5A6E5A2E2B7EAA33>I<3B3FFFC07FFF80486DB512C0B500F114E0A26C01E014C0
6C496C13803B00FE000FE000017F495AEB3F804B5A6D6C48C7FC90380FE07E903807F0FE
ECF1FC903803FBF8EB01FF6D5B5D6E5A143F6E5A143F814A7E14FF903801FBF0ECF9F890
3803F1FCEB07E0157E90380FC07F011F6D7E90383F801F02007F496D7E01FE6D7E484813
033B7FFFC03FFFE0B56C4813F0A46C496C13E02C2B7DAA33>120
D<3B7FFF801FFFE0B56C4813F06E4813F8A24A6C13F06C496C13E0D803F8C7EAFC000001
14015E7F000014036D5C137EA2017F495A7FA26E485A131FA26D6C485AA214E0010749C7
FCA214F01303157EEB01F8A2157C010013FC14FC5D147C147DEC3FF0A36E5AA36E5AA214
1F5DA2143F92C8FCA3147EA214FE003F5B1301387F81F81383EB87F0139FEBFFE06C5B5C
6C90C9FCEA0FFCEA03F02D427DAA33>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmcsc10 12 5
/Ff 5 113 df<B500F094381FFFFEA26E5FC6F2FE00017F61D93BFCEF77F8A2D939FE17
E7A3D938FFEE01C7A26E6CED0387A36E6CED0707A26E6C150EA26E6C151CA36E6C1538A2
6E6C1570A36E6C15E0A26E6CEC01C0A36F6CEB0380A26F6CEB0700A26F6C130EA36F6C5B
A26F6C5BA36F6C5BA26F6C5BA36F6C485AA293387F8380A2DC3FC7C7FCA3EE1FEEA2EE0F
FCA3017C6E5AA248B46E484A7E000701C04D7EB500FE041FB512FE705AA257447BC363>
77 D<157015F8A34A7EA24A7EA34A7E81A291380E3F80A2021E7FEC1C1FA24A6C7EA34A
6C7EA202F07FECE003A249486C7EA349486C7EA201078091C77EA249B67EA24981011CC7
121FA2013C810138140FA2496E7EA201F081491403120183486C140100074B7ED81FF84A
7EB5027F13F8A335357CB43D>97 D<B812F0A3D803FEC7123F6C48EC07F816011600A217
78A21738A3171C1507A31700A25DA25D157F90B6FCA39038FC007F151F81A2811707A317
0E92C7FCA4171EA2173CA2177C17FC16011607486C143FB812F8A330337BB238>101
D<B512FEA3000390C9FCEA01FCB3A9EE01C0A416031780A41607A2160F161FA2167FEEFF
00486C1307B8FCA32A337BB233>108 D<B7FC16F016FC3A03FE0003FF6C489038007F80
EE3FC0EE1FE0EE0FF0A2EE07F8A217FCA617F8A2EE0FF0A2EE1FE0EE3FC0EEFF00ED03FE
90B612F816C001FCC9FCB3A2487EB512F8A32E337BB238>112 D
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmsy10 12 3
/Fg 3 57 df<007FB912E0BA12F0A26C18E03C04789A4D>0 D<92B6FC02071580143F91
B7120001030180C8FCD907FCC9FCEB1FE0EB3F80017ECAFC5B485A485A485A5B485A121F
90CBFC123EA2123C127CA2127812F8A25AA2B9FC1880A2180000F0CBFCA27EA21278127C
A2123C123EA27E7F120F6C7E7F6C7E6C7E6C7E137E6D7EEB1FE0EB07FC6DB47E010090B6
FC023F1580140702001500313A78B542>50 D<0060171800F0173C6C177CA20078177800
7C17F8A2003C17F0003E1601A26CEE03E0A26C17C06D1507A2000717806D150FA26C6CED
1F00A20001161E6D153EA20000163C90B712FCA26D5DA2013CC85A013E1401A2011E5D01
1F1403A26D5D6E1307A26D6C495AA2010392C7FC6E5BA20101141E6E133EA26D6C5BA202
781378027C13F8A2023C5BEC3E01A26E485AA2020F5B1587A202075B15CFA26EB4C8FCA2
6E5AA36E5AA315781530364780C437>56 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmr8 8 11
/Fh 11 58 df<EC0380B3A4B812FCA3C7D80380C7FCB3A42E2F7CA737>43
D<EB3FC0EBFFF03803E07C48487E48487E497E001EEB0780A2003E14C0A248EB03E0A500
FC14F0B0007C14E0A3007E1307003E14C0A36CEB0F806C14006D5A3807C03E3803F0FC38
00FFF0EB3FC01C2D7DAB23>48 D<130C133C137CEA03FC12FFEAFC7C1200B3B113FE387F
FFFEA2172C7AAB23>I<EB7F803801FFF0380780FC380E003F48EB1F8048EB0FC05A0060
EB07E012F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC3F00147E14
7C5C495A495A495A495A011EC7FC5B5B4913305B485A4848136048C7FC000E14E0001FB5
FC5A4814C0B6FCA21C2C7DAB23>I<EB3FC03801FFF03807C0FC380E007E487FEC1F8000
3F14C0A2EB800F1300A2000C131FC7FC1580A2EC3F00143E5C5CEB03F0EBFFC014F0EB00
FC143FEC1F8015C0140F15E0A2EC07F0A21238127C12FEA3EC0FE012F8006014C0007013
1F6C1480001EEB3F00380780FC3801FFF038007FC01C2D7DAB23>I<140EA2141E143EA2
147E14FEA2EB01BE1303143E1306130E130C131813381330136013E013C0EA0180120313
001206120E120C5A123812305A12E0B612FCA2C7EA3E00A9147F90381FFFFCA21E2D7EAC
23>I<000CEB0180380FC01F90B512005C5C14F014C0D80C7EC7FC90C8FCA8EB1FC0EB7F
F8380DE07C380F801F01001380000E130F000CEB07C0C713E0A2140315F0A4127812FCA4
48EB07E012E0006014C00070130F6C14806CEB1F006C133E380780F83801FFE038007F80
1C2D7DAB23>I<EB03F8EB0FFE90383E0780EBF8013901F007C03803E00FEA07C0EA0F80
A2391F00078091C7FC123EA2127EA2127CEB0FC038FC3FF0EBF07C38FDC01EB4487E0100
1380EC07C04814E0A214034814F0A4127CA3127EA2003E14E01407121E001F14C06CEB0F
803907801F003803C03E6C6C5A38007FF0EB1FC01C2D7DAB23>I<1230123C003FB512F8
A215F05A15E039700001C000601480140348EB0700140E140CC7121C5C143014705C495A
A2495AA249C7FCA25B130E131EA2133EA3133C137CA413FCA913781D2E7CAC23>I<EB1F
C0EBFFF03803E07C3807801E48487E001EEB0780A248EB03C0A4123E1407003F1480381F
C00F01E01300EBF81E6C6C5A3807FFF86C13E0C6FCEB3FF8EBFFFC3803C7FFD807831380
D81F0013C0001E133F48EB1FE0007C13070078EB03F012F84813011400A46C14E0007813
01007C14C0003C13036CEB0780390F800F003807E03C3801FFF038003FC01C2D7DAB23>
I<EB3F80EBFFF03803E0783807C03E48487E48487E003E14801407007E14C0127C00FC14
E01403A315F0A5007C1307127EA2003E130F7E6C131F3807803B3803E0F33800FFC39038
3F03E013001407A215C0A2140F001E1480003F14005C143E143C003E5B001C5B380E03E0
3807FF80D801FEC7FC1C2D7DAB23>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmmi12 12 14
/Fi 14 121 df<177F0120913803FF8001604A13E049021F13F04C13F84848EC7F0148C8
38F8007C4C133C0006DA01C0131C4B48131E484AC7120E150648140E150C4B14065A5D18
0E484A140CA2154015C04B14185A020115307E92C812704A1560006017C0170100700106
EC03800030EE070000385E003C010E141E6C5E6C010C14F82607C01CEB03F001F0EC0FE0
D803FEEC3F802800FFFC03FFC7FC6DB55A6D14F8010F14E0010114809026007FF8C8FC02
78C9FC5CA31301A3495AA31307A25CA2130FA35C6DCAFC37407BAB40>39
D<121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A0A78891B>58
D<121E123FEA7F80EAFFC0A313E0127FEA3F60121E1200A513C0A4EA0180A2EA0300A212
065AA25A5A12200B1D78891B>I<F001C0F007E0181FF07FC0943801FF00EF07FCEF1FF0
EF7FC04C48C7FCEE0FFCEE3FF0EEFFC0030390C8FCED0FF8ED3FE0EDFF80DA03FEC9FCEC
1FF8EC7FE0903801FF80D907FECAFCEB1FF0EB7FC04848CBFCEA07FCEA1FF0EA7FC048CC
FCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FE903801FF809038007FE0EC1F
F8EC03FE913800FF80ED3FE0ED0FF8ED03FF030013C0EE3FF0EE0FFCEE01FF9338007FC0
EF1FF0EF07FCEF01FF9438007FC0F01FE01807F001C03B3878B44C>I<027FB812F891B9
12FC80020001C0C7EA3FF86F48140319004BC9FC1A78A21A384A5AA31A304A5AA44A5A18
C0A21A204A4849481300A317034A4891C8FC5FA2171F4A48137E92B512FEA391397F8000
FC173C171CA24AC71218A449484A5B61A205201306494891C7FC61A2191C494816181938
193019704948166019E0A24E5A494815034E5A180F181F4948037FC7FCEF03FF01FFED3F
FE007F90B7FCB95AA246447CC348>69 D<027FB812F091B912F880020001C0C7EA3FF06F
48140719014BC9FCA31A704A5AA31A604A5AA44A5AA2847213404A4849481300A317034A
4891C8FCA25F5F4A48131E17FE92B5FCA24A5CED8000173CA24AC71218A3173849481430
A44948142094C9FCA3495AA4495AA4495AA4495AA2EBFFE0007FEBFFF8B6FCA245447CC3
3F>I<027FB612FE91B812E06E16F802009039C0000FFE6F48EB01FF9538007F804BC8EA
3FC0F11FE0A2F10FF04A5AA21AF8A24A5AA44A48ED1FF0A3F13FE04A5A1AC0197F1A804A
48EDFF004E5A4E5A4E5A4A484A5AF03FC006FFC7FCEF07FC4AB612F018800380CAFCA24A
CBFCA4495AA4495AA4495AA4495AA4495AA4495AA2EBFFE0007FEBFFC0B67E5D45447CC3
3F>80 D<023FB500C090381FFFFE4A5E80020001FCC7000713C0DB3FF0913803FC004CEC
01F0626F6CEC038097C7FC6F6C140661705C03071538616F6C5C4E5A6F6C495A96C8FC18
066F6D5A60706C5A606093383FE18017E3DC1FF7C9FC17FE5F705AA2707EA3707E1607EE
0DFF161904387F5E5E4B486C7EED03804B486C7E15065D4B6D7E5D4B6D7E5D4A5A4AC76C
7E5C020E6E7E5C5C4A6E7E14604A6E7F495A1303010FC96C7E5B017F4C7E2607FFC00203
7FB500F8021FEBFFE05F5C4F447DC351>88 D<EC0FC0EC7FE0903901F03038903903C018
7C903907800CFC90381F0006013EEB07F8491303A25B00015D485AA2485A000F4A5A5B12
1FA249495A123FA348C7485AA4007E4AC7FCA212FE1720037E1360A2127EA24B13C0A200
3E13010203EB0180EC067C6C010CEB03006CEB183C2607807013063A03C1E01E1C3A01FF
800FF83A007E0003E02B2D7CAB33>97 D<EB0FE0EA07FFA25CEA001F130FA2495AA449C8
FCA4137EA45BA4485AA2EC0FC0EC7FF03903F0F0789038F1803C9038F3001E01F6131F48
487F01F814805B4914C0120F5BA3485AA448C7121FA4007EEC3F80A31600007C5CA200FC
147E15FE5DA2007C495AA24A5A5D4A5A003C495A92C7FC6C131E000E5B000F13F8380783
E03801FFC0D8007EC8FC22467CC429>I<EE03F8ED01FFA217F0ED00071603A2EE07E0A4
EE0FC0A4EE1F80A4EE3F00A4167EA2EC0FC0EC7FE0903901F030FC903803C01890380780
0C90381F0006013EEB07F8491303A25B00015D485AA2485A000F4A5A5B121FA249495A12
3FA348C7485AA4007E4AC7FCA212FE1720037E1360A2127EA24B13C0A2003E13010203EB
0180EC067C6C010CEB03006CEB183C2607807013063A03C1E01E1C3A01FF800FF83A007E
0003E02D467CC433>100 D<01FCEB03F8486CEB1FFE3B0307803C0F8000069138E007C0
3A0C03C1C0030018D9E3007F14E683003013EC14F8495A12605CA2484848495AA21200A2
4948495AA34C5A49C7FCA24CC7FCA2137E167EA21820494A1360A34B4813C0485AA29338
F00180EF0300485A17065F03005B4848EC78700003ED3FE06C48EC0F80332D7DAB3A>
110 D<EC0FF0EC7FFE903801F00F90390780018049C712C0011E1460131C49EB01F00178
1303150749EB0FE0A26DEB07C0ED038092C7FC7F13FF14F86DB47E6D13E06D7F6D7F6D7F
01007FEC07FF1400153F811680000EEC0F00121F487E127F150E48C7121E5A48141C0060
5C5D6C5C0038495A6CEB07802607803FC7FC3803FFFC38007FE0242D7BAB2E>115
D<02FCEB07E0D903FFEB1FF8903A0703C0381E903A1C01E0601F01389038F0C03F903A60
00F1807F499038FB00FFA2484813FE48C7147E4B133800061600A348495AA2C7FCA24A5A
A44A5AA44A5AA317104A481330A31760001E133F003F16C0EA7F80026FEB018026FF00CF
EB030002C71306267E01875B3A7C0303C0183A3C0E01E0703A1FFC00FFE0D803F0EB3F80
302D7EAB37>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr12 12 61
/Fj 61 123 df<4AB4FC020F13C091383F00F002FC1338D901F0130C4948131E4948133E
4948137F011F5C49C7FCA2013E147E017E143C93C7FCAD167FB8FCA3D8007EC7FC8282B3
B001FFEC7F80007FD9FC1FB5FCA330467EC536>12 D<127812FCA27E7E6C7E123FEA0FC0
6C7E6C7E12016C7E137C7F130E7FEB0380EB0100111275C431>18
D<130FEB1F80A2133F137FEBFF005BEA01F8485A485A5B485A48C7FC123E12385A5A1240
11126CC431>I<121E123FEA7F80EAFFC0A313E0127FEA3F60121E1200A513C0A4EA0180
A2EA0300A212065AA25A5A12200B1D78C41B>39 D<1406140E14181430147014E0EB01C0
EB0380EB0700A2130E5B133C133813785BA2485AA2485AA212075BA2120F90C7FCA25A12
1EA2123EA3123C127CA6127812F8B21278127CA6123C123EA3121EA2121F7EA27F1207A2
7F1203A26C7EA26C7EA213781338133C131C7F7FA2EB0380EB01C0EB00E0147014301418
140E1406176477CA26>I<7E7E12607E12387E7E7E6C7EA26C7E6C7E7F137013787FA27F
A27FA214801307A214C01303A214E01301A214F0A3130014F8A61478147CB2147814F8A6
14F01301A314E0A2130314C0A213071480A2130F1400A2131EA25BA25B137013F05B485A
485AA248C7FC120E5A5A12305A5A5A16647ACA26>I<16C04B7EB3AB007FBAFCBB1280A2
6C1900C8D801E0C9FCB3AB6F5A41407BB84C>43 D<121E123FEA7F80EAFFC0A313E0127F
EA3F60121E1200A513C0A4EA0180A2EA0300A212065AA25A5A12200B1D78891B>I<B612
C0A51A057F9721>I<121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A0A78891B>I<14FF
010713E090381F81F890387E007E01F8131F4848EB0F80000315C04913074848EB03E000
0F15F0A24848EB01F8A3003F15FCA348C812FEA64815FFB3A26C15FEA56D1301003F15FC
A3001F15F8A26D1303000F15F0A26C6CEB07E0000315C06D130F6C6CEB1F806C6CEB3F00
017E137E90381F81F8903807FFE0010090C7FC28427CC031>48 D<143014F01301130713
1F13FFB5FC13E713071200B3B3AF497E497E007FB6FCA3204178C031>I<EB03FE90381F
FFC0017F13F03901F80FFC3903C001FE48C7127F000EEC3F80000CEC1FC04815E048EC0F
F0A248EC07F8A2127C00FE15FC7E6D1303A46CC71207123EC813F8A3ED0FF0A216E0151F
16C0153F1680ED7F00157E5D4A5A5D4A5A4A5A4A5A4AC7FC141E5C5C5C495A495A495A91
C7120C130E5B4914185B5B485A49143848C8123000061570000FB612F05A5A5AB712E0A3
26417BC031>I<49B4FC010F13F0013F13FC9038FE01FE3901E0007FD80380EB3F8048C7
EA1FC0000EEC0FE0D80F8014F0EA1FE016F86D1307A36C5AA2D80380130FC813F0A3ED1F
E016C0A2ED3F801600157E5DEC03F0EC1FC0D90FFFC7FC15F090380001FCEC007EED1F80
16C0ED0FE0ED07F016F8150316FC16FE1501A216FFA3121E123F487E487EA216FEA24913
036CC713FC127E0070EC07F8003015F06C140F000E15E06CEC1FC0D803E0EB7F803A01FC
01FE0039007FFFFC011F13E0010190C7FC28427CC031>I<1507A25D5DA25D5DA25DA25C
5C811406140E140C141814381430146014E014C01301EB038014005B13065B131C13185B
137013605B12015B48C7FC5A1206120E120C5A123812305A12E0B812C0A3C86CC7FCAC4B
7E4A7F91B61280A32A427DC131>I<000215C0D807C0130701FCEB7F8090B612005D5D15
F05D158026063FFCC7FC90C9FCAE14FF010713E090381F01F0903878007C01E07FD80780
7F90C71380ED0FC01202C8EA07E016F0A3ED03F8A316FCA4121C123E127F487EA216F890
C7FC4814074815F01260A26CEC0FE016C06C141F001C15806CEC3F006C147E3903C001FC
3901F807F039007FFFE06D1380D907FCC7FC26427BC031>I<EC07F8EC3FFF91B5128090
3903FC03C0903907E000E0D90F80133090391F0001F0013EEB03F84913075B1201485A49
EB03F00007EC01E0000F91C7FC5B121FA25B123FA3127F90C9FCEC7F80903801FFF039FF
0780FC90380E003E0118130F49EB078016C049EB03E04914F0ED01F8A24914FC150016FE
A290C8FC16FFA27EA66C7EA216FE121FA2ED01FC6C7E16F8000714036C6C14F06DEB07E0
000115C06C6CEB0F80017EEB3F0090383F80FE90380FFFF86D5B0100138028427CC031>
I<121CA2EA1F8090B712C0A34816801700A25E0038C8120C00305D127000605D5EA25E48
4A5A4BC7FCA2C812065DA25D5D5DA25D14015D1403A24AC8FCA25C140E141EA2143E143C
A2147CA214FCA313015CA31303A61307AA6D5A6D5A2A447BC231>I<14FF010713E0011F
13F890383F00FE0178131F01E0EB0F804848EB03C04848EB01E048C7FCED00F0120E1678
121EA4121FA26D14F07FD80FF0EB01E07FD807FEEB03C06DEB07806C9038C00F006CEBE0
1E6CEBF83890387FFEF090383FFFC0130F6D7F010113F801077F90381E3FFFD9781F1380
D9F00713C02601C00313E04848C613F048C7EA7FF8000E141F001EEC0FFC48EC03FE1501
48EC007E163FA248151FA2160FA4160E1278161E161C6C15186C1538001F15706C6C14E0
6C6CEB03C0D803F0EB0F80C6B4EB7F0090383FFFFC010F13F00101138028427CC031>I<
14FF010713E0011F13F890387F80FC9038FC003E48487F4848EB0F804848EB07C0484814
E01503484814F0123FED01F848C7FCA216FC5AA2ED00FEA516FFA37E5DA27E7F001F5CA2
6C7E000714066C6C5B12016C6C5B017C137090383F01E090390FFF80FE903801FE0090C8
FCA2ED01FCA416F8150316F0A2D80780EB07E0487E486CEB0FC01680151F160049133E6C
485B390C0001F80007495A3903E01FC06CB55A6C6C48C7FCEB1FF028427CC031>I<121E
123FEA7F80EAFFC0A4EA7F80EA3F00121EC7FCB3A5121E123FEA7F80EAFFC0A4EA7F80EA
3F00121E0A2B78AA1B>I<007FBAFCBB1280A3CEFCB0BB1280A36C190041187BA44C>61
D<EB0FFC90387FFFC03901F007F039078001FC000EC7127E001880481580A248EC1FC012
7800FE15E07EA4127E003C15C0C8123FA21680ED7F0015FE5D4A5AEC03E04A5A4A5A92C7
FC141E141C143C14385CA2146014E0A25CA213015CAA90C9FCAAEB03C0497E497E497EA4
6D5A6D5A6D5A23467BC52E>63 D<DB0FFE146092B512C0020302F013E0913A1FFC01FC01
91393FC0001E02FFC7EA0703D901FCEC0387D907F0EC00C74948156F4948153F4948151F
49C9120F13FE000117075B484816031207491601120F491600121FA2123F491760A2127F
A219005B12FFAC127F7FA21960123FA27F121FA26C6C17C0A212076DEE018012036C6C16
036D170000001706137F6D6C5D6D6C5D6D6C5D6D6C5DD901FC4A5A6DB4EC0780DA3FC001
1FC7FCDA1FFC13FC0203B55A020014C0DB0FFEC8FC3B467BC446>67
D<B8FC17F017FC00019039C00007FF6C499038007FC0017FED1FE0EF07F0EF03FC717E71
7E84727E727E727EA2727E85180385A2180185A38584A31A80AD1A00A36061A361180361
180761180F614E5A183F614EC7FC18FEEF03FC4D5AEF1FE001FFED7FC0486DD907FFC8FC
B812FC17F094C9FC41447CC34B>I<B912F8A3000101C0C7127F6C49EC07FC017F150117
00187C183C181CA284A31806A41807040C7FA395C7FCA4161CA2163C167CED01FC91B5FC
A3EC8001ED007C163C161CA2160CA319C0A3F0018093C7FCA41803A21900A260A260A218
1EA2183E187EEF01FE01FF1507486D147FB95AA33A447CC342>I<B912F0A3000101C0C7
127F6C49EC0FF8017F15031701170018781838A2181CA3180CA4180E1806160CA21800A5
161CA2163C167CED01FC91B5FCA3EC8001ED007C163C161CA2160CA793C8FCB0497E487F
B612F8A337447CC340>I<DB0FFE146092B512C0020302F013E0913A1FFC01FC0191393F
C0001E02FFC7EA0703D901FCEC0387D907F0EC00C74948156F4948153F4948151F49C912
0F13FE000117075B484816031207491601120F491600121FA2123F491760A2127FA296C7
FC5B12FFAC007F4BB612C07FA293C7387FF000003F715A181F7F121FA26C7EA212077F12
036C7E7F1200137F6D7E6D6C153F6D7ED907F81567D901FC15C76DB4EC0383DA3FE0EB0F
01DA1FFC137E0203B5EAF800020002E01360DB0FFEC9FC42467BC44D>I<B612F0A3C6EB
F0006D5A6D5AB3B3B3A4497E497EB612F0A31C447DC323>73 D<B56C933807FFFC6E5EA2
0001F1FE002600EFE0EE1BFC016F60A2D967F01633A2D963F81663A3D961FC16C3A3D960
FEED0183A2027FED0303A36E6C1406A36E6C140CA26E6C1418A36E6C1430A36E6C1460A2
6E6C14C0A36E6CEB0180A3037FEB0300A292383F8006A36F6C5AA36F6C5AA26F6C5AA36F
6C5AA36F6C5AA26FB45AA370C7FC13F0A2486C023E4A7ED80FFF4D7EB500F0011C0107B5
12FCA34E447BC359>77 D<B712FCEEFFC017F800019039C0000FFE6C49EB01FF017F9138
007F80EF1FE0170FEF07F018F8EF03FCA218FE1701A218FFA718FEA2170318FCA2EF07F8
18F0EF0FE0EF1FC0EF7F80933801FE00EE0FFC91B612F017800280C9FCB3A9497E487FB6
12C0A338447CC342>80 D<ED1FFC4AB512C091390FF007F891393F8000FE027EC7123F49
48EC1FC0D903F0EC07E0D90FE0EC03F849486E7E49486E7E49C9127F01FE707EA2484870
7E00038449160F0007844848707EA24848707EA34848707EA3007F84A24982A200FF1980
AC007F1900A26D5EA3003F60A26D1603001F60A26C6C4C5AA20007606DD903F0130F0003
DA0FF85C6C6CD91C0E495A6C6CD91803495A4B7E017F01606D48C7FCD93F80903800C0FE
D91FC0ECC1FCD90FE0EC63F8D903F0EC67E0D901F8EC7FC09026007E3091C8FCDA3F9813
FE91390FFC07F80201B515C09139001FFC3892C7123CA2711301A2171FF10380F0800794
380FC00FF0F03F95B51200A2715BA2715B715B715B725AF01F8042587BC44C>I<49B413
03010F13E0013FEBF8079038FE00FCD801F0EB1F0F4848EB079F4848EB01DF48486DB4FC
48C87E001E81123E007E81127C8212FC82A46C81A37E6C6C91C7FCA2EA3FE07FEA1FFEEB
FFE06C13FE6CEBFFE06C14FC6C14FF6C15C0013F80010F80010180D9001F7F02017F9138
001FFF150303001380167FEE3FC0161FA2EE0FE0124012C01607A47EA217C07E160F6C16
80A26CED1F006C151E6C153ED8FBC05CD8F9F05CD8F07CEB03F03AE03FC00FE0010FB512
80D8C00349C7FC9038003FF02B467BC436>83 D<003FB912E0A3903BF0003FF0007F0180
6D48130F003EC7150348EF01F00078170019701270A219301260A5481818A5C81600B3B3
A54B7EEDFFFC0103B7FCA33D447CC346>I<B66C91383FFFF0A3000301E0C800071300C6
49ED01FC6D4816F018006E5E013F5FA26E1501011F5F80010F4CC7FCA26E5D01071606A2
6D6C5DA28001015EA26E15386D163081027F5DA26F14E0023F5DA26E6C495AA281020F4A
C8FCA26F5B020714068102035CA26F131C02011418A26E6C5BA21680037F5BA2EEC0E003
3F5B16E092381FE180A216F3030F90C9FCA2ED07FEA36F5AA36F5AA26F5AA3166044457E
C349>86 D<EAFFF8A4EAF000B3B3B3B3B3A2EAFFF8A40D6475CA1B>91
D<EAFFF8A4EA0078B3B3B3B3B3A2EAFFF8A40D647ECA1B>93 D<130C131E133F497EEBF3
C03801E1E03803C0F03807807848487E001E7F487F0070EB038048EB01C00040EB00801A
0E75C331>I<EB07F8EB3FFF9038F80FC03901C003E048C66C7E00066D7E48147CD80F80
137E486C133E6D133F8182A26C5A6C5AC8FCA4EC0FFF49B5FC90380FFC1FEB3FC0EBFF00
EA03FCEA07F0485A121F485A5B127F176048C7FCA4153FA26C146F7F003F9138C7C0C039
1FC001873B0FE00307E1803A07F81E03FF2701FFFC0113003A001FE0007C2B2E7CAC31>
97 D<EA01FC12FFA3120312011200B3EC01FC91380FFF8091383E07E091387000F802C0
137CD9FD807F01FFC77EEE0F804915C049EC07E017F0160317F8A217FC1601A317FEA917
FCA21603A217F8A2EE07F017E07FEE0FC001FBEC1F801700D9F180133ED9F0C05B9039E0
6001F891383C07E09039C01FFF8090260003FCC7FC2F467DC436>I<EC7F80903803FFF0
90380FC07C90383E000E49130349EB01804848EB00C0000314074848EB0FE04848131FA2
121F5B003FEC0FC0ED0780007F91C7FC90C9FCA25AAA7EA27FA2123F16306C7EA2000F15
606C7E6C6C14C00001EC01806C7E017CEB07006D130E90381FC078903807FFF001001380
242E7DAC2B>I<16FE157FA315011500167EB3EC7F80903803FFF090380FC07890383F00
0C017C13064913034848EB01FE00031400485A4848147EA2121F485AA2127FA290C8FCA2
5AA97EA37F123FA2121F7F000F15FE6C7E000314016C6CEB037E6C6C147F017C010E1380
6D011C13FE90380FC0F0903803FFE09026007F0013002F467DC436>I<EB01FE903807FF
C090381F03F090387C00F849137C48487F48487F0007158049130F000F15C0121F4914E0
003F1407A2127F90C713F0A35AA290B6FCA290C9FCA67EA36C7EA21630121F7F000F1560
6C7E000315C06C6CEB01806C6CEB0300017C13066D131C90380FC078903803FFE0903800
7F80242E7DAC2B>I<EC1FC0EC7FF0ECF038903803E07C903807C0FC90380F81FEA2EB1F
0190383F00FCA2013E1330017E1300B0B61280A3D8007EC7FCB3B1137F497E007FEBFF80
A31F467EC51E>I<D901FCEB1FC0903A0FFF807FE0903A3F07E1E1F090397C01F7819039
F800FE01484890387C00E048486D13000007143FA248486D7EA2001F81A7000F5DA26C6C
49C7FCA20003143E6C6C5B6C6C5B486C485A39033F07E090380FFF80260701FCC8FC0006
CAFCA3120E120F7EA27F13E06CB512F86CECFF806C15E06D14F848B67E3A07E0000FFED8
0F80EB00FF001EC8123F003EED1F8048150F17C0481507A6007CED0F80A26CED1F006C15
3E6C6C5CD807E0495AD801F8EB07E0D8007FEB3F8090261FFFFEC7FC010113E02C417DAB
31>I<EA01FC12FFA3120312011200B3EC01FE913807FF8091381E07E091383801F00260
7FECC000D9FD807F167C01FFC7FC167E5BA35BB3A9486C14FFB5D8FC7F13FEA32F457DC4
36>I<13E0EA03F8487EA66C5AEA00E090C7FCADEA01FC127FA3120312011200B3B0487E
B512F8A315437EC21B>I<EA01FC12FFA3120312011200B3B3B3A5487EB512FCA316457E
C41B>108 D<2701FC01FEEC7F8000FF903B07FFC001FFF0913B0E03F00380FC913B3800
F80E003E0003495C000101C0D97C307F0000037E81D9FD805C01FFC7D83EC0130F043F81
495DA34992C7FCB3A9486C4A6C497EB5D8FC3FB5000FB512C0A34A2C7DAB51>I<3901FC
01FE00FF903807FF8091381E07E091383801F0000301607F0001EBC0002600FD807F167C
01FFC7FC167E5BA35BB3A9486C14FFB5D8FC7F13FEA32F2C7DAB36>I<EC7F80903803FF
F090380FC0FC90383E001F496D7E496D7E48486D7E48486D7E48486D7E000F81A2484814
7E003F157FA290C87E481680A44816C0AA6C1680A26D147F003F1600A2001F157E6D14FE
000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49C7FC90381FC0FE903807FFF8
9038007F802A2E7DAC31>I<3901FC01FC00FF90380FFF8091383E07E091387001F80003
9038C0007C2601FD807F6CB4C7123FEE1F8049EC0FC04915E0EE07F0A217F8160317FCA3
160117FEA917FC1603A317F8160717F0EE0FE07FEE1FC06D1580EE3F00D9FD80137ED9FC
C05B91386001F891383C0FE091381FFF80DA03FCC7FC91C9FCAE487EB512FCA32F3F7DAB
36>I<91387F8006903903FFE00E90380FE07890383F001C017EEB061E5B4848EB033E48
48EB01BE12074848EB00FEA2485A003F157E5B127FA390C8FC5AA97E7FA3123F7F121F16
FE6C7E000714016C7E6C6CEB037E00001406017C130C013F131890380FC0F0903803FFE0
9038007F0091C7FCAE16FF037F13FEA32F3F7DAB33>I<3901F807E000FFEB1FF8EC383C
EC607E0003EBC0FF12013800F980EBFB00157E153C01FE1300A45BB3A77F487EB6FCA320
2C7DAB26>I<90383FE0303801FFF83907C01E70390F0007F0001C1301481300A2481470
A212F01530A37E7E007E1400EA7F80EA3FF0EBFF806C13F86C13FE0003EBFF806C14C0D8
003F13E0010313F09038001FF81403EC00FC0040147C00C0147E153E7E151EA37E151C7E
153C6C14386C147000FB14E039F18001C039E0F00F8039C07FFE00EB0FF01F2E7DAC26>
I<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2D8007EC7FCB3A4
150CAA133E013F1318A27F90380F803001071360903803E0C0903801FF809038003F001E
3E7EBC26>I<D801FC14FE00FF147FA300031401000114000000157EB3A916FEA3017C13
01A2017EEB037E013E147F011E010613806D011C13FE903807C078903803FFE09026007F
8013002F2D7DAB36>I<B539E001FFFCA3D807FEC7EA7FE0D801FCEC1F8017000000150E
160CA2017E5CA2017F14386D1430A26D6C5BA26E13E0010F5CA26D6C485AA36D6C48C7FC
A26E5A01011306A26D6C5AA2ECFE1CEC7E18A26E5AA3EC1FE0A36E5AA26E5AA36EC8FC2E
2C7EAA33>I<3B7FFFF007FFFCA30001D9800113C06C90C7EAFE006D147C6D14706D6C5B
6D6C5BECE0010107495AD903F090C7FCECF806903801FC0E01005BEC7E18EC7F30EC3F70
6E5A6E5A811407814A7EEC0DFC1418EC387E4A7E02607FECC01F01016D7ED903807F4A6C
7E01061303496D7E011C80013C1300017C147ED801FC14FFD80FFE4913C0B5D8800713FF
A3302B7FAA33>120 D<B539E001FFFCA3D807FEC7EA7FE0D801FCEC1F8017000000150E
160C6D141C017E1418A26D5CA26E1370011F1460A26D6C5BA2800107495AA2ECF0030103
91C7FCA2903801F806A2ECFC0E0100130CA2EC7E18A2EC7F38EC3F30A2EC1FE0A36E5AA2
6E5AA36EC8FCA21406A35CA2141C1418A200385B127C00FE5BA25C1301387C0380D87007
C9FCEA3C1EEA1FFCEA03F02E3F7EAA33>I<003FB612E0A29039E0000FC090C7EA1F8000
3C143F00381500157E003014FE00705C4A5A14030060495A5D4A5A141F5DC748C7FC5C14
FE5C495A13035C495A130F494813605C49C7FC5B017E14C05B1201485A5B48481301120F
491303485A003FEC0F8090C7121F007E14FFB7FCA2232B7DAA2B>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmbx12 12 23
/Fk 23 121 df<EC01E01403EC0FC0EC1F80EC3F00147E5C1301495A495A5C130F495A13
3F5C137F49C7FCA2485AA2485AA212075BA2120F5BA2121FA25B123FA4485AA612FFA25B
AE7FA2127FA66C7EA4121F7FA2120FA27F1207A27F1203A26C7EA26C7EA26D7E133F8013
1F6D7E1307806D7E6D7E1300147E80EC1F80EC0FC0EC03E014011B6476CA2C>40
D<12F07E127E7E6C7E6C7E6C7E7F6C7E6C7E12007F137F80133F806D7EA26D7EA26D7EA2
801303A2801301A280A27F1580A4EC7FC0A615E0A2143FAE147FA215C0A6ECFF80A41500
5BA25CA213035CA213075CA2495AA2495AA2495A5C137F91C7FC13FE5B1201485A485A5B
485A485A48C8FC127E12F85A1B647ACA2C>I<EA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7EA
7FFCEA3FF8EA1FF0EA07C00F0F788E1F>46 D<EC03C01407141F147FEB03FF133FB6FCA4
13C3EA0003B3B3ADB712FCA5264177C038>49 D<ECFFE0010F13FE013F6D7E90B612E000
0315F82607FC0313FE3A0FE0007FFFD81F806D138048C7000F13C0488001C015E001F07F
00FF6E13F07F17F881A46C5A6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1F
FC4B5A5E4B5A4B5A4A90C7FC4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8
D907E014F0495A495A49C8FC017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D
417BC038>I<ECFFF0010713FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E
81D80FF86D138013FE001F16C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A
5B020F1380902607FFFEC7FC15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017
E0A26F13F0A217F8A3EA0FC0EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F
80491380D81FF0491300D80FFEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E0
2D427BC038>I<163FA25E5E5D5DA25D5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F
87EC1F07143E147E147C14F8EB01F0EB03E0130714C0EB0F80EB1F00133E5BA25B485A48
5A485A120F5B48C7FC123E5A12FCB91280A5C8000F90C7FCAC027FB61280A531417DC038
>I<0007150301E0143F01FFEB07FF91B6FC5E5E5E5E5E16804BC7FC5D15E092C8FC01C0
C9FCAAEC3FF001C1B5FC01C714C001DF14F09039FFE03FFC9138000FFE01FC6D7E01F06D
13804915C0497F6C4815E0C8FC6F13F0A317F8A4EA0F80EA3FE0487E12FF7FA317F05B5D
6C4815E05B007EC74813C0123E003F4A1380D81FC0491300D80FF0495AD807FEEBFFFC6C
B612F0C65D013F1480010F01FCC7FC010113C02D427BC038>I<4AB47E021F13F0027F13
FC49B6FC01079038807F8090390FFC001FD93FF014C04948137F4948EBFFE048495A5A14
00485A120FA248486D13C0EE7F80EE1E00003F92C7FCA25B127FA2EC07FC91381FFF8000
FF017F13E091B512F89039F9F01FFC9039FBC007FE9039FF8003FF17804A6C13C05B6F13
E0A24915F0A317F85BA4127FA5123FA217F07F121FA2000F4A13E0A26C6C15C06D491380
6C018014006C6D485A6C9038E01FFC6DB55A011F5C010714C0010191C7FC9038003FF02D
427BC038>I<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FEDFE0791B539E0
01FF0F4949C7EA3F9F010701F0EC0FFF4901C0804990C87E4948814948814948167F4849
163F4849161F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994C7FC12FFAE12
7F7F1AF0A2123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE0F806C6DEE1F00
6D6C5E6D6C167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D903AFFF001FF80
023F90B6C7FC020715FC020115F0DA001F1480030001F8C8FC44467AC451>67
D<BA12F8A485D8001F90C71201EF003F180F180318011800A2197E193EA3191EA21778A2
85A405F890C7FCA316011603161F92B5FCA5ED001F160316011600A2F101E01778A2F103
C0A494C7FC1907A21A80A2190FA2191FA2193FF17F0061601807181F4DB5FCBBFC61A443
447DC34A>69 D<B64BB512FE8181A281D8003F6D91C7EA780081013D7F81133C6E7E6E7F
6E7F6E7F6E7F82806E7F6E7F6F7E6F7F83816F7F6F7F6F7F6F7F6F7F8382707F707F707F
707F8482707F707F717E7113807113C019E0837113F07113F87113FC7113FE19FF847213
F884848484A28484197F193F191FA2190F1907B61603190119001A78A24F447CC358>78
D<B812F8EFFFC018F818FE727ED8001F90C7003F13E005037F05007F727E727E727EA286
84A286A762A24E90C7FCA24E5A61187F943801FFF005075B053F138092B7C8FC18F818E0
18F892C77FEF3FFF050F7F717F717FA2717FA2717FA785A61B0F85A2187F73131F72141E
B700E06DEB803E72EBE0FC72EBFFF8060114F0726C13E0CC0007138050457DC354>82
D<DAFFE0131C010701FE133C013F9038FF807C90B6EAE0FC4815F9489038801FFF3907FC
00014848EB007F4848143F4848140F491407007F15035B1601160012FF177CA27FA26D15
3C7F7F6D92C7FC6C7EEBFFE014FE6CEBFFF015FF6C15E016FC6C816C6F7E6C826C826C6C
81011F810107811300020F80140003077FED007F82040F1380828212F082A282A27EA218
007EA26C5D6C5E6D14036D5D6D140701F84A5A01FFEC3FF002F8EBFFE0486CB65AD8FC1F
92C7FCD8F80714FC48C614F0480107138031467AC43E>I<EC3FFC49B512C0010F14F001
3F14FC90397FF003FE9039FFC001FF0003495A48494813805B120F485AA2485A6F130000
7F6E5AED00784991C7FCA212FFAC6C7EA3123F6DEC03C0A26C6C1407000F16806D140F6C
6DEB1F006C6D133E6C01F05B3A007FFC03F86DB55A010F14C0010391C7FC9038003FF82A
2F7CAD32>99 D<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC010FEBFF8F013F14
CF9039FFF807FF48EBC00148903880007F4890C7123F4848141F49140F121F485AA3127F
5BA212FFAC127FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5FC6CD9C00314FC
6C9038F01FEF6DB5128F011FEBFE0F010713F89026007FC0EBF80036467CC43E>I<EC3F
F80103B57E010F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E48486D13
80485A001FED7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9FCA5127F
A27FA2123F17F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0EB3F0090
397FFE01FE011FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33>I<137C48B4FC
4813804813C0A24813E0A56C13C0A26C13806C1300EA007C90C7FCAAEB7FC0EA7FFFA512
037EB3AFB6FCA518467CC520>105 D<90277F8007FEEC0FFCB590263FFFC090387FFF80
92B5D8F001B512E002816E4880913D87F01FFC0FE03FF8913D8FC00FFE1F801FFC0003D9
9F009026FF3E007F6C019E6D013C130F02BC5D02F86D496D7EA24A5D4A5DA34A5DB3A7B6
0081B60003B512FEA5572D7CAC5E>109 D<90387F807FB53881FFE0028313F0028F13F8
ED8FFC91389F1FFE000313BE6C13BC14F8A214F0ED0FFC9138E007F8ED01E092C7FCA35C
B3A5B612E0A5272D7DAC2E>114 D<EB01E0A51303A41307A2130FA2131FA2133F137F13
FF1203000F90B51280B7FCA4C601E0C7FCB3A3ED01E0A9150302F013C0137F150790393F
F80F8090391FFC1F006DB5FC6D13FC01015B9038003FE023407EBE2C>116
D<D97FC049B4FCB50103B5FCA50003EC000F6C81B3A85EA25EA25E7E6E491380017FD901
F713FE9138F807E76DB512C7010F1407010313FE9026007FF0EBFC00372E7CAC3E>I<B5
00FE90383FFFF0A5C601F0903803E0006D6C495A013F4A5A6D6C49C7FC6E5B6D6C137E6D
EB807C6D6D5A6DEBC1F0EDE3E06DEBF7C06EB45A806E90C8FC5D6E7E6E7F6E7FA24A7F4A
7F8291381F3FFCEC3E1F027C7F4A6C7E49486C7F01036D7F49487E02C08049486C7F49C7
6C7E013E6E7E017E141FB500E090B512FCA5362C7EAB3B>120 D
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmcsc10 20.74 5
/Fl 5 113 df<B76C090FB612FC7063A37063D8000FF9C000D900FD6D097B01FCC7FC02
7D67A2023C6D09F35BA26F6CF201E3A36F6CF203C3A26F6CF20783A26F6DF10F03A36F6D
191EA26F6D193CA36F6D1978A26F6D19F0A3706CF001E0A2706CF003C0A3706CF00780A2
706DEF0F00A3706D171EA2706D5FA2706D5FA3706D5FA2716C4C5AA3716C4C5AA2716C4C
5AA3716D4BC7FCA2716D151EA3716D5DA2716D5DA3716D5DA2726C4A5AA3726C4A5AA272
6C4A5AA2726D49C8FCA3726D131EA2726D5BA3726D5BA2726D5BA3736C485AA2736C485A
A3736C485AA273018FC9FCA37313DEA27313FCA2735B147EA202FF705BA2010301C07048
4C7F497F011F01F8527F48B66C6F4893B612C0B8070FB812FC745AA374C8FC967677F5AA
>77 D<17074D7E4D7EA34D7EA24D7EA34D7EA24C7FA34C7F17DF04077F178FA2040F8017
07041F80EE1E03A2043E80EE3C01047C80EE7800A204F8804C137FA24B486D7EA2030381
4C131FA24B488084030F8293C77EA2031E8284033E82033C80A24B828403F8824B157FA2
0201834B153F0203834B151F92B8FC4A83A24A8492C91207A24A84021E82023E84023C82
A2027C8402788202F8844A177FA20101854A173F1303747E130787010F84011F86133F49
6C8501FF6000036D4D13F0000F01FE94B512FCB600C0031FECFFF8A45D5A7AD96A>97
D<BC12E0A4C602C0C8FC013F4903077F6D90CAFC6D183F1A1F1A0F1A071A03A21A01A287
1A00A31B78A51B7C063C143CA498C7FCA3187CA318FCA217011707173F92B6FCA492C712
3F170717011700A2187CA3183CA3F303C0A3F3078095C8FCA51B0F1C00A363A31B3EA21B
7EA21BFE1A01A2505A1A0F1A1F49187F496DED03FF90B56C157FBCFC63A3525878D760>
101 D<B8FCA4C602F8CAFC013F13C06D5B7F92CBFCB3B3AB1A0FA51A1EA61A3EA41A7E1A
7C1AFCA21901A219031907190F191F197F49EE01FF496D020713F890B56C91B5FCBBFCA4
485878D758>108 D<B912F8F0FF8019F019FEC602C0C76C6C7E013F4902077F6D90C800
0113F06D706C7E737E73B4FC857313801BC07313E0A21BF0A27313F8A31BFCA81BF8A34F
13F0A21BE0A24F13C01B804F130061F13FFC4F5A4E485A060713C0067F5B92B748C7FC19
F0198006F8C8FC92CCFCB3AF497F497F90B512F0B712F0A44E5878D760>112
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmr17 20.74 12
/Fm 12 122 df<ED7FF00207B57E023F14F091B612FC4915FF902707FE007F13C0D90FE0
010F7FD91F80010113F849C87F017CED3FFE496F7E48486F138048486F13C04848817113
E0484817F090CAFC48EF7FF8121E003EEF3FFC123CA2007CEF1FFE1278A2EA7FC0D8FFF0
EE0FFF7F7F7FA76C5A6C5A6C5AD807C0EE1FFECBFCA3F03FFCA3F07FF8A219F018FF19E0
5F19C04D1380A24D130060170F4D5A604D5A4D5A604D5A4C90C7FC4C5A4C5A5F4C5A4C5A
4C5A4C5A94C8FC16FE4B5A4B5A4B5A4B5A4B5A4B5A4BC9FC157E5D4A5A4A5A4A5A4A5A4A
4815074AC9FC143E4A160E5C495A495A495A495A49CA121E011E171C5B5B49173C485A48
48177C4848EE01FC48B912F8A25A5A5ABAFCA219F0A3407279F14F>50
D<EA0780EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA0780C7FCB3B3AAEA07
80EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA07800E4A72C92B>58
D<BA12F0F1FF801AF01AFCF2FF80D8003F01F0C86C7F010749030713F04B030013FC6DF0
3FFEF20FFF747F08017F747F757E88757E1B1F881B0F88A2751380A21DC0A287A21DE0AA
1DC0A263A21D80A2511300A2641B1F64515A515A1BFF6408035B5090C7FC505AF23FFCF2
FFF007075B077F138092B848C8FC1AF01A8007F0C9FC03C0CDFCB3B3AB497FA2013F13FC
B8FCA55B7678F56C>80 D<001FBE12F8A502F8C7000F01F0C7121F4801806E49020113FC
01FCC86C49EC003F491B1F01E01B07491B03491B0190C91800A2003E1D7CA2003C1D3CA3
481D1EA500701D0EA8481D07A6CA1900B3B3B3B14D7F4D7F057F13FE031FB812F8A56875
7BF473>84 D<140C141E143F4A7E4A7E497F903803F3F0903807E1F814C090380F807C49
487E013E7F496D7E496D7E48486D7E48486D7E48486D7E49147848C87E001E81488148ED
078048ED03C00060ED01802A186EF64F>94 D<ED1FFC4AB512C0020714F091391FF00FFC
91397F8001FFD901FEC7EA7FC049486E7E49486E7E49486E7E49486E7E49486E7E494814
0101FF824890C91380A24848EE7FC0A2485A000FEF3FE05BA2001F18F0181F485AA3007F
18F8A349160FA212FF90B9FCA301E0CBFCAB127F7FA3123FA36C7EA219386C7E19780007
18707F000318F06C6C17E018016C6DED03C06D6C1680013F16076D6CED0F006D6C151E6D
6C5D6D6C5D6DB44A5A6D6C6C495ADA3FE0EB1F80DA0FFE01FEC7FC0203B512F8DA007F13
E0DB07FEC8FC3D4D7BCB46>101 D<EB01F0EA07FFB5FCA51201EA007F133FA2131FB3B3
B3B3B3AC497EEBFFFEB612FEA51F787AF72A>108 D<D901F0902601FFC0ED0FFED807FF
021F01FC92B512E0B5027F01FF020314F8922601FC0101C090390FE00FFE922803E0003F
E090391F0001FFDB0F80D91FF8017C6D13C04BC7000F4A147FC6023C912707FC01E06E7E
013F496E6C48486E7E011F0170DA01FF496E7E03F0160790260FF1E04CC8FCDAF3C06E01
9E6F7E4B169C02F717BC92C913B802FFDC7FF86F7E4A5FA34A5FA44A5FB3B3A8496C4C6C
4B7ED97FFF030301F8031F13C0B7D88007B600FC013FB612E0A57B4B7ACA86>I<D901F0
903803FF80D807FF021F13F8B5027F13FE923A01FC03FF80923A03E0007FE0DB0F80EB1F
F0031EC76C7EC65C013F496E7E011F496E7E5DEB0FF1DAF3C06E7E5D14F792C9FC02FF83
5CA35CA45CB3B3A8496C4B7FD97FFF030713F0B7D8800FB612F8A54D4B7ACA58>I<ED07
FE92387FFFE00203B512FC91390FFC03FF913A3FC0003FC04AC7EA0FE0D901FEEC07F8D9
03F8EC01FC49486E7E4948157F49486F7E49486F7E017F8349C96C7E4916070001844848
707EA2000784491601000F84A24848701380A2003F19C0A349177F007F19E0A412FF1AF0
AD007F19E0A26D17FFA2003F19C0A46C6C4C1380A2000F1900A26C6C4C5AA26C6C4C5A00
01606D160F6C606D6C4B5A6D6C4B5AA26D6C4B5AD907F003FEC7FCD903FCEC03FC6D6C4A
5A6D6C6CEB1FF0DA3FE0EB7FC091270FFC03FFC8FC0203B512FCDA007F13E0DB07FEC9FC
444D7BCB4F>I<DA1FFFEB038049B512E0010FECF807903A3FE001FE0F01FEC7EA1F9FD8
01F8EC07DFD807E0EC03FF484880498048C9127F48163F003E161F127E170F127C12FC17
07A46C1603A27E7F6C7E7F6D92C7FCEA3FFC13FF6C13E06C13FF6C14F06CECFF806C15F8
6C15FE013F6E7E010F15E0010381010081020F14FEDA007F7F1503DB003F1380040713C0
040113E000E081177FEF3FF06C161F170FEF07F8A217037E1701A27EA37E18F07E17036D
16E0A26D15076DED0FC06D168000FE161F017CED3F00486C157E6DEC01F826F80FC0EB07
F026F003F8EB7FC00100B6C7FC48013F13FC02071380354D7CCB3E>115
D<B600F84AB512FCA5000191C9003F13C026007FFC040F13006D4817FC011F715A62010F
715A6E5F13076E4C5A130397C7FC6E5E6D170E816D5FA26F153C027F163881023F5EA26F
15F0021F5E81020F4B5AA26F140302075E8102034BC8FCA26F5C6E150E826E5DA270133C
037F143882033F5CA27013F0031F5C82030F495AA2EEFC0303075C16FE030349C9FCA270
5A6F130E178E6F139CA217FC705AA2705AA3705AA2705AA3705AA294CAFCA25E160EA25E
A2163C1638A25EA216F05EA24B5A120FD83FC01303486C5C486C130793CBFC5D150E5D15
3C6C485B495B6C48485A383C0003001F495A260FE03FCCFC3803FFFE6C13F838003FE04E
6C7EC953>121 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop 1001 809 a Fm(TP2)52 b Fl(Maple)h Fm(:)70 b(P)l(olyn^)-79
b(omes)0 1480 y Fk(Exercice)36 b(1.)0 1625 y(1.1)d Fj(F)-8
b(actoriser)32 b(le)h(p)s(olyn^)-49 b(ome)34 b(suiv)-5
b(an)m(t)33 b(sur)g Fk(R)g Fj(puis)g(sur)g Fk(C)p Fj(.)1188
1845 y Fi(P)41 b Fj(=)28 b Fi(x)1451 1804 y Fh(5)1513
1845 y Fg(\000)22 b Fi(x)1667 1804 y Fh(4)1729 1845 y
Fg(\000)h Fj(4)p Fi(x)1933 1804 y Fh(3)1995 1845 y Fj(+)f(4)p
Fi(x)2197 1804 y Fh(2)2258 1845 y Fg(\000)h Fj(5)p Fi(x)f
Fj(+)g(5)0 2021 y Fk(1.2)33 b Fj(D)m(\023)-46 b(ecomp)s(oser)33
b(la)f(fraction)h(rationelle)g(suiv)-5 b(an)m(te)34 b(en)c(\023)-46
b(el)m(\023)g(emen)m(t)34 b(simple)g(dans)f Fk(R)g Fj(puis)g(dans)g
Fk(C)p Fj(.)1324 2280 y Fi(F)41 b Fj(=)1989 2212 y(1)p
1542 2257 944 4 v 1542 2348 a Fi(X)1631 2319 y Fh(7)1692
2348 y Fj(+)22 b(27)p Fi(X)1977 2319 y Fh(4)2038 2348
y Fg(\000)h Fi(X)2227 2319 y Fh(3)2288 2348 y Fg(\000)g
Fj(27)33 2534 y(Commandes)34 b Ff(Maple)d Fj(:)44 b Fe(parfrac,)53
b(factor,)g(solve,)g(denom)0 2729 y Fk(Exercice)36 b(2.)43
b Fj(Quelle)34 b(est)f(la)g(m)m(ultiplicit)m(\023)-46
b(e)34 b(de)f(1)g(dans)g(le)g(p)s(olyn^)-49 b(ome)33
b(suiv)-5 b(an)m(t,)34 b Fi(n)28 b Fg(2)g Fk(N)k Fj(?)849
2949 y Fi(P)912 2964 y Fd(n)987 2949 y Fj(=)27 b Fi(X)1179
2908 y Fh(2)p Fd(n)1283 2949 y Fg(\000)c Fi(n)1441 2908
y Fh(2)1481 2949 y Fi(X)1570 2908 y Fd(n)p Fh(+1)1729
2949 y Fj(+)f(2\()p Fi(n)1972 2908 y Fh(2)2033 2949 y
Fg(\000)h Fj(1\))p Fi(X)2309 2908 y Fd(n)2378 2949 y
Fg(\000)f Fi(n)2535 2908 y Fh(2)2575 2949 y Fi(X)2664
2908 y Fd(n)p Fc(\000)p Fh(1)2823 2949 y Fj(+)g(1)0 3169
y(Commandes)34 b Ff(Maple)e Fj(:)43 b Fe(subs,)53 b(simplify,)g(diff)0
3339 y Fk(Exercice)29 b(3.)42 b Fj(Soien)m(t)27 b Fi(E)33
b Fj(l'espace)28 b(v)m(ectoriel)g(des)g(p)s(olyn^)-49
b(omes)28 b(de)f Fk(R)p Fj([)p Fi(X)8 b Fj(])26 b(de)h(degr)m(\023)-46
b(e)28 b(inf)m(\023)-46 b(erieur)27 b(ou)d(\023)-46 b(egale)0
3459 y(\022)d(a)32 b(3,)h Fi(')254 3474 y Fh(1)293 3459
y Fj(,)g Fi(')417 3474 y Fh(2)456 3459 y Fj(,)g Fi(')580
3474 y Fh(3)619 3459 y Fj(,)g Fi(')743 3474 y Fh(4)814
3459 y Fj(les)e(\023)-46 b(el)m(\023)g(emen)m(ts)35 b(de)e
Fi(E)1563 3423 y Fc(\003)1635 3459 y Fj(d)m(\023)-46
b(e\014nis)34 b(par)e(:)251 3739 y Fg(8)p Fi(P)41 b Fg(2)28
b Fi(E)104 b(')744 3754 y Fh(1)783 3739 y Fj(\()p Fi(P)14
b Fj(\))27 b(=)h Fi(P)14 b Fj(\(1\))p Fi(;)48 b(')1408
3754 y Fh(2)1447 3739 y Fj(\()p Fi(P)14 b Fj(\))27 b(=)h
Fi(P)14 b Fj(\(2\))p Fi(;)48 b(')2072 3754 y Fh(3)2111
3739 y Fj(\()p Fi(P)14 b Fj(\))27 b(=)h Fi(P)2472 3698
y Fc(0)2495 3739 y Fj(\(1\))p Fi(;)48 b(')2759 3754 y
Fh(4)2799 3739 y Fj(\()p Fi(P)14 b Fj(\))27 b(=)3082
3603 y Fb(Z)3182 3629 y Fh(1)3138 3829 y(0)3238 3739
y Fi(P)14 b Fj(\()p Fi(x)p Fj(\))j Fi(dx)0 4006 y Fj(Mon)m(trer)37
b(que)h Fi(')633 4021 y Fh(1)672 4006 y Fj(,)g Fi(')801
4021 y Fh(2)840 4006 y Fj(,)g Fi(')969 4021 y Fh(3)1008
4006 y Fj(,)g Fi(')1137 4021 y Fh(4)1213 4006 y Fj(formen)m(t)f(une)g
(base)g(de)g Fi(E)2201 3970 y Fc(\003)2277 4006 y Fj(et)g(en)g(donner)g
(la)g(base)g(duale.)56 b(V)m(\023)-46 b(eri\014er)0 4126
y(v)m(os)34 b(r)m(\023)-46 b(esultats.)0 4246 y(Indication)33
b(:)44 b(Ecrire)33 b(les)h Fi(')1028 4261 y Fd(i)1088
4246 y Fj(dans)g(la)e(base)h(duale)g(usuelle)i(de)e Fi(E)6
b Fj(.)0 4367 y(Commandes)34 b Ff(Maple)e Fj(:)43 b Fe
(matrix\(4,4,\(i,j\)->...\),)58 b(linsolve)0 4537 y Fk(Exercice)36
b(4.)43 b(\(Suite)37 b(de)h(Sturm\))0 4682 y(4.1)h Fj(Ecrire)h(une)g
(fonction)g(qui)f(ren)m(v)m(oie)i(la)e(liste)h(des)g(restes)h(obten)m
(us)g(lors)e(du)g(calcul)h(du)g(pgcd)f(de)0 4803 y(deux)34
b(p)s(olyn^)-49 b(omes)34 b(par)e(l'algorithme)h(d'Euclide.)0
4923 y(T)-8 b(est)34 b(:)43 b Fe(euclide)p Fj(\()p Fi(x)735
4887 y Fh(5)799 4923 y Fj(+)22 b(1)p Fi(;)17 b(x)1045
4887 y Fh(3)1106 4923 y Fj(+)22 b(3\))28 b(=)f([)p Fi(x)1504
4887 y Fh(5)1566 4923 y Fj(+)22 b(1)p Fi(;)17 b(x)1812
4887 y Fh(3)1874 4923 y Fj(+)22 b(3)p Fi(;)17 b Fj(1)k
Fg(\000)i Fj(3)p Fi(x)2339 4887 y Fh(2)2379 4923 y Fi(;)17
b Fj(3)k(+)2601 4884 y Fh(1)p 2601 4900 36 4 v 2601 4957
a(3)2646 4923 y Fi(x;)c Fg(\000)p Fj(242])0 5043 y(Commandes)34
b Ff(Maple)e Fj(:)43 b Fe(rem,)53 b(degree)0 5214 y Fk(4.2)27
b Fj(Ecrire)g(une)h(fonction)f(qui)g(calcule)h(le)f(nom)m(bre)g(de)g(c)
m(hangemen)m(ts)j(de)d(signes)h(dans)f(une)g(liste,)i(sans)0
5334 y(tenir)k(compte)g(des)h(v)-5 b(aleurs)33 b(n)m(ulles.)0
5454 y(Indication)23 b(:)38 b(P)m(our)22 b(enlev)m(er)i(les)f(z)m(\023)
-46 b(eros)23 b(d'une)f(liste)h Fe(L)p Fj(,)f(utiliser)h(la)f(commande)
h Fe(remove\(x->\(x=0\),L\))p Fj(.)0 5575 y(T)-8 b(est)34
b(:)43 b Fe(chg)p 444 5575 31 4 v 38 w(signe)p Fj(\([)p
Fg(\000)p Fj(2)p Fi(;)17 b Fj(0)p Fi(;)g Fj(3)p Fi(;)g
Fj(0)p Fi(;)g Fg(\000)p Fj(4)p Fi(;)g Fg(\000)p Fj(2)p
Fi(;)g Fj(1)p Fi(;)g Fj(0]\))26 b(=)i(3)1885 5944 y(1)p
eop
%%Page: 2 2
2 1 bop 0 84 a Fj(TP2)33 b Ff(Maple)2821 b Fj(P)m(olyn^)-49
b(omes)p 0 124 3820 4 v 0 407 a Fk(4.3)35 b Fj(Ecrire)i(une)f(fonction)
f(qui)h(calcule)h(p)s(our)e(un)g(p)s(olyn^)-49 b(ome)36
b Fi(P)49 b Fj(donn)m(\023)-46 b(e,)37 b(les)f Fi(s)f
Fj(premiers)i(termes)f(de)0 527 y(la)c(suite)i Fi(P)405
542 y Fh(0)444 527 y Fi(;)17 b(P)551 542 y Fh(1)590 527
y Fi(;)g(:)g(:)g(:)33 b(;)17 b(P)889 542 y Fd(s)p Fh(+1)1048
527 y Fj(d)m(\023)-46 b(e\014nie)34 b(par)e(:)150 747
y Fi(P)213 762 y Fh(0)280 747 y Fj(=)27 b Fi(P)s(;)49
b(P)588 762 y Fh(1)655 747 y Fj(=)27 b Fg(\000)p Fi(P)912
706 y Fc(0)936 747 y Fi(;)49 b(P)1075 762 y Fh(2)1142
747 y Fj(=)27 b Fg(\000)p Fi(P)1385 762 y Fh(0)1525 747
y Fj(mo)s(d)33 b Fi(P)1808 762 y Fh(1)1847 747 y Fi(;)17
b(:)g(:)g(:)33 b(;)17 b(P)2146 762 y Fd(i)p Fh(+1)2291
747 y Fj(=)28 b Fg(\000)p Fi(P)2535 762 y Fd(i)p Fc(\000)p
Fh(1)2753 747 y Fj(mo)s(d)33 b Fi(P)3036 762 y Fd(i)3064
747 y Fi(;)17 b(:)g(:)g(:)33 b(;)17 b(P)3363 762 y Fd(s)p
Fh(+1)3517 747 y Fj(=)28 b(0)0 967 y(C'est)34 b(une)f
Fa(suite)i(de)g(Sturm)e Fj(du)f(p)s(olyn^)-49 b(ome)34
b Fi(P)14 b Fj(.)0 1088 y(T)-8 b(est)34 b(:)43 b Fe(sturm)p
Fj(\()p Fi(x)633 1051 y Fh(4)696 1088 y Fg(\000)23 b
Fj(20)p Fi(x)949 1051 y Fh(2)1011 1088 y Fj(+)f(9)p Fi(x)g
Fg(\000)h Fj(8\))k(=)g([)p Fi(x)1634 1051 y Fh(3)1697
1088 y Fg(\000)22 b Fj(2)p Fi(x)1900 1051 y Fh(2)1962
1088 y Fg(\000)h Fj(5)p Fi(x)f Fj(+)g(6)p Fi(;)17 b Fg(\000)p
Fj(3)p Fi(x)2560 1051 y Fh(2)2622 1088 y Fj(+)22 b(4)p
Fi(x)g Fj(+)g(5)p Fi(;)17 b Fg(\000)3124 1048 y Fh(44)p
3124 1065 71 4 v 3142 1122 a(9)3227 1088 y Fj(+)3335
1048 y Fh(38)p 3335 1065 V 3352 1122 a(9)3415 1088 y
Fi(x;)g Fg(\000)3601 1048 y Fh(2025)p 3601 1065 142 4
v 3619 1122 a(361)3753 1088 y Fj(])0 1258 y Fk(4.4)35
b Fj(Ecrire)g(une)g(fonction)f(qui)i(donne)f(le)f(nom)m(bre)i(de)f(c)m
(hangemen)m(ts)h(de)f(signes)h(dans)f(une)g(suite)g(de)0
1378 y(Sturm)30 b(\023)-46 b(ev)-5 b(alu)m(\023)-46 b(ee)34
b(en)f(un)g(p)s(oin)m(t)f Fi(x)h Fj(donn)m(\023)-46 b(e.)0
1499 y(T)-8 b(est)34 b(:)43 b Fe(eval)p 495 1499 31 4
v 38 w(sturm)p Fj(\()p Fi(x)875 1462 y Fh(3)938 1499
y Fg(\000)23 b Fj(2)p Fi(x)1142 1462 y Fh(2)1204 1499
y Fg(\000)f Fj(5)p Fi(x)h Fj(+)f(6)p Fi(;)17 b Fj(0\)=1)0
1669 y Fk(4.5)33 b Fj(Gr^)-49 b(ace)32 b(\022)-49 b(a)33
b(un)f(repr)m(\023)-46 b(esen)m(tation)35 b(graphique,)e(prop)s(oser)g
(une)g(in)m(terpr)m(\023)-46 b(etation)34 b(de)f(l'en)m(tier)1119
1889 y Fe(eval)p 1329 1889 V 38 w(sturm)q Fj(\()p Fi(P)s(;)17
b(b)p Fj(\))22 b Fg(\000)h Fe(eval)p 2176 1889 V 37 w(sturm)r
Fj(\()p Fi(P)s(;)17 b(a)p Fj(\))0 2109 y(o)s(\022)-51
b(u)31 b Fi(P)46 b Fj(est)34 b(le)f(p)s(olyn^)-49 b(ome)33
b Fi(x)999 2073 y Fh(3)1061 2109 y Fg(\000)23 b Fj(2)p
Fi(x)1265 2073 y Fh(2)1326 2109 y Fg(\000)g Fj(5)p Fi(x)f
Fj(+)g(6)33 b(et)g Fi(a)27 b(<)h(b)p Fj(.)0 2229 y(Cette)e(propri)m
(\023)-46 b(et)m(\023)g(e)26 b(se)g(g)m(\023)-46 b(en)m(\023)g(eralise)
26 b(au)f(p)s(olyn^)-49 b(omes)27 b(de)f Fk(R)p Fj([)p
Fi(X)8 b Fj(])24 b(\022)-49 b(a)25 b(z)m(\023)-46 b(eros)26
b(simples.)43 b(T)-8 b(ester-le)26 b(a)m(v)m(ec)h(d'autres)0
2350 y(exemples.)0 2520 y Fk(4.6)i Fj(Ecrire)h(une)g(fonction)f(qui)h
(p)s(our)e(un)i(p)s(olyn^)-49 b(ome)30 b Fi(P)42 b Fj(de)29
b Fk(R)p Fj([)p Fi(X)8 b Fj(],)30 b(ren)m(v)m(oie)g(un)g(p)s(olyn^)-49
b(ome)30 b(p)s(oss)m(\023)-46 b(edan)m(t)0 2640 y(les)33
b(m)m(^)-46 b(eme)34 b(z)m(\023)-46 b(eros,)34 b(mais)f(tous)g
(simples.)0 2760 y(Commandes)h Ff(Maple)e Fj(:)43 b Fe(quo,)53
b(gcd,)f(diff)1885 5944 y Fj(2)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
