%!PS-Adobe-2.0
%%Creator: dvips(k) 5.85 Copyright 1999 Radical Eye Software
%%Title: TP2corrige.dvi
%%Pages: 6
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Courier
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o TP2corrige.ps TP2corrige.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.06.27:1005
%%BeginProcSet: texc.pro
%!
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id
ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{
rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get
/gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp add /cp
X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add /gp X
adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{dup
255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1 adv}
B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2 idiv
S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Created 1994/6/23. Source file was pstricks.doc
% Version 0.93a, 93/03/12.
% For use with Rokicki's dvips.
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
def
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
%  Modification Denis GIROU (CNRS/IDRIS - France) <Denis.Girou@idris.fr> - 15 Jan. 1997
% /Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
% pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
% div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
% d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt { 1 setlinecap [ 0 dx n div ]
dy n div 2 div setdash } { 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Created 1994/6/7. Source file was pst-node.doc
% Version 0.93a/b-97 patch 1, 97/05/09.
% For use with Rokicki's dvips.
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - 9 May 1997
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end

%%EndProcSet
%%BeginProcSet: 8r.enc
% @psencodingfile{
%   author = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry",
%   version = "0.6",
%   date = "14 April 1995",
%   filename = "8r.enc",
%   email = "kb@cs.umb.edu",
%   address = "135 Center Hill Rd. // Plymouth, MA 02360",
%   codetable = "ISO/ASCII",
%   checksum = "xx",
%   docstring = "Encoding for TrueType or Type 1 fonts to be used with TeX."
% }
% 
% Idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard Encoding + ISO Latin 1 + extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% 
% (4) Remaining positions left undefined are for use in (hopefully)
% upward-compatible revisions, if someday more characters are generally
% available.
% 
% (5) hyphen appears twice for compatibility with both ASCII and Windows.
% 
/TeXBase1Encoding [
% 0x00 (encoded characters from Adobe Standard not in Windows 3.1)
  /.notdef /dotaccent /fi /fl
  /fraction /hungarumlaut /Lslash /lslash
  /ogonek /ring /.notdef
  /breve /minus /.notdef 
% These are the only two remaining unencoded characters, so may as
% well include them.
  /Zcaron /zcaron 
% 0x10
 /caron /dotlessi 
% (unusual TeX characters available in, e.g., Lucida Bright)
 /dotlessj /ff /ffi /ffl 
 /.notdef /.notdef /.notdef /.notdef
 /.notdef /.notdef /.notdef /.notdef
 % very contentious; it's so painful not having quoteleft and quoteright
 % at 96 and 145 that we move the things normally found there down to here.
 /grave /quotesingle 
% 0x20 (ASCII begins)
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three /four /five /six /seven
 /eight /nine /colon /semicolon /less /equal /greater /question
% 0x40
 /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N /O
% 0x50
 /P /Q /R /S /T /U /V /W
 /X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o
% 0x70
 /p /q /r /s /t /u /v /w
 /x /y /z /braceleft /bar /braceright /asciitilde
 /.notdef % rubout; ASCII ends
% 0x80
 /.notdef /.notdef /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /.notdef /.notdef /.notdef
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /.notdef /.notdef /Ydieresis
% 0xA0
 /.notdef % nobreakspace
 /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot
 /hyphen % Y&Y (also at 45); Windows' softhyphen
 /registered
 /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (TP2corrige.dvi)
@start
%DVIPSBitmapFont: Fa cmmi6 6 1
/Fa 1 106 df<1338137CA2137813701300A7EA0780EA1FC0EA38E01230EA60F0EAC1E0
A3EA03C0A3EA0780A2EA0F0013041306EA1E0CA21318121CEA1E70EA0FE0EA07800F237D
A116>105 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmex10 12 16
/Fb 16 91 df<B612C0A600FCC8FCB3B3B3B3B3B3B3B3B3B3B3B3AAB612C0A61AEE6783
35>20 D<B612C0A6C7120FB3B3B3B3B3B3B3B3B3B3B3B3AAB6FCA61AEE7F8335>I<187C
18FCEF01F8A2EF03F0EF07E0EF0FC0171F1880EF3F005F177E17FE4C5A5F16034C5AA24C
5A4C5AA24C5A167F94C7FC5E5E15015E15034B5AA24B5AA24B5AA24B5AA2157F5E15FF93
C8FCA24A5AA214035D14075DA2140F5D141FA25D143FA24A5AA34A5AA34990C9FCA35B5C
A213075CA3130F5CA2131FA25CA2133FA35C137FA4495AA5485BA55A91CAFCA55A5BA512
0FA35BA4121FA55BA4123FA75BA4127FAF5BA212FFB3A836B3638257>48
D<12F87E127EA27E6C7E6C7E7F12076C7E7F12017F6C7E137E137F6D7EA26D7E6D7EA26D
7E801303801301801300806E7EA26E7EA26E7EA26E7EA2811407811403A26E7EA2818082
157FA282153F82A2151F82A26F7EA36F7EA36F7EA38281A28381A383167FA283A2163FA2
83A3161F83A4707EA5707EA58382A5188082A518C0A382A418E0A5177FA418F0A7173FA4
18F8AF171FA218FCB3A836B37D8257>I<B7FCA748C8FCB3B3B3B3B3B3B3B3B3A920B260
8242>I<B7FCA7C8127FB3B3B3B3B3B3B3B3B3A920B27F8242>I<12FEB3B3B3B3B3B3B3B3
B3A9B7FCA720B2608342>I<157FB3B3B3B3B3B3B3B3B3A9B7FCA720B27F8342>I<12FEB3
B3B3A8073E608042>I<12FEB3B3B3A8073E668042>I<EAFFE0B3A8127FA27FAF123FA47F
A7121FA47FA5120FA47FA31207A57F7EA5807EA56C7FA56D7EA4133F80A3131FA280A213
0FA2801307A3801303A2807FA36D7FA36E7EA36E7EA2141F81A2140F811407A281140381
1401A26E7EA282157F82153FA26F7EA26F7EA26F7EA26F7E1501821500828283163F707E
A2707E707EA2707E160183707E177E177F83EF1F8018C0170FEF07E0EF03F0EF01F8A2EF
00FC187C36B3638457>64 D<EF1FFCB3A818F8A2173FAF18F0A4177FA718E0A417FFA518
C0A45EA31880A55E1800A55E5FA54C5AA54C5AA45F163FA35FA2167FA25FA216FF5FA35D
94C7FCA25D5EA34B5AA34B5AA34B5AA25E153FA25E157F5EA215FF93C8FC5C5DA24A5AA2
14075D140F5DA24A5AA24A5AA24A5AA24AC9FC5C13015C13035C13075C495AA2495A495A
A249CAFC137E13FE485A5B12035B485A120F5B485A48CBFC127EA25A5A36B37D8457>I<
EAFFE0B3B3B3A80B3E638057>I<EAFFE0B3B3B3A80B3E528057>I<C112F0A500014ACB00
07ECF800D8003F1DC0010F9AC7FC6D646D646D64A26D64B3B3B3B3B3B3A7496D4E7FA249
6E4D7F496E4D7F496E4D7F013F02F84CB612C048B7040F15F8B800FE0207B812F0A5748B
7B7F7F>89 D<1B3FF3FFC0973801F0F0973803E0380807131C97380FC07EF3C1FE97381F
83FFA2F23F03A21A7F1A7E9738FE01FEF300784F481300A3190362A21907A262190FA44F
5AA3193F62A3197FA262A219FFA397C8FC60A4611803A44E5AA4180FA261A2181FA361A2
183FA44E5AA518FF61A35FA361A25FA496C9FC5FA460170FA54D5AA54D5AA4177F60A517
FF60A44C5BA54C5BA595CAFC5EA45F160FA45FA2161FA35FA3163F5FA54C5AA45FA216FF
A35FA25DA294CBFCA44B5AA45E1507A45E150FA35EA2151FA25EA3153F5EA34B5AA393CC
FC5DA25D1401A25DA24A5AA2001E1307D87F805BEAFFC04A5A5D141F5D4ACDFCEA7F8038
7E007E00385B6C485A380F03E03803FF80C648CEFC58DD7B7F37>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmsy8 8 3
/Fc 3 49 df<B812C0A32A037A9137>0 D<130C131EA50060EB01800078130739FC0C0F
C0007FEB3F80393F8C7F003807CCF83801FFE038007F80011EC7FCEB7F803801FFE03807
CCF8383F8C7F397F0C3F8000FCEB0FC039781E078000601301000090C7FCA5130C1A1D7C
9E23>3 D<137813FE1201A3120313FCA3EA07F8A313F0A2EA0FE0A313C0121F1380A3EA
3F00A3123E127E127CA35AA35A0F227EA413>48 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmti12 12 8
/Fd 8 121 df<120FEA3FC0127FA212FFA31380EA7F00123C0A0A76891E>46
D<EC0FE0EC7FF8903801F83E903807C00F90391F800780EB3F00017E14C0491303485A48
481307000715805B000F140F484814005D4848133E15FCEC07F0007FEBFFC0D9FFFEC7FC
14C090C9FC5A5AA55AA4ED0180ED03C0007CEC0780A2007EEC0F00003E141E157C6C14F0
6CEB03E03907800F802603C07EC7FC3801FFF838003FC0222D75AB2D>101
D<143C147E14FE1301A3EB00FC14701400AE137C48B4FC3803C780380703C0000F13E012
0E121C13071238A21278EA700F14C0131F00F0138012E0EA003F1400A25B137EA213FE5B
12015BA212035B141E0007131C13E0A2000F133CEBC038A21478EB807014F014E0EB81C0
EA0783EBC7803803FE00EA00F8174378C11E>105 D<D801F0EB0FE0D803FCEB7FF83A07
1E01F03E3A0E0F03C01F001ED987001380001C018E130F003C139C003801B814C014F838
781FF000705BA25C00F049131FD8E03F158091C7FC1200163F491500137EA25E01FE147E
5B16FE5E12014913015E170F00030203130E4914F0A20307131E0007EDE01C5B173CEEC0
38000F167849157017E0ED03C1001FEDE3C049903801FF000007C8127C302D78AB37>
110 D<EC0FE0EC7FFC903801F83E903907E00F8090390F8007C0EB1F00017EEB03E04914
F0A248481301484814F81207485AA2485AA2485A1503127F90C7FCA215074815F05AA215
0F16E05AED1FC0A21680153F16005D157E5D007C495A007E495A003E5C4A5A6CEB1F8026
0F803EC7FC3807C0FC3801FFF038003F80252D75AB32>I<EC0FE0EC7FF8903801F01E90
3803C00F90390780078090380F0003011E14C0150749131FA2017CEB3F801378137CED0E
0092C7FC137E137F14F014FF6D13C06D13F06D7F6D7F1300EC0FFE14011400157F81120E
003F141E487EA2153E48C7123CA200FC5C12705D0078495A6C495A6CEB0F80260F803EC7
FC3803FFF838007FC0222D7AAB28>115 D<1470EB01F8A313035CA313075CA3130F5CA3
131F5CA2007FB512E0B6FC15C0D8003FC7FCA25B137EA313FE5BA312015BA312035BA312
075BA3120F5BA2EC0780001F140013805C140E003F131EEB001C143C14385C6C13F0495A
6C485AEB8780D807FEC7FCEA01F81B3F78BD20>I<02F8133FD907FEEBFFE0903A0F0F83
C0F0903A1C07C780F890393803CF03017013EE01E0EBFC07120101C013F8000316F00180
EC01C000074AC7FC13001407485C120EC7FC140F5DA3141F5DA3143F92C8FCA34AEB03C0
1780147EA202FEEB0700121E003F5D267F81FC130E6E5BD8FF83143CD903BE5B26FE079E
5B3A7C0F1F01E03A3C1E0F83C0271FF803FFC7FC3907E000FC2D2D7CAB2D>120
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmbx12 12 2
/Fe 2 82 df<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FEDFE0791B539E0
01FF0F4949C7EA3F9F010701F0EC0FFF4901C0804990C87E4948814948814948167F4849
163F4849161F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994C7FC12FFAE12
7F7F1AF0A2123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE0F806C6DEE1F00
6D6C5E6D6C167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D903AFFF001FF80
023F90B6C7FC020715FC020115F0DA001F1480030001F8C8FC44467AC451>67
D<923807FFC092B512FE0207ECFFC0021F15F091267FFE0013FC902601FFF0EB1FFF0107
01C0010713C04990C700017F49486E7F49486F7E49486F7E49486F7E48496F7E48496F13
80A248496F13C0A24819E091C97E4819F0A248487013F8A3007F19FCA249177FA300FF19
FEAD007F19FCA36D17FF003F19F8A3001F19F06D5EA26C19E06E01FE5B6C912603FF8014
C06C6D486D4813804B13E06C9028E01F83F00F13006C903BF01E00F81FFE90267FF83E90
387C3FFC90263FFC3C6D485AD91FFE91381EFFF0D90FFF021F5B6D01FE5D010194C7FC6D
6D6CB45A023F90B512F8020703E0130202006F1307030713C792C7EA07F8716C130F7213
1F9538FF80FF96B5FC7114FEA3831AFCA27213F81AF0847213E07213C0721300F001FC48
587AC454>81 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmsy10 12 10
/Ff 10 113 df<007FB912E0BA12F0A26C18E03C04789A4D>0 D<121FEA3F80EA7FC0EA
FFE0A5EA7FC0EA3F80EA1F000B0B789E1C>I<127012FCB4FCEA7FC0EA1FF0EA07FCEA01
FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FC913801FF809138007FE0ED
1FF8ED07FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FE0EF0FF8EF03FE943800
FF80F03FE0F00FF0A2F03FE0F0FF80943803FE00EF0FF8EF3FE0EFFF80DC03FEC7FCEE0F
F8EE3FE0EEFF80DB03FEC8FCED1FF8ED7FE0913801FF80DA07FEC9FCEC1FF0EC7FC04948
CAFCEB07FCEB1FF0EB7FC04848CBFCEA07FCEA1FF0EA7FC048CCFC12FC1270CDFCB0007F
B912E0BA12F0A26C18E03C4E78BE4D>21 D<1AF0A3861A78A21A7C1A3CA21A3E1A1E1A1F
747EA2747E747E87747E747E1B7E87757EF30FE0F303F8007FBC12FEBE1280A26CF3FE00
CEEA03F8F30FE0F31F8051C7FC1B7E63505A505A63505A505AA250C8FC1A1E1A3E1A3CA2
1A7C1A78A21AF862A359347BB264>33 D<92B6FC02071580143F91B7120001030180C8FC
D907FCC9FCEB1FE0EB3F80017ECAFC5B485A485A485A5B485A121F90CBFC123EA2123C12
7CA2127812F8A25AA2B9FC1880A2180000F0CBFCA27EA21278127CA2123C123EA27E7F12
0F6C7E7F6C7E6C7E6C7E137E6D7EEB1FE0EB07FC6DB47E010090B6FC023F158014070200
1500313A78B542>50 D<1706170F171FA2173EA2177CA217F8A2EE01F0A2EE03E0A2EE07
C0A2EE0F80A2EE1F00A2163EA25EA25EA24B5AA24B5AA24B5AA24B5AA24BC7FCA2153EA2
5DA25DA24A5AA24A5AA24A5AA24A5AA24AC8FCA2143EA25CA25CA2495AA2495AA2495AA2
495AA249C9FCA2133EA25BA25BA2485AA2485AA2485AA2485AA248CAFCA2123EA25AA25A
A25A1260305C72C600>54 D<ED0FE015FF913803FC00EC0FE0EC3FC04A5A4AC7FC5C495A
A2495AB3AD495AA2495A131F495A495A01FEC8FCEA07F8EAFFE0A2EA07F8EA00FEEB7F80
6D7E6D7E130F6D7EA26D7EB3AD6D7EA26D7E806E7E6E7EEC0FE0EC03FC913800FFE0150F
236479CA32>102 D<12FEEAFFE0EA07F8EA00FEEB7F806D7E6D7E130F6D7EA26D7EB3AD
6D7EA26D7E806E7E6E7EEC0FE0EC03FC913800FFE0A2913803FC00EC0FE0EC3FC04A5A4A
C7FC5C495AA2495AB3AD495AA2495A131F495A495A01FEC8FCEA07F8EAFFE048C9FC2364
79CA32>I<126012F0B3B3B3B3B3A81260046474CA1C>106 D<1B0C1B1E1B3EA21B7CA21B
F8A2F201F0A2F203E0A2F207C0A2F20F80A2F21F00A21A3EA262A262A24F5AA2621903A2
4F5AA24F5AA24FC7FCA2193EA261A261A24E5AA24E5AA24E5AA24E5AA2010C4CC8FC133C
017C163EEA01FE00035F487E001E5F00387FD8707F4B5A00E07FD8003F4B5A80011F4B5A
A26E4A5A130F6E4AC9FC13076E143E13036E5C13016E5C7F6F5B027F1301A26F485A143F
6F485A141F6F485A140F6F48CAFC1407EDFC3E14035E15FE02015B15FF6E5BA26F5AA26F
5AA26F5AA26FCBFC150E4F647A8353>112 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmr8 8 11
/Fg 11 62 df<13031307130E131C1338137013F0EA01E013C01203EA0780A2EA0F00A2
121EA35AA45AA512F8A25AAB7EA21278A57EA47EA37EA2EA0780A2EA03C0120113E0EA00
F013701338131C130E1307130310437AB11B>40 D<12C07E12707E7E7E120FEA07801203
13C0EA01E0A2EA00F0A21378A3133CA4131EA5131FA2130FAB131FA2131EA5133CA41378
A313F0A2EA01E0A2EA03C013801207EA0F00120E5A5A5A5A5A10437CB11B>I<EC0380B3
A4B812FCA3C7D80380C7FCB3A42E2F7CA737>43 D<EB3FC0EBFFF03803E07C48487E4848
7E497E001EEB0780A2003E14C0A248EB03E0A500FC14F0B0007C14E0A3007E1307003E14
C0A36CEB0F806C14006D5A3807C03E3803F0FC3800FFF0EB3FC01C2D7DAB23>48
D<130C133C137CEA03FC12FFEAFC7C1200B3B113FE387FFFFEA2172C7AAB23>I<EB7F80
3801FFF0380780FC380E003F48EB1F8048EB0FC05A0060EB07E012F000FC14F07E1403A3
007C1307C7FCA215E0140F15C0141F1580EC3F00147E147C5C495A495A495A495A011EC7
FC5B5B4913305B485A4848136048C7FC000E14E0001FB5FC5A4814C0B6FCA21C2C7DAB23
>I<EB3FC03801FFF03807C0FC380E007E487FEC1F80003F14C0A2EB800F1300A2000C13
1FC7FC1580A2EC3F00143E5C5CEB03F0EBFFC014F0EB00FC143FEC1F8015C0140F15E0A2
EC07F0A21238127C12FEA3EC0FE012F8006014C00070131F6C1480001EEB3F00380780FC
3801FFF038007FC01C2D7DAB23>I<140EA2141E143EA2147E14FEA2EB01BE1303143E13
06130E130C131813381330136013E013C0EA0180120313001206120E120C5A123812305A
12E0B612FCA2C7EA3E00A9147F90381FFFFCA21E2D7EAC23>I<000CEB0180380FC01F90
B512005C5C14F014C0D80C7EC7FC90C8FCA8EB1FC0EB7FF8380DE07C380F801F01001380
000E130F000CEB07C0C713E0A2140315F0A4127812FCA448EB07E012E0006014C0007013
0F6C14806CEB1F006C133E380780F83801FFE038007F801C2D7DAB23>I<1230123C003F
B512F8A215F05A15E039700001C000601480140348EB0700140E140CC7121C5C14301470
5C495AA2495AA249C7FCA25B130E131EA2133EA3133C137CA413FCA913781D2E7CAC23>
55 D<007FB712F8B812FCA2CBFCADB812FCA26C16F82E137C9937>61
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmmi12 12 22
/Fh 22 121 df<EC07F8EC3FFE9138FC0F80903903E003C049486C7E011FC76C1308013E
6E131849147C5B0001157E4848023E13305B0007033F1360485AA2001F17C05B003FEE01
8090C8FC48EE0300A2170612FE5F5FA2485E5F5FA25F94C7FCA4127CEEFF806CDA01DF13
20DB071F13606CEC0E0F6C027814C03A078001F0073C03E01F8003C3803C00FFFE0001FF
00D93FE0EB007C352D7BAB3E>11 D<177F0120913803FF8001604A13E049021F13F04C13
F84848EC7F0148C838F8007C4C133C0006DA01C0131C4B48131E484AC7120E150648140E
150C4B14065A5D180E484A140CA2154015C04B14185A020115307E92C812704A15600060
17C0170100700106EC03800030EE070000385E003C010E141E6C5E6C010C14F82607C01C
EB03F001F0EC0FE0D803FEEC3F802800FFFC03FFC7FC6DB55A6D14F8010F14E001011480
9026007FF8C8FC0278C9FC5CA31301A3495AA31307A25CA2130FA35C6DCAFC37407BAB40
>39 D<121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A0A78891B>58
D<121E123FEA7F80EAFFC0A313E0127FEA3F60121E1200A513C0A4EA0180A2EA0300A212
065AA25A5A12200B1D78891B>I<F001C0F007E0181FF07FC0943801FF00EF07FCEF1FF0
EF7FC04C48C7FCEE0FFCEE3FF0EEFFC0030390C8FCED0FF8ED3FE0EDFF80DA03FEC9FCEC
1FF8EC7FE0903801FF80D907FECAFCEB1FF0EB7FC04848CBFCEA07FCEA1FF0EA7FC048CC
FCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FE903801FF809038007FE0EC1F
F8EC03FE913800FF80ED3FE0ED0FF8ED03FF030013C0EE3FF0EE0FFCEE01FF9338007FC0
EF1FF0EF07FCEF01FF9438007FC0F01FE01807F001C03B3878B44C>I<127012FCB4FCEA
7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB07FE903801FF809038007FE0EC1FF8EC03
FE913800FF80ED3FE0ED0FF8ED03FF030013C0EE3FF0EE0FFCEE01FF9338007FC0EF1FF0
EF07FCEF01FF9438007FC0F01FE0A2F07FC0943801FF00EF07FCEF1FF0EF7FC04C48C7FC
EE0FFCEE3FF0EEFFC0030390C8FCED0FF8ED3FE0EDFF80DA03FEC9FCEC1FF8EC7FE09038
01FF80D907FECAFCEB1FF0EB7FC04848CBFCEA07FCEA1FF0EA7FC048CCFC12FC12703B38
78B44C>62 D<ED7FC0913803FFF8020F13FE91381F807F91393C000F800270EB07E002C0
6D7E4948130101036E7E91C8127CD907C0147E80496C80A34AEC1F806D5A6D5A90C9FC18
C0A7DA01FE133F91381FFFC091387F01E0903901F80030D903E01318D90FC0010C138049
C7EA067F133E49140313FC4848EDFF00485A1207485A5F485AA2003F5E5B127F4C5AA248
C85BA24C5AA2485E161F5F163F94C7FC167EA2007E5D4B5A6C5D4B5A6C4A5A6C6CEB1F80
6D49C8FC6C6C13FE3903F807F8C6B512E0013F1380D90FFCC9FC32477CC533>64
D<1860187018F01701A21703A21707170F84171FA217371767A217C7A2EE0187EE030784
1606EE0E03160C1618A216301670166016C084ED01800303130116001506A25D151C1518
4B80A25D03E07F5D4A5A92B7FC5C5C0206C8FC4A82A25C0238157F14305CA25C13015C49
C97FA20106163F130E130C131C133C01FC167FD803FF4B487E007F01E0023FEBFFC0B56C
5C6C5B42467DC549>I<027FB812F891B912FC80020001C0C7EA3FF86F48140319004BC9
FC1A78A21A384A5AA31A304A5AA44A5A18C0A21A204A4849481300A317034A4891C8FC5F
A2171F4A48137E92B512FEA391397F8000FC173C171CA24AC71218A449484A5B61A20520
1306494891C7FC61A2191C494816181938193019704948166019E0A24E5A494815034E5A
180F181F4948037FC7FCEF03FF01FFED3FFE007F90B7FCB95AA246447CC348>69
D<027FB812F091B912F880020001C0C7EA3FF06F48140719014BC9FCA31A704A5AA31A60
4A5AA44A5AA2847213404A4849481300A317034A4891C8FCA25F5F4A48131E17FE92B5FC
A24A5CED8000173CA24AC71218A3173849481430A44948142094C9FCA3495AA4495AA449
5AA4495AA2EBFFE0007FEBFFF8B6FCA245447CC33F>I<027FB512F017F817F09139007F
F000ED3FC0A24B5AA44BC7FCA44A5AA44A5AA44A5AA44A5AA44A5AA44A5AA44A5AA44AC8
FCA4495AA4495AA4495AA4495AA4495AA2EB7FF0007FB512F0B6FC7E2D447DC32B>73
D<027FB612FE91B812E06E16F802009039C0000FFE6F48EB01FF9538007F804BC8EA3FC0
F11FE0A2F10FF04A5AA21AF8A24A5AA44A48ED1FF0A3F13FE04A5A1AC0197F1A804A48ED
FF004E5A4E5A4E5A4A484A5AF03FC006FFC7FCEF07FC4AB612F018800380CAFCA24ACBFC
A4495AA4495AA4495AA4495AA4495AA4495AA2EBFFE0007FEBFFC0B67E5D45447CC33F>
80 D<023FB500C090381FFFFE4A5E80020001FCC7000713C0DB3FF0913803FC004CEC01
F0626F6CEC038097C7FC6F6C140661705C03071538616F6C5C4E5A6F6C495A96C8FC1806
6F6D5A60706C5A606093383FE18017E3DC1FF7C9FC17FE5F705AA2707EA3707E1607EE0D
FF161904387F5E5E4B486C7EED03804B486C7E15065D4B6D7E5D4B6D7E5D4A5A4AC76C7E
5C020E6E7E5C5C4A6E7E14604A6E7F495A1303010FC96C7E5B017F4C7E2607FFC002037F
B500F8021FEBFFE05F5C4F447DC351>88 D<EC0FC0EC7FE0903901F03038903903C0187C
903907800CFC90381F0006013EEB07F8491303A25B00015D485AA2485A000F4A5A5B121F
A249495A123FA348C7485AA4007E4AC7FCA212FE1720037E1360A2127EA24B13C0A2003E
13010203EB0180EC067C6C010CEB03006CEB183C2607807013063A03C1E01E1C3A01FF80
0FF83A007E0003E02B2D7CAB33>97 D<EB0FE0EA07FFA25CEA001F130FA2495AA449C8FC
A4137EA45BA4485AA2EC0FC0EC7FF03903F0F0789038F1803C9038F3001E01F6131F4848
7F01F814805B4914C0120F5BA3485AA448C7121FA4007EEC3F80A31600007C5CA200FC14
7E15FE5DA2007C495AA24A5A5D4A5A003C495A92C7FC6C131E000E5B000F13F8380783E0
3801FFC0D8007EC8FC22467CC429>I<EC07F0EC3FFEECF80F903903E0018090390F8000
C049C71260013E14E049EB03F04913070001140F4848EB1FE05B0007EC0FC04848EB0780
92C7FC121F5B123F90C9FC5AA312FEA45AA616201660A2007C15C0ED01806CEC0700150E
001E14186C147039078003E03903E01F802600FFFCC7FCEB3FE0242D7BAB2A>I<EE03F8
ED01FFA217F0ED00071603A2EE07E0A4EE0FC0A4EE1F80A4EE3F00A4167EA2EC0FC0EC7F
E0903901F030FC903803C018903807800C90381F0006013EEB07F8491303A25B00015D48
5AA2485A000F4A5A5B121FA249495A123FA348C7485AA4007E4AC7FCA212FE1720037E13
60A2127EA24B13C0A2003E13010203EB0180EC067C6C010CEB03006CEB183C2607807013
063A03C1E01E1C3A01FF800FF83A007E0003E02D467CC433>I<EC0FF0EC7FFC903801F8
1E903807E00790390F800380EB1F00017E13014914C0485A5B0003EC0380485A120F49EB
0700001F140E495B003F1478EC03F0397F007FC0D9FFFEC7FC14C090C9FC12FEA65AA416
20007C1560A2007E15C0003EEC0180ED0700001E140E6C1418157039078003E03903E01F
802600FFFCC7FCEB3FE0232D7BAB2D>I<EE07E0EE1FF8EE3C1CEE7006EEE03E0301137F
030313FF4B5AEEC1FEA292380FC0FC1778EE8000151FA44BC7FCA5157EA591B612805B6D
1500DA00FCC7FCA34A5AA54A5AA64A5AA54A5AA54A5AA64AC8FCA4143E147EA4147C14FC
A25CA313015CA2001C5BEA3E03127F00FF5B5CEAFE0700FC90C9FCEAF80EEA601CEA3838
EA1FF0EA07C0305A7BC530>I<01FCEB03F8486CEB1FFE3B0307803C0F8000069138E007
C03A0C03C1C0030018D9E3007F14E683003013EC14F8495A12605CA2484848495AA21200
A24948495AA34C5A49C7FCA24CC7FCA2137E167EA21820494A1360A34B4813C0485AA293
38F00180EF0300485A17065F03005B4848EC78700003ED3FE06C48EC0F80332D7DAB3A>
110 D<01FCEB0FC0486CEB3FF03A030780F0380006903881C07C3A0C03C300FC0018EBE6
01ECEC03A2003013F89138F001F80107EB00E00060491300A348485AA21200A2495AA449
C8FCA4137EA45BA4485AA4485AA4485A12036C5A262D7DAB2C>114
D<02FCEB07E0D903FFEB1FF8903A0703C0381E903A1C01E0601F01389038F0C03F903A60
00F1807F499038FB00FFA2484813FE48C7147E4B133800061600A348495AA2C7FCA24A5A
A44A5AA44A5AA317104A481330A31760001E133F003F16C0EA7F80026FEB018026FF00CF
EB030002C71306267E01875B3A7C0303C0183A3C0E01E0703A1FFC00FFE0D803F0EB3F80
302D7EAB37>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmtt12 12 64
/Fi 64 126 df<00085B003EEB07C0007FEB0FE0A24814F0A26C14E0B3A2007E1307003E
14C0A20008EB01001C1E75BD33>34 D<EB03E0EB0FF8497E497E497E90B5FC9038FE3F80
3801FC1F13F8000380EBF00FA7141F5D91393F87FFE001F84913F00001137F147E14FE90
26F9FC0713E001FF903801F8006C13F8ECF00302E05B1507D97FC05B14809038FF000F48
5D148048141F4801C05B5A391FEFE03FD83FC791C7FC903887F07FD87F03137EECF8FE6D
6C5A12FEEB00FF6E5AA291393FF00180EE03C091391FE007E0140F6CEB1FF06C133FEC7F
F8903980FFFE0FD83FC301FF13C0D9FFFC13FF6C496C13806C497E6CD9E00F13006C9038
8007FE3A00FE0001F82C3F7DBD33>38 D<140FEC3F80147F14FF491300495AEB07F8495A
495A495A495A49C7FC5B12015B485A12075B120F5B121F5BA2123F5BA2127F90C8FCA45A
5AAD7E7EA47F123FA27F121FA27F120F7F12077F12036C7E7F12007F6D7E6D7E6D7E6D7E
6D7EEB03FE6D7E6D1380147F143FEC0F00194D6FC433>40 D<127812FE7E7F6C7E6C7EEA
0FF06C7E6C7E6C7E6C7E6D7E133F80131F6D7E801307801303801301A2801300A28080A4
1580143FAD147F1500A45C5CA213015CA213035C13075C130F5C495A133F5C137F49C7FC
485A485A485A485AEA3FE0485A485A90C8FC5A1278194D78C433>I<14F0497EA8007015
E000F8EC01F000FE140700FF140F01C1133F01F113FF263FF9F913C0000FB61200000314
FCC614F06D5B011F1380D907FEC7FC90381FFF80017F13E090B57E000314FC000F14FF26
3FF9F913C026FFF1F813F001C1133F0101130F00FE140700F814010070EC00E000001500
A86D5A242B79B333>I<141FA24A7EB0007FB71280A2B812C0A36C1680A2C7D83F80C7FC
B06EC8FCA22A2B7CB333>I<EA07C0EA0FF0EA1FF8123F13FCA213FEA2121F120F1207EA
007E13FEA213FC1201EA03F81207EA0FF0EA7FE012FF13C013005A12780F196E8A33>I<
007FB612FEA2B8FCA36C15FEA228077BA133>I<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA
3F80EA1F000B0B6C8A33>I<167816F8ED01FCA21503A2ED07F8A2ED0FF0A2ED1FE0A216
C0153FA2ED7F80A2EDFF00A24A5AA25D1403A24A5AA24A5AA24A5AA25D143FA24A5AA24A
C7FCA2495AA25C1303A2495AA2495AA25C131FA2495AA2495AA249C8FCA25B1201A2485A
A2485AA2485AA25B121FA2485AA2485AA248C9FCA25AA2127CA2264D7AC433>I<14FF01
0313C0010F13F0497F497F497F9038FF81FF3A01FE007F804848EB3FC049131F4848EB0F
E0A24848EB07F0A24848EB03F8A24848EB01FCA348C812FEA4007E157E00FE157FAE6C15
FF6C15FEA46D1301003F15FCA26D1303001F15F8A26C6CEB07F0A26C6CEB0FE06D131F6C
6CEB3FC0A26CB4EBFF806C018113006DB45A6D5B6D5B6D5B010313C0010090C7FC283F7B
BD33>I<EB01E0497EA21307A2130FA2131F133F137F13FF1203123F5AEAFFF713E71387
EA7E071200B3B3A2003FB512FE48801680A216006C5C213E76BD33>I<EB03FF011F13E0
017F13FC48B57E48ECFF804815C0260FFE0313E03A1FF0007FF049EB1FF84848130F49EB
03FC127F90C7EA01FE4814005A6C15FF167FA3127E123CC9FCA216FF16FEA2150116FC15
0316F81507ED0FF0ED1FE0153F16C0ED7F80EDFF004A5AEC07FC4A5A4A5A4A5A4A5A4A5A
4990C7FC495AEB07F8EB1FF0495A495A495A4890C8FC4848143E4848147FEA0FF0485A48
B7FCB8FCA37E6C15FE283E7BBD33>I<903801FFC0010F13F8013F13FF90B67E48814881
489038807FF03A0FFC000FF801F06D7E484813036F7EA21500A26C5A6C5AC9FC15015EA2
15034B5A150F4B5A4B5A913803FFC00103B55A4991C7FC5D8116C06D8090C76C7EED0FF8
ED03FC6F7E6F7E821780163FA2EE1FC0A3123C127EB4FCA2163F1780167F6C16006D5C6D
495A6C6C1303D81FF8EB0FFC3A0FFF807FF86C90B55A6C5D6C15806C6C91C7FC010F13FC
010113C02A3F7CBD33>I<15FF4A7F5C5CA25C5C15DFEC3F9FA2EC7F1F14FEA2EB01FCA2
EB03F8EB07F0A2EB0FE0EB1FC0A2EB3F80A2EB7F0013FEA2485A12035B485AA2485A485A
A2485AA248C7FC12FEB812E017F0A46C16E0C8381F8000AC021FB512804A14C04A14E0A2
6E14C06E14802C3E7DBD33>I<0007B612F04815F85AA316F001C0C8FCB0ECFFC001C713
F801DF7F90B6FC168016C0028013E09039FC001FF001F0EB0FF849130749EB03FC6C4813
016CC713FEC9FCA216FF167FA41218127EA2B415FF16FEA24814016C15FC6C14036DEB07
F86D130F6C6CEB1FF06C6CEB7FE09039FE03FFC06CB612806C150000015C6C14F8013F13
E0010390C7FC283E7BBC33>I<127CB8128017C0A4178048C813004B5A4B5A007C4A5AC8
485A5E151F4B5A4B5A93C7FC5D5D4A5A14035D14075D140F5D141F5D143F5DA24AC8FCA2
5C5CA213015CA3495AA413075CA5130F5CAA6D5A6D5A2A3F7CBD33>55
D<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F00C7FCB3A3121FEA3F80EA7FC0EAFF
E0A5EA7FC0EA3F80EA1F000B2B6CAA33>58 D<EA07C0EA0FE0EA1FF0EA3FF8A5EA1FF0EA
0FE0EA07C0C7FCB3A3EA07C0EA0FE0EA1FF0EA3FF8A213FCA3121F120F12071200A21201
13F81203EA07F0120FEA1FE0127FEAFFC01380130012FC12700E396EAA33>I<1608163E
16FF5D15075DED3FFEED7FFC913801FFF0020713E04A1380023F1300EC7FFC49485A4913
E0010F13804990C7FCEB7FFC495A000313E0485B001F90C8FCEA7FFE13F8485A13C013F0
6C7E13FEEA1FFF000713C06C7FC613F86D7EEB1FFF6D7F010313E06D13F86D6C7E6EB4FC
020F13806E13E0020113F09138007FFCED3FFEED0FFF81150181163E160828337BB733>
I<007FB71280A2B812C0A36C16806C1600CBFCA9003FB7FC481680B812C0A36C1680A22A
177CA933>I<1210127CB4FC7F13E07FEA7FFC6C7E380FFF806C13E000017F6C13FCEB3F
FE6D6C7E01077F010113F06D7FEC3FFE6E7E020713C06E13E0020013F8ED7FFE151FED0F
FF1503150FED1FFE157FEDFFF8020313E04A13C0021F13004A5AECFFF8495B010713C001
1F5B4948C7FCEBFFFC4813F000075B481380D83FFEC8FC485AEAFFF05B138090C9FC127C
121028337BB733>I<EC1F804A7E4A7EA34A7EA314F901017FA501037FA214F0A201077F
A4ECE07E010F137FA449486C7EA549486C7EA4017F80EC000FA291B5FCA290B67EA43A01
FE0007F8491303A4000381491301A3000781491300D87FFF90380FFFE0B56C4813F06E5A
A24A7E6C496C13E02C3E7DBD33>65 D<007FB512F8B7FC16C082826C813A03F8000FFCED
03FE15016F7E82A2EE3F80A7EE7F00A25E4B5AA2ED07FCED1FF890B65A5E1680828216F8
9039F8000FFCED01FE6F7EEE7F80163F17C0161FA2EE0FE0A7161F17C0A2163FEE7F8016
FF4B1300150F007FB65AB75A5E16E05E6C4AC7FC2B3D7DBC33>I<91391FE00780DAFFFC
13C00103EBFF0F010F148F4914FF5B90387FF81F9038FFC00748497E4848487E497F485A
167F485A49143F121F5B003F151F5BA2127F90C8EA0F8093C7FCA25A5AAD7E7EA36DEC0F
80003FED1FC0A27F121F7F000F153F6D15806C7E167F6C6CECFF007F3A01FF8003FE6C6D
485A90397FF81FF86DB55A6D5C6D5C010391C7FC010013FCEC1FE02A3F7CBD33>I<003F
B712E04816F0B8FCA27E7ED801FCC71207A8EE03E093C7FCA7151F4B7EA490B6FCA69038
FC003FA46FC7FC92C8FCB1383FFFF8487FB57EA26C5B6C5B2C3D7DBC33>70
D<003FB612804815C0B712E0A26C15C06C1580260003F8C7FCB3B3AD003FB612804815C0
B712E0A26C15C06C1580233D78BC33>73 D<387FFFF8B57E80A25C6C5BD801FCC9FCB3B3
A3EE03E0EE07F0A9007FB7FCB8FCA46C16E02C3D7DBC33>76 D<003FB512FC48ECFF80B7
12E016F86C816C813A01FC000FFF030313801500EE7FC0163FEE1FE0160FA217F01607A6
160F17E0A2161FEE3FC0167FEEFF801503030F130090B65A5E5E16E0168003FCC7FC01FC
C9FCB3383FFFE0487FB57EA26C5B6C5B2C3D7EBC33>80 D<90381FFFF890B6FC000315C0
000F15F0A24815F83A3FFC003FFC01F0130F01C013034848EB01FEA290C8FCA54815FF48
157FB3AA143F6C90387F80FF6C15FEEC3FC0A2EC1FE0A29038800FF1A23A3FC007FBFC01
F013FFEBFC036CB612F86C15F0A2000315C0C61500011F148090C7EA7FC0153F16E0151F
16F0150F16F8150716FC150316FE1501ED00FC284C7BBD33>I<007FB57EB612F815FE81
826C812603F8007FED3FF0ED0FF815076F7E1501A26F7EA74B5AA215034B5A150FED3FF0
EDFFE090B65A5E93C7FC5D8182D9F8007F153F6F7E150F821507AA173E177FA416F80303
13FF267FFFC014FEB538E001FF17FC81EE7FF86C49EB3FF0C9EA0FC0303E7EBC33>I<3A
3FFF807FFF486DB51280A46C496C13003A01FE000FE0151F6C7E4B5AEB7F805E90383FC0
7F93C7FC6D6C5A5DEB0FF15DEB07FB5DEB03FF5D7F5D7F5D147F6E5AA34A7EA24A7E815B
81EB03FB81EB07F181EB0FE081011F7F02C07F013F133F02807F017F131F02007F49130F
49801507000181491303000381491301D87FFF90380FFFE0B56C4813F05DA2816C496C13
E02C3D7DBC33>88 D<007FB512C0B612E0A415C048C8FCB3B3B3ABB612C015E0A46C14C0
1B4D6CC433>91 D<127CA212FEA27EA26C7EA26C7EA26C7EA2120F7FA26C7EA26C7EA26C
7EA212007FA26D7EA26D7EA26D7EA2130F80A26D7EA26D7EA2130180A26D7EA26E7EA26E
7EA2141F81A26E7EA26E7EA26E7EA2140181A26E7EA2ED7F80A2ED3FC0A2151F16E0A2ED
0FF0A2ED07F8A2ED03FCA21501A2ED00F81678264D7AC433>I<007FB512C0B612E0A47E
C7120FB3B3B3AB007FB5FCB6FCA46C14C01B4D7DC433>I<EB01C0EB07E0EB1FF8EB7FFE
48B51280000714E0001F14F8393FFE7FFC39FFF81FFF497EEBC00390C7FC007E147E0038
141C200E77BC33>I<007FB612FEA2B8FCA36C15FEA228077B7D33>I<EB1FFC90B57E0003
14E048804814FC48809038F007FFEBE0016E7F153F6C48806C48131FC87F150FA5EC0FFF
49B5FC131F137F48B6FC0007140F4813C0381FFC00EA3FF0EA7FC05B48C7FC5AA56C141F
7E6D137FD83FE0497ED9F807EBFFF06CB712F87E6C14F36C14C1C69138003FF0D91FF090
C7FC2D2E7BAC33>97 D<EA3FFC487E12FFA2127F123F1200ABEC01FE91380FFFC04A13F0
027F7F91B512FE90B7FCECFE07DAF800138002E0EB7FC04AEB3FE04A131FEE0FF091C7FC
16074915F81603A217FC1601A9160317F8A26D140717F06E130F17E06E131FEE3FC06E13
7F9139F801FF80DAFE07130091B55A495C6E5BD97E3F13E0D93C0F138090260003FEC7FC
2E3E7FBC33>I<ECFFF0010713FE011FEBFF804914C04914E048B612F048EBC01F9038FE
000F485A485A4848EB07E049EB03C0484890C7FC5BA2127F90C9FCA25A5AA97E7EA27F00
3FEC01F06DEB03F86C7E6D13076C6C14F06C6C130F01FFEB1FE06CEBE07F6C90B512C06C
1580013F14006D13FC01075B010013C0252E79AC33>I<ED7FF84B7E5CA280157F1501AB
EB01FF010713C1011F13F1017F13F990B6FC5A4813813907FE003FD80FF8131F49130F48
481307491303123F491301127F90C7FCA25A5AA97E7E15037F123F6D1307A26C6C130F6D
131F6C6C133F6C6C137F2603FF81B512F091B612F8C602FD13FC6D13F96D01E113F8010F
018013F0D901FEC8FC2E3E7DBC33>I<ECFF80010713F0011F13FC497F90B6FC48158048
018013C03A07FE003FE001F8EB0FF048481307484814F8491303003F15FC491301127F90
C7FC16FE15005A5AB7FCA516FC48C9FC7E7EA36C7E167C6C6C14FE7F6C7E6D13016C6CEB
03FC6CB4130F6C9038C03FF86C90B512F06D14E06D14C0010F1400010313FC9038007FE0
272E7BAC33>I<ED3FE0913801FFFC020713FE141F4A13FF5CECFFC015004948137E4A13
3C010314005CA8003FB612F84815FCB7FCA36C15F8260003F8C7FCB3AD003FB612804815
C0A46C1580283E7DBD33>I<D901FEEB1FE0903A0FFFC0FFF0013F01F313F84990B512FC
90B7FC5A48010313E12607FC00EB80F849017F1360484890383FC00049131FA2001F8149
130FA66D131F000F5DA26D133F6C6C495A6D13FF2603FF0390C7FCECFFFE485C5D5DD80F
CF13C0D981FEC8FC0180C9FCA27FA26C7E7F90B512FC6CECFFC06C15F0000715FC4815FF
4816809038E0000748489038007FC090C8EA1FE048150F007E150700FE16F0481503A56C
1507007E16E0007F150F6C6CEC1FC001E0147FD81FF8903801FF80270FFF801F13006C90
B55A6C5DC615F0013F14C0010F91C7FC010013F02E447DAB33>I<EA3FFC487E12FFA212
7F123F1200AB4AB4FC020713C0021F13F0027F7F91B5FC90B67EED07FEECF801ECF0004A
7F4A7F5CA291C7FCA35BB3A43B3FFFF80FFFFC486D4813FEB56C4813FFA26C496C13FE6C
496C13FC303D7FBC33>I<14E0EB03F8A2497EA36D5AA2EB00E091C8FCAA383FFFF8487F
A47EEA0001B3AD007FB612C0B712E016F0A216E06C15C0243E78BD33>I<1570EC01FCA2
EC03FEA3EC01FCA2EC00701500AA90383FFFFC4913FE90B5FCA27F7F90C7FCB3B3A91401
15FCA21218007EEB03F81407B414F0140F9038803FE090B512C06C14806C14006C5B6C13
F8000113E01F557BBD33>I<383FFFFC487FB5FCA27E7EC7FCB3B3AD003FB612F84815FC
B712FEA26C15FC6C15F8273D7ABC33>108 D<02FC137E3B7FC3FF01FF80D8FFEF01877F
90B500CF7F15DF92B57E6C010F13872607FE07130301FC01FE7F9039F803FC01A201F013
F8A401E013F0B3A53C7FFE0FFF07FF80B548018F13C0A46C486C01071380322C80AB33>
I<4AB4FC263FFC0713C0267FFE1F13F000FF017F7F91B5FC6CB67E6CEC07FEC6EBF801EC
F0004A7F4A7F5CA291C7FCA35BB3A43B3FFFF80FFFFC486D4813FEB56C4813FFA26C496C
13FE6C496C13FC302C7FAB33>I<EB01FE90380FFFC0013F13F0497F90B57E488048EB03
FF2607FC0013804848EB7FC049133F4848EB1FE049130F4848EB07F0A2007F15F890C712
03A300FEEC01FCAA6C14036C15F8A26D1307003F15F06D130FA26C6CEB1FE06D133F6C6C
EB7FC06C6CEBFF802603FF0313006CEBFFFE6C5C6D5B6D5B010F13C0D901FEC7FC262E7A
AC33>I<EC01FE3A3FFC0FFFC0486C4813F000FF017F7F91B512FE6CB7FC6CEBFE07C6D9
F800138002E0EB7FC04AEB3FE04A131FEE0FF091C7FC16074915F81603A217FC1601A916
0317F8A26D140717F06E130F17E06E131FEE3FC06E137F9139F801FF80DAFE07130091B5
5A495C6E5B6E13E0020F1380DA03FEC7FC91C9FCAF383FFFF8487FB57EA26C5B6C5B2E42
7FAB33>I<02FF137C0107EBE0FE011F13F0017F13FC90B512FE4814FF4813C03907FE00
3F4848131F01F0130F484813071503485A491301127F90C7FC15005A5AA97E7E15017F12
3F6D130315076C7E6C6C130F6D131FD807FE137F3903FF81FF6CEBFFFE6C14FC6D13F86D
13F0010F13C0903801FE0090C8FCAF92387FFFFC92B512FEA46F13FC2F427CAB33>I<ED
03FE3B7FFF801FFF80B5D8C07F13E002C1B5FC02C314F014C76C9038CFFE0F39001FDFF0
9139FFC007E092388003C092C8FC5C5C5CA25CA25CA35CB2007FB512FEB7FCA46C5C2C2C
7DAB33>I<90381FFE0F90B5EA8F80000314FF120F5A5AEBF007387F800190C7FC00FE14
7F5A153FA37E007FEC1F0001C090C7FCEA3FF8EBFFC06C13FF6C14E0000314F8C680011F
13FF01001480020713C0EC007FED1FE0007C140F00FEEC07F01503A27EA27F15076D14E0
6D130F6DEB3FC09038FE01FF90B61280160000FD5C00FC14F8D8F83F13E0D8780790C7FC
242E79AC33>I<EB03C0497E130FAA003FB612FC4881B7FCA36C5D26000FE0C8FCB3A316
1FEE3F80A5167F6E140001075C6E5A9138FE07FE6DB55A6D5C6D5C6E5B021F1380DA07FC
C7FC29387EB633>I<D83FFCEB1FFE486C497E00FF5CA2007F80003F800000EC007FB3A7
5EA25DA26D5B90387F800FDAE03F13FC6DB612FE17FF6D806D01FE13FE01039038F83FFC
010001C0C7FC302C7FAA33>I<3B3FFFC00FFFF0486D4813F8B56C4813FCA26C496C13F8
6C496C13F0D801F8C7EA7E006D14FE00005DA26D1301017E5CA2017F13036D5CA2EC8007
011F5CA2ECC00F010F5CA36D6C485AA3ECF03F010391C7FCA26E5A0101137EA2ECFCFE01
005BA214FF6E5AA36E5AA26E5A6E5A2E2B7EAA33>I<3B7FFF8007FFF8B56C4813FC6E5A
A24A7E6C496C13F8D80FC0C7EA0FC06D141F00071680A56D143F00031600A3EC0FC0EC1F
E0A23A01F83FF07EA3EC7FF8147CA20000157C9039FCFCFCFCA3ECF87CA2017C5C017D13
7EECF03EA2017F133FA26D486C5AA3ECC00F90390F8007C02E2B7EAA33>I<3B3FFFC07F
FF80486DB512C0B500F114E0A26C01E014C06C496C13803B00FE000FE000017F495AEB3F
804B5A6D6C48C7FC90380FE07E903807F0FEECF1FC903803FBF8EB01FF6D5B5D6E5A143F
6E5A143F814A7E14FF903801FBF0ECF9F8903803F1FCEB07E0157E90380FC07F011F6D7E
90383F801F02007F496D7E01FE6D7E484813033B7FFFC03FFFE0B56C4813F0A46C496C13
E02C2B7DAA33>I<3B7FFF801FFFE0B56C4813F06E4813F8A24A6C13F06C496C13E0D803
F8C7EAFC00000114015E7F000014036D5C137EA2017F495A7FA26E485A131FA26D6C485A
A214E0010749C7FCA214F01303157EEB01F8A2157C010013FC14FC5D147C147DEC3FF0A3
6E5AA36E5AA2141F5DA2143F92C8FCA3147EA214FE003F5B1301387F81F81383EB87F013
9FEBFFE06C5B5C6C90C9FCEA0FFCEA03F02D427DAA33>I<000FB712804816C05AA31780
0180C713004B5A4B5A4B5A4B5A6CC7485AC8485A4B5A4BC7FC4A5A4A5A4A5A4A5A4A5A4A
5A4A5A4AC8FC495A495A495A495A495A495A495A49C7EA0F804848EC1FC0485A485A485A
485A485A48B7FCB8FCA46C16802A2B7DAA33>I<ED07FEED7FFF4AB5FC14075C4A13FE91
383FFE0015E0EC7F8092C7FCB3A45C495A1303EB1FFCEA3FFFB55A14E05C8014F8003F7F
EA001FEB03FE13016D7E80B3A481EC3FE015FE91381FFFFE6E13FF8014016E7EED07FE28
4D7BC433>I<EA7FF0B5FC14C014F0806C7F38003FFE1303EB00FF80B3A4816E7E81EC1F
FCEDFFFC6E13FF1403805C140F4A13FCEDFC00EC3FE05D4A5A92C7FCB3A45CEB03FE133F
387FFFFCB55A5C14C091C8FCEA7FF0284D7BC433>125 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmmi8 8 5
/Fj 5 115 df<124012F012FC127FEA1FC0EA07F0EA01FCEA007FEB1FC0EB07F0EB01FC
EB007FEC1FC0EC07F0EC01FCEC007FED1FC0ED07F0ED01FCED007FEE1FC01607161FEE7F
00ED01FCED07F0ED1FC0037FC7FCEC01FCEC07F0EC1FC0027FC8FCEB01FCEB07F0EB1FC0
017FC9FCEA01FCEA07F0EA1FC0007FCAFC12FC12F012402A2B7AA537>62
D<1307EB0F80EB1FC0A2EB0F80EB070090C7FCA9EA01E0EA07F8EA0E3CEA1C3E12381230
1270EA607EEAE07C12C013FC485A120012015B12035BA21207EBC04014C0120F13801381
381F01801303EB0700EA0F06131EEA07F8EA01F0122E7EAC18>105
D<15E0EC01F01403A3EC01C091C7FCA9147CEB03FE9038078F80EB0E07131C013813C013
30EB700F0160138013E013C0EB801F13001500A25CA2143EA2147EA2147CA214FCA25CA2
1301A25CA21303A25CA2130700385BEAFC0F5C49C7FCEAF83EEAF0F8EA7FF0EA1F801C3B
81AC1D>I<3907C007E0391FE03FF83918F8783E393879E01E39307B801F38707F001260
13FEEAE0FC12C05B00815C0001143E5BA20003147E157C5B15FC0007ECF8081618EBC001
15F0000F1538913803E0300180147016E0001F010113C015E390C7EAFF00000E143E251F
7E9D2B>110 D<3807C01F390FF07FC0391CF8E0E0383879C138307B8738707F07EA607E
13FC00E0EB03804848C7FCA2128112015BA21203A25BA21207A25BA2120FA25BA2121FA2
90C8FC120E1B1F7E9D20>114 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmbx12 17.28 10
/Fk 10 121 df<16F04B7E1507151F153FEC01FF1407147F011FB5FCB7FCA41487EBE007
C7FCB3B3B3B2007FB91280A6395D74DC51>49 D<913801FFF8021FEBFFC091B612F80103
15FF010F16C0013F16F09026FFF80180489026C0003F13FE4890C7000F7FD807FC020314
8048486E14C048486E14E04981D83FF86F13F001FE6F13F8487E6E6E13FC80B56F13FE80
A319FF83A26C5BA26C5BA26C90C8FCEA07FCD800E04B13FE90C9FCA219FC5FA219F85F19
F04D13E0A24D13C0198094B512004C5B604C5B4C5B4C5B604C90C7FC4C5A4C5A4C5A4B13
E04B5B4B5B4CC8FC4B5A4B5AED3FE04B48143F4B5A4A90C8FC4A5ADA07F8157E4A5A4A5A
4A5A4A5A02FEC912FE495A495A4948ED01FC4948150749B8FC5B5B90B9FC5A4818F85A5A
5A5A5AA2BAFC19F0A4405D78DC51>I<ED7FFE0207B512F8023F14FF49B712C04916F001
0FD9800F13FC90271FF800037FD97FE001007FD9FF806E7F49C86C7F486C834801C06E7F
80486D826E80804884A3805CA27EA24A4A5B6C5B6C5B6C6C485E011EC85A90C95CA24D5B
6194B5FC96C7FC4C5B4C13F84C5B4C5B043F1380922607FFFEC8FC020FB512F817E094C9
FC17F817FF91C7001F13E0040313F8040013FE717E7113C0717F85717F858385A285831A
80A31AC0EA03FCEA0FFF487F487FA2487FA2B57E1A80A34D1400A25C6C604A5C6C6091C8
485B6C5A01F04B5BD80FFC4B5B6CB492B55A6C01E0010391C7FC6C01FF011F5B6C6C90B6
5A011F16F0010716C001014BC8FCD9001F14F0020049C9FC425E79DC51>I<F01F804E7E
187F18FF5FA25F5F5FA25F5F5F94B5FCA25E5E5E5EA25EEE3FBFEE7F3F16FE16FC1501ED
03F8ED07F0ED0FE016C0151FED3F80ED7F0015FE5D14014A5A4A5A4A5A5D141F4A5A4AC7
FC14FE5C1301495A495A495A5C131F495A49C8FC13FE5B1201485A485A485AA2485A485A
48C9FC12FEBCFCA6CA6CEBC000B1037FB8FCA6485D7CDC51>I<BD12FCA488A2D8000102
C0C71201F1000F1A01F2007F1B3F1B0F1B07757EA28787A288A3F43F80A31C1FA3197EA3
F40FC0A499C7FC19FEA31801A218031807181F18FF93B6FCA6EEC000181F180718031801
A21800A21D7E197EA21DFCA696C812011DF8A31C03A3F407F0A31C0FA21C1F1C3F1DE01C
7F1CFF63631B0F093F13C098B5FC1A0797B6FCBEFCA31D80A35F617AE06A>69
D<92380FFFFC4AB612E0020F15FC023F15FF91B8128001039026FE000713C04901F015E0
011F01C05B4990C7FC49484A13F0495A485B5A5C487013E0485B7113C0485B0501130048
EE007C95C7FCA2485BA4B5FCAC7EA280A27EA36C7F19FC7E806CEF01F86C7F6EED03F06C
6D15076CEF0FE06D6C6CEC1FC06D6DEC3F806D6DEC7F00010701FCEB01FE6D9039FF801F
FC010091B55A023F15E0020F1580020102FCC7FCDA000F13C03E407BBF48>99
D<92381FFFC04AB512FE020F6E7E027F15F091B77E0103D9FE0113FE010F9039F0003FFF
4901C0010F7F4990C76C7F494802017F49488248498048496F7E85485B48717EA2484915
1F855AA34849811A80A3B5FCA291B9FCA31A000280CBFCA67EA3807EA36C7F190F6CF01F
806C7F193F6C6D17006C606C6D16FE6D6C4B5A6D6C4B5A6D01C0EC0FF06D01F0EC3FE06D
01FCECFFC001019026FFC00F5B6D91B6C7FC023F15FC020715F002001580030701F0C8FC
41407CBF4A>101 D<EB0FE0EB3FF8497E497E487F4880A24880A76C5CA26C91C7FC6C5B
6D5A6D5AEB0FE090C9FCB0903807FF80007FB5FCA6C6FC7F7FB3B3ADB712C0A622657BE4
2C>105 D<D90FFFEB07F8B6EB3FFF4C13C04BB512F04B14F8923907F87FFCED0FE0C692
3880FFFE6D495A6DD91E0113FF153CA21578A24B6C13FEA24BEB7FFCA2EF1FF04BEB07C0
94C7FCA45DB3B0B712F8A638407BBF42>114 D<007FB600C0017FB512F8A6D8000F01F8
C70007EBE000060090C7FC6D6D4A5A6D6D4A5A6D6D4A5A6D6E495A4E5A6E6D5C6E6D133F
6E6D495A6E6D49C8FC4D5A6E6D485A6E6D485A6E01FF5B6E148FEF9FE06FEBFFC06F5C6F
91C9FC6F5B5F816F7F6F7F6F80A2707F8493B57E4B805D4B80DB0FF37FDB1FE17F04C180
ED3FC04B486C7F4B486C7F4A486D7F4A48814A487F4B6D7F020F6E7F4A486D7F4A48824A
487F4AC86C7F49486F7F4A6F7F010384D93FFF81B600F00103B7FCA650407EBF55>120
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmcsc10 12 5
/Fl 5 113 df<B500F094381FFFFEA26E5FC6F2FE00017F61D93BFCEF77F8A2D939FE17
E7A3D938FFEE01C7A26E6CED0387A36E6CED0707A26E6C150EA26E6C151CA36E6C1538A2
6E6C1570A36E6C15E0A26E6CEC01C0A36F6CEB0380A26F6CEB0700A26F6C130EA36F6C5B
A26F6C5BA36F6C5BA26F6C5BA36F6C485AA293387F8380A2DC3FC7C7FCA3EE1FEEA2EE0F
FCA3017C6E5AA248B46E484A7E000701C04D7EB500FE041FB512FE705AA257447BC363>
77 D<157015F8A34A7EA24A7EA34A7E81A291380E3F80A2021E7FEC1C1FA24A6C7EA34A
6C7EA202F07FECE003A249486C7EA349486C7EA201078091C77EA249B67EA24981011CC7
121FA2013C810138140FA2496E7EA201F081491403120183486C140100074B7ED81FF84A
7EB5027F13F8A335357CB43D>97 D<B812F0A3D803FEC7123F6C48EC07F816011600A217
78A21738A3171C1507A31700A25DA25D157F90B6FCA39038FC007F151F81A2811707A317
0E92C7FCA4171EA2173CA2177C17FC16011607486C143FB812F8A330337BB238>101
D<B512FEA3000390C9FCEA01FCB3A9EE01C0A416031780A41607A2160F161FA2167FEEFF
00486C1307B8FCA32A337BB233>108 D<B7FC16F016FC3A03FE0003FF6C489038007F80
EE3FC0EE1FE0EE0FF0A2EE07F8A217FCA617F8A2EE0FF0A2EE1FE0EE3FC0EEFF00ED03FE
90B612F816C001FCC9FCB3A2487EB512F8A32E337BB238>112 D
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmr12 12 59
/Fm 59 123 df<BBFCA300010180C7000113806C1800017F5EB3B3B3A4496C4A7E486D4A
1380B6D8C003B6FCA340447CC349>5 D<9239FF8003F8020F9038F01FFE913A3F807C3E
07913BFC000E780F80D901F090381FF01F494890393FE03FC04948137F494814C0011FEE
1F8091C7FC4991393F800600013E021F90C7FC137EAFB912F0A3D8007EC7D81F80C7FCB3
B18301FF4A7E007FD9FE1FB512E0A33A467EC539>11 D<4AB4FC020F13C091383F00F002
FC1338D901F0130C4948131E4948133E4948137F011F5C49C7FCA2013E147E017E143C93
C7FCAD167FB8FCA3D8007EC7FC8282B3B001FFEC7F80007FD9FC1FB5FCA330467EC536>
I<DBFF80EB3FE0020F9039E003FFF8913B3F80780FE01E913BFC001C3F0007D901F0D906
7CEB01804948D90FF8497E4948D93FF0130749484948497E011F171F91C75B5B013E6E48
6D5A017E021F6E5A96C8FCADF10FE0BBFCA3D8007EC7391F80001F190F1907B3B001FF4A
6C497E007FD9FE1FB50087B512E0A34B467EC551>14 D<127812FCA27E7E6C7E123FEA0F
C06C7E6C7E12016C7E137C7F130E7FEB0380EB0100111275C431>18
D<130FEB1F80A2133F137FEBFF005BEA01F8485A485A5B485A48C7FC123E12385A5A1240
11126CC431>I<121E123FEA7F80EAFFC0A313E0127FEA3F60121E1200A513C0A4EA0180
A2EA0300A212065AA25A5A12200B1D78C41B>39 D<1406140E14181430147014E0EB01C0
EB0380EB0700A2130E5B133C133813785BA2485AA2485AA212075BA2120F90C7FCA25A12
1EA2123EA3123C127CA6127812F8B21278127CA6123C123EA3121EA2121F7EA27F1207A2
7F1203A26C7EA26C7EA213781338133C131C7F7FA2EB0380EB01C0EB00E0147014301418
140E1406176477CA26>I<7E7E12607E12387E7E7E6C7EA26C7E6C7E7F137013787FA27F
A27FA214801307A214C01303A214E01301A214F0A3130014F8A61478147CB2147814F8A6
14F01301A314E0A2130314C0A213071480A2130F1400A2131EA25BA25B137013F05B485A
485AA248C7FC120E5A5A12305A5A5A16647ACA26>I<16C04B7EB3AB007FBAFCBB1280A2
6C1900C8D801E0C9FCB3AB6F5A41407BB84C>43 D<121E123FEA7F80EAFFC0A313E0127F
EA3F60121E1200A513C0A4EA0180A2EA0300A212065AA25A5A12200B1D78891B>I<121E
123FEA7F80EAFFC0A4EA7F80EA3F00121E0A0A78891B>46 D<14FF010713E090381F81F8
90387E007E01F8131F4848EB0F80000315C04913074848EB03E0000F15F0A24848EB01F8
A3003F15FCA348C812FEA64815FFB3A26C15FEA56D1301003F15FCA3001F15F8A26D1303
000F15F0A26C6CEB07E0000315C06D130F6C6CEB1F806C6CEB3F00017E137E90381F81F8
903807FFE0010090C7FC28427CC031>48 D<143014F013011307131F13FFB5FC13E71307
1200B3B3AF497E497E007FB6FCA3204178C031>I<EB03FE90381FFFC0017F13F03901F8
0FFC3903C001FE48C7127F000EEC3F80000CEC1FC04815E048EC0FF0A248EC07F8A2127C
00FE15FC7E6D1303A46CC71207123EC813F8A3ED0FF0A216E0151F16C0153F1680ED7F00
157E5D4A5A5D4A5A4A5A4A5A4AC7FC141E5C5C5C495A495A495A91C7120C130E5B491418
5B5B485A49143848C8123000061570000FB612F05A5A5AB712E0A326417BC031>I<49B4
FC010F13F0013F13FC9038FE01FE3901E0007FD80380EB3F8048C7EA1FC0000EEC0FE0D8
0F8014F0EA1FE016F86D1307A36C5AA2D80380130FC813F0A3ED1FE016C0A2ED3F801600
157E5DEC03F0EC1FC0D90FFFC7FC15F090380001FCEC007EED1F8016C0ED0FE0ED07F016
F8150316FC16FE1501A216FFA3121E123F487E487EA216FEA24913036CC713FC127E0070
EC07F8003015F06C140F000E15E06CEC1FC0D803E0EB7F803A01FC01FE0039007FFFFC01
1F13E0010190C7FC28427CC031>I<1507A25D5DA25D5DA25DA25C5C811406140E140C14
1814381430146014E014C01301EB038014005B13065B131C13185B137013605B12015B48
C7FC5A1206120E120C5A123812305A12E0B812C0A3C86CC7FCAC4B7E4A7F91B61280A32A
427DC131>I<000215C0D807C0130701FCEB7F8090B612005D5D15F05D158026063FFCC7
FC90C9FCAE14FF010713E090381F01F0903878007C01E07FD807807F90C71380ED0FC012
02C8EA07E016F0A3ED03F8A316FCA4121C123E127F487EA216F890C7FC4814074815F012
60A26CEC0FE016C06C141F001C15806CEC3F006C147E3903C001FC3901F807F039007FFF
E06D1380D907FCC7FC26427BC031>I<EC07F8EC3FFF91B51280903903FC03C0903907E0
00E0D90F80133090391F0001F0013EEB03F84913075B1201485A49EB03F00007EC01E000
0F91C7FC5B121FA25B123FA3127F90C9FCEC7F80903801FFF039FF0780FC90380E003E01
18130F49EB078016C049EB03E04914F0ED01F8A24914FC150016FEA290C8FC16FFA27EA6
6C7EA216FE121FA2ED01FC6C7E16F8000714036C6C14F06DEB07E0000115C06C6CEB0F80
017EEB3F0090383F80FE90380FFFF86D5B0100138028427CC031>I<121CA2EA1F8090B7
12C0A34816801700A25E0038C8120C00305D127000605D5EA25E484A5A4BC7FCA2C81206
5DA25D5D5DA25D14015D1403A24AC8FCA25C140E141EA2143E143CA2147CA214FCA31301
5CA31303A61307AA6D5A6D5A2A447BC231>I<14FF010713E0011F13F890383F00FE0178
131F01E0EB0F804848EB03C04848EB01E048C7FCED00F0120E1678121EA4121FA26D14F0
7FD80FF0EB01E07FD807FEEB03C06DEB07806C9038C00F006CEBE01E6CEBF83890387FFE
F090383FFFC0130F6D7F010113F801077F90381E3FFFD9781F1380D9F00713C02601C003
13E04848C613F048C7EA7FF8000E141F001EEC0FFC48EC03FE150148EC007E163FA24815
1FA2160FA4160E1278161E161C6C15186C1538001F15706C6C14E06C6CEB03C0D803F0EB
0F80C6B4EB7F0090383FFFFC010F13F00101138028427CC031>I<14FF010713E0011F13
F890387F80FC9038FC003E48487F4848EB0F804848EB07C0484814E01503484814F0123F
ED01F848C7FCA216FC5AA2ED00FEA516FFA37E5DA27E7F001F5CA26C7E000714066C6C5B
12016C6C5B017C137090383F01E090390FFF80FE903801FE0090C8FCA2ED01FCA416F815
0316F0A2D80780EB07E0487E486CEB0FC01680151F160049133E6C485B390C0001F80007
495A3903E01FC06CB55A6C6C48C7FCEB1FF028427CC031>I<121E123FEA7F80EAFFC0A4
EA7F80EA3F00121EC7FCB3A5121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A2B78AA1B
>I<007FBAFCBB1280A3CEFCB0BB1280A36C190041187BA44C>61
D<DB0FFE146092B512C0020302F013E0913A1FFC01FC0191393FC0001E02FFC7EA0703D9
01FCEC0387D907F0EC00C74948156F4948153F4948151F49C9120F13FE000117075B4848
16031207491601120F491600121FA2123F491760A2127FA219005B12FFAC127F7FA21960
123FA27F121FA26C6C17C0A212076DEE018012036C6C16036D170000001706137F6D6C5D
6D6C5D6D6C5D6D6C5DD901FC4A5A6DB4EC0780DA3FC0011FC7FCDA1FFC13FC0203B55A02
0014C0DB0FFEC8FC3B467BC446>67 D<B8FC17F017FC00019039C00007FF6C499038007F
C0017FED1FE0EF07F0EF03FC717E717E84727E727E727EA2727E85180385A2180185A385
84A31A80AD1A00A36061A361180361180761180F614E5A183F614EC7FC18FEEF03FC4D5A
EF1FE001FFED7FC0486DD907FFC8FCB812FC17F094C9FC41447CC34B>I<B612F0A3C6EB
F0006D5A6D5AB3B3B3A4497E497EB612F0A31C447DC323>73 D<B612F8A3000101E0C9FC
6C5B6D5AB3B31830A418701860A518E0A3EF01C0A217031707A2170F173F177F01FFEC01
FF486D011F1380B9FCA334447CC33D>76 D<ED1FFC4AB512C091390FF007F891393F8000
FE027EC7123FD901F8EC0FC049486E7ED90FE0EC03F849486E7E49486E7E49C9127F01FE
707E49161F0001844848707EA24848707E000F84491603001F84A2491601003F84A3007F
844982A300FF1980AC007F19006D5EA4003F606D1603A2001F606D1607000F60A26C6C4C
5AA26C6C4C5A0001606C6C4C5A6D167F6D94C7FC6D6C15FE6D6C4A5A6D6C4A5AD903F0EC
07E0D901FCEC1FC0D9007E4AC8FC6E6C13FE91390FF007F80201B512C09126001FFCC9FC
41467BC44C>79 D<B712FCEEFFC017F800019039C0000FFE6C49EB01FF017F9138007F80
EF1FE0170FEF07F018F8EF03FCA218FE1701A218FFA718FEA2170318FCA2EF07F818F0EF
0FE0EF1FC0EF7F80933801FE00EE0FFC91B612F017800280C9FCB3A9497E487FB612C0A3
38447CC342>I<49B41303010F13E0013FEBF8079038FE00FCD801F0EB1F0F4848EB079F
4848EB01DF48486DB4FC48C87E001E81123E007E81127C8212FC82A46C81A37E6C6C91C7
FCA2EA3FE07FEA1FFEEBFFE06C13FE6CEBFFE06C14FC6C14FF6C15C0013F80010F800101
80D9001F7F02017F9138001FFF150303001380167FEE3FC0161FA2EE0FE0124012C01607
A47EA217C07E160F6C1680A26CED1F006C151E6C153ED8FBC05CD8F9F05CD8F07CEB03F0
3AE03FC00FE0010FB51280D8C00349C7FC9038003FF02B467BC436>83
D<003FB912E0A3903BF0003FF0007F01806D48130F003EC7150348EF01F0007817001970
1270A219301260A5481818A5C81600B3B3A54B7EEDFFFC0103B7FCA33D447CC346>I<B6
6C91383FFFF0A3000301E0C800071300C649ED01FC6D4816F018006E5E013F5FA26E1501
011F5F80010F4CC7FCA26E5D01071606A26D6C5DA28001015EA26E15386D163081027F5D
A26F14E0023F5DA26E6C495AA281020F4AC8FCA26F5B020714068102035CA26F131C0201
1418A26E6C5BA21680037F5BA2EEC0E0033F5B16E092381FE180A216F3030F90C9FCA2ED
07FEA36F5AA36F5AA26F5AA3166044457EC349>86 D<EAFFF8A4EAF000B3B3B3B3B3A2EA
FFF8A40D6475CA1B>91 D<EAFFF8A4EA0078B3B3B3B3B3A2EAFFF8A40D647ECA1B>93
D<130C131E133F497EEBF3C03801E1E03803C0F03807807848487E001E7F487F0070EB03
8048EB01C00040EB00801A0E75C331>I<EB07F8EB3FFF9038F80FC03901C003E048C66C
7E00066D7E48147CD80F80137E486C133E6D133F8182A26C5A6C5AC8FCA4EC0FFF49B5FC
90380FFC1FEB3FC0EBFF00EA03FCEA07F0485A121F485A5B127F176048C7FCA4153FA26C
146F7F003F9138C7C0C0391FC001873B0FE00307E1803A07F81E03FF2701FFFC0113003A
001FE0007C2B2E7CAC31>97 D<EA01FC12FFA3120312011200B3EC01FC91380FFF809138
3E07E091387000F802C0137CD9FD807F01FFC77EEE0F804915C049EC07E017F0160317F8
A217FC1601A317FEA917FCA21603A217F8A2EE07F017E07FEE0FC001FBEC1F801700D9F1
80133ED9F0C05B9039E06001F891383C07E09039C01FFF8090260003FCC7FC2F467DC436
>I<EC7F80903803FFF090380FC07C90383E000E49130349EB01804848EB00C000031407
4848EB0FE04848131FA2121F5B003FEC0FC0ED0780007F91C7FC90C9FCA25AAA7EA27FA2
123F16306C7EA2000F15606C7E6C6C14C00001EC01806C7E017CEB07006D130E90381FC0
78903807FFF001001380242E7DAC2B>I<16FE157FA315011500167EB3EC7F80903803FF
F090380FC07890383F000C017C13064913034848EB01FE00031400485A4848147EA2121F
485AA2127FA290C8FCA25AA97EA37F123FA2121F7F000F15FE6C7E000314016C6CEB037E
6C6C147F017C010E13806D011C13FE90380FC0F0903803FFE09026007F0013002F467DC4
36>I<EB01FE903807FFC090381F03F090387C00F849137C48487F48487F000715804913
0F000F15C0121F4914E0003F1407A2127F90C713F0A35AA290B6FCA290C9FCA67EA36C7E
A21630121F7F000F15606C7E000315C06C6CEB01806C6CEB0300017C13066D131C90380F
C078903803FFE09038007F80242E7DAC2B>I<EC1FC0EC7FF0ECF038903803E07C903807
C0FC90380F81FEA2EB1F0190383F00FCA2013E1330017E1300B0B61280A3D8007EC7FCB3
B1137F497E007FEBFF80A31F467EC51E>I<D901FCEB1FC0903A0FFF807FE0903A3F07E1
E1F090397C01F7819039F800FE01484890387C00E048486D13000007143FA248486D7EA2
001F81A7000F5DA26C6C49C7FCA20003143E6C6C5B6C6C5B486C485A39033F07E090380F
FF80260701FCC8FC0006CAFCA3120E120F7EA27F13E06CB512F86CECFF806C15E06D14F8
48B67E3A07E0000FFED80F80EB00FF001EC8123F003EED1F8048150F17C0481507A6007C
ED0F80A26CED1F006C153E6C6C5CD807E0495AD801F8EB07E0D8007FEB3F8090261FFFFE
C7FC010113E02C417DAB31>I<EA01FC12FFA3120312011200B3EC01FE913807FF809138
1E07E091383801F002607FECC000D9FD807F167C01FFC7FC167E5BA35BB3A9486C14FFB5
D8FC7F13FEA32F457DC436>I<13E0EA03F8487EA66C5AEA00E090C7FCADEA01FC127FA3
120312011200B3B0487EB512F8A315437EC21B>I<EA01FC12FFA3120312011200B3B3B3
A5487EB512FCA316457EC41B>108 D<2701FC01FEEC7F8000FF903B07FFC001FFF0913B
0E03F00380FC913B3800F80E003E0003495C000101C0D97C307F0000037E81D9FD805C01
FFC7D83EC0130F043F81495DA34992C7FCB3A9486C4A6C497EB5D8FC3FB5000FB512C0A3
4A2C7DAB51>I<3901FC01FE00FF903807FF8091381E07E091383801F0000301607F0001
EBC0002600FD807F167C01FFC7FC167E5BA35BB3A9486C14FFB5D8FC7F13FEA32F2C7DAB
36>I<EC7F80903803FFF090380FC0FC90383E001F496D7E496D7E48486D7E48486D7E48
486D7E000F81A24848147E003F157FA290C87E481680A44816C0AA6C1680A26D147F003F
1600A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49C7FC
90381FC0FE903807FFF89038007F802A2E7DAC31>I<3901FC01FC00FF90380FFF809138
3E07E091387001F800039038C0007C2601FD807F6CB4C7123FEE1F8049EC0FC04915E0EE
07F0A217F8160317FCA3160117FEA917FC1603A317F8160717F0EE0FE07FEE1FC06D1580
EE3F00D9FD80137ED9FCC05B91386001F891383C0FE091381FFF80DA03FCC7FC91C9FCAE
487EB512FCA32F3F7DAB36>I<91387F8006903903FFE00E90380FE07890383F001C017E
EB061E5B4848EB033E4848EB01BE12074848EB00FEA2485A003F157E5B127FA390C8FC5A
A97E7FA3123F7F121F16FE6C7E000714016C7E6C6CEB037E00001406017C130C013F1318
90380FC0F0903803FFE09038007F0091C7FCAE16FF037F13FEA32F3F7DAB33>I<3901F8
07E000FFEB1FF8EC383CEC607E0003EBC0FF12013800F980EBFB00157E153C01FE1300A4
5BB3A77F487EB6FCA3202C7DAB26>I<90383FE0303801FFF83907C01E70390F0007F000
1C1301481300A2481470A212F01530A37E7E007E1400EA7F80EA3FF0EBFF806C13F86C13
FE0003EBFF806C14C0D8003F13E0010313F09038001FF81403EC00FC0040147C00C0147E
153E7E151EA37E151C7E153C6C14386C147000FB14E039F18001C039E0F00F8039C07FFE
00EB0FF01F2E7DAC26>I<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0
B6FCA2D8007EC7FCB3A4150CAA133E013F1318A27F90380F803001071360903803E0C090
3801FF809038003F001E3E7EBC26>I<D801FC14FE00FF147FA300031401000114000000
157EB3A916FEA3017C1301A2017EEB037E013E147F011E010613806D011C13FE903807C0
78903803FFE09026007F8013002F2D7DAB36>I<B539E001FFFCA3D807FEC7EA7FE0D801
FCEC1F8017000000150E160CA2017E5CA2017F14386D1430A26D6C5BA26E13E0010F5CA2
6D6C485AA36D6C48C7FCA26E5A01011306A26D6C5AA2ECFE1CEC7E18A26E5AA3EC1FE0A3
6E5AA26E5AA36EC8FC2E2C7EAA33>I<3B7FFFF007FFFCA30001D9800113C06C90C7EAFE
006D147C6D14706D6C5B6D6C5BECE0010107495AD903F090C7FCECF806903801FC0E0100
5BEC7E18EC7F30EC3F706E5A6E5A811407814A7EEC0DFC1418EC387E4A7E02607FECC01F
01016D7ED903807F4A6C7E01061303496D7E011C80013C1300017C147ED801FC14FFD80F
FE4913C0B5D8800713FFA3302B7FAA33>120 D<B539E001FFFCA3D807FEC7EA7FE0D801
FCEC1F8017000000150E160C6D141C017E1418A26D5CA26E1370011F1460A26D6C5BA280
0107495AA2ECF003010391C7FCA2903801F806A2ECFC0E0100130CA2EC7E18A2EC7F38EC
3F30A2EC1FE0A36E5AA26E5AA36EC8FCA21406A35CA2141C1418A200385B127C00FE5BA2
5C1301387C0380D87007C9FCEA3C1EEA1FFCEA03F02E3F7EAA33>I<003FB612E0A29039
E0000FC090C7EA1F80003C143F00381500157E003014FE00705C4A5A14030060495A5D4A
5A141F5DC748C7FC5C14FE5C495A13035C495A130F494813605C49C7FC5B017E14C05B12
01485A5B48481301120F491303485A003FEC0F8090C7121F007E14FFB7FCA2232B7DAA2B
>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop 0 84 a Fm(Corrig)m(\023)-46 b(e)33 b(TP2)g Fl(Maple)2474
b Fm(P)m(olyn^)-49 b(omes)p 0 124 3820 4 v 0 407 a Fk(Exercice)53
b(1)146 523 y Fj(>)304 531 y Fi(P:=x^5-x^4-4*x^3+4*x^2-5*x)q(+5;)1149
734 y Fh(P)42 b Fm(:=)27 b Fh(x)1439 693 y Fg(5)1501
734 y Ff(\000)c Fh(x)1656 693 y Fg(4)1718 734 y Ff(\000)f
Fm(4)17 b Fh(x)1938 693 y Fg(3)2000 734 y Fm(+)22 b(4)17
b Fh(x)2219 693 y Fg(2)2280 734 y Ff(\000)23 b Fm(5)17
b Fh(x)22 b Fm(+)g(5)146 860 y Fj(>)304 868 y Fi(factor\(P\);)1402
1072 y Fm(\()p Fh(x)g Ff(\000)h Fm(1\))17 b(\()p Fh(x)1814
1031 y Fg(2)1875 1072 y Ff(\000)23 b Fm(5\))17 b(\()p
Fh(x)2172 1031 y Fg(2)2233 1072 y Fm(+)22 b(1\))0 1203
y(P)m(ar)49 b(d)m(\023)-46 b(efaut,)52 b Fl(Maple)c Fm(factorise)g
(dans)h Fe(Q)p Fm(.)91 b(P)m(our)49 b(p)s(ousser)h(plus)f(loin)f(la)h
(factorisation,)j(il)c(faut)0 1323 y(indiquer)f(dans)f(quelle)h
Fd(extension)e Fm(de)h Fe(Q)f Fl(Maple)f Fm(doit)i(tra)m(v)-5
b(ailler.)82 b(Concr)m(\023)-46 b(etemen)m(t,)52 b(on)45
b(fournit)0 1444 y(\022)-49 b(a)38 b Fl(Maple)e Fm(une)j(liste)f
Ff(f)p Fh(a)948 1459 y Fg(1)988 1444 y Fh(;)17 b(:)g(:)g(:)32
b(;)17 b(a)1274 1459 y Fj(n)1321 1444 y Ff(g)38 b Fm(de)g(nom)m(bres)h
(complexes)i(tels)d(que)h(les)g(z)m(\023)-46 b(eros)38
b(du)h(p)s(olyn^)-49 b(ome)38 b(\022)-49 b(a)0 1564 y(factoriser)25
b(s')m(\023)-46 b(ecriv)m(en)m(t)28 b(comme)d(des)h(pro)s(duits)f(et)g
(des)h(sommes)g(des)g Fh(a)2540 1579 y Fj(i)2593 1564
y Fm(et)f(de)g(rationelles.)42 b(On)25 b(tra)m(v)-5 b(aille)0
1684 y(ainsi)33 b(dans)g(l'extension)i Fe(Q)p Fm(\()p
Fh(a)1115 1699 y Fg(1)1155 1684 y Fh(;)17 b(:)g(:)g(:)32
b(;)17 b(a)1441 1699 y Fj(n)1488 1684 y Fm(\))32 b Fd(i.e.)43
b Fm(le)33 b(plus)h(p)s(etit)e(corps)i(con)m(tenan)m(t)g
Fe(Q)e Fm(et)h(les)g Fh(a)3409 1699 y Fj(i)3438 1684
y Fm(.)146 1800 y Fj(>)304 1808 y Fi(solve\(P\);)1504
2011 y Fm(1)p Fh(;)1613 1924 y Ff(p)p 1696 1924 49 4
v 87 x Fm(5)p Fh(;)h Ff(\000)1883 1924 y(p)p 1966 1924
V 87 x Fm(5)p Fh(;)f(I)8 b(;)33 b Ff(\000)p Fh(I)146
2138 y Fj(>)304 2146 y Fi(factor\(P,sqrt\(5\)\);)1180
2349 y Fm(\()p Fh(x)1273 2308 y Fg(2)1335 2349 y Fm(+)22
b(1\))17 b(\()p Fh(x)22 b Ff(\000)1751 2262 y(p)p 1834
2262 V 87 x Fm(5\))17 b(\()p Fh(x)22 b Fm(+)2151 2262
y Ff(p)p 2234 2262 V 87 x Fm(5\))17 b(\()p Fh(x)22 b
Ff(\000)h Fm(1\))146 2476 y Fj(>)304 2484 y Fi(factor\(P,)p
Ff(f)p Fi(sqrt\(5\),I)p Ff(g)p Fi(\);)1038 2687 y Fm(\()p
Fh(x)g Ff(\000)f Fh(I)8 b Fm(\))17 b(\()p Fh(x)22 b Fm(+)g
Fh(I)8 b Fm(\))17 b(\()p Fh(x)22 b Ff(\000)1893 2600
y(p)p 1976 2600 V 87 x Fm(5\))17 b(\()p Fh(x)22 b Fm(+)2293
2600 y Ff(p)p 2376 2600 V 87 x Fm(5)o(\))17 b(\()p Fh(x)22
b Ff(\000)h Fm(1\))146 2814 y Fj(>)304 2822 y Fi(F)51
b(:=)h(1/\(X^7)h(+)e(27*X^4)i(-)f(X^3)g(-)f(27\);)1302
3069 y Fh(F)41 b Fm(:=)2003 3001 y(1)p 1547 3046 961
4 v 1547 3137 a Fh(X)1636 3108 y Fg(7)1697 3137 y Fm(+)22
b(27)17 b Fh(X)1999 3108 y Fg(4)2060 3137 y Ff(\000)23
b Fh(X)2249 3108 y Fg(3)2310 3137 y Ff(\000)f Fm(27)146
3247 y Fj(>)304 3255 y Fi(convert\(F,parfrac,X\);)259
3438 y Fm(1)p 210 3483 147 4 v 210 3574 a(112)498 3438
y(1)p 393 3483 260 4 v 393 3574 a Fh(X)30 b Ff(\000)23
b Fm(1)684 3506 y(+)866 3438 y(1)p 792 3483 196 4 v 792
3574 a(2160)1129 3438 y(1)p 1024 3483 258 4 v 1024 3574
a Fh(X)30 b Fm(+)22 b(3)1314 3506 y Ff(\000)1472 3438
y Fm(1)p 1423 3483 147 4 v 1423 3574 a(104)1711 3438
y(1)p 1606 3483 258 4 v 1606 3574 a Fh(X)30 b Fm(+)22
b(1)1896 3506 y Ff(\000)2079 3438 y Fm(1)p 2006 3483
196 4 v 2006 3574 a(1460)2237 3438 y(27)g(+)g Fh(X)p
2237 3483 307 4 v 2242 3574 a(X)2331 3545 y Fg(2)2392
3574 y Fm(+)g(1)2576 3506 y(+)2806 3438 y(1)p 2684 3483
293 4 v 2684 3574 a(179361)3013 3438 y Ff(\000)p Fm(249)g(+)g(163)17
b Fh(X)p 3013 3483 596 4 v 3024 3574 a(X)3113 3545 y
Fg(2)3175 3574 y Ff(\000)22 b Fm(3)17 b Fh(X)30 b Fm(+)22
b(9)146 3684 y Fj(>)304 3692 y Fi(solve\(denom\(F\)\);)1014
3939 y Fm(1)p Fh(;)33 b Ff(\000)p Fm(3)p Fh(;)h Ff(\000)p
Fm(1)p Fh(;)f(I)8 b(;)33 b Ff(\000)p Fh(I)8 b(;)1806
3872 y Fm(3)p 1806 3916 49 4 v 1806 4007 a(2)1887 3939
y Ff(\000)1997 3872 y Fm(3)p 1997 3916 V 1997 4007 a(2)2072
3939 y Fh(I)2139 3852 y Ff(p)p 2222 3852 V 87 x Fm(3)p
Fh(;)2341 3872 y Fm(3)p 2341 3916 V 2341 4007 a(2)2422
3939 y(+)2530 3872 y(3)p 2530 3916 V 2530 4007 a(2)2606
3939 y Fh(I)2673 3852 y Ff(p)p 2756 3852 V 87 x Fm(3)146
4114 y Fj(>)304 4122 y Fi(convert\(F,parfrac,X,)p Ff(f)p
Fi(I,sqrt\()q(3\))p Ff(g)p Fi(\);)132 4409 y Fm(1)p 10
4454 293 4 v 10 4545 a(179361)462 4409 y(163)21 b(+)h
Fh(I)796 4327 y Ff(p)p 879 4327 49 4 v 82 x Fm(3)p 339
4454 712 4 v 339 4556 a(2)17 b Fh(X)29 b Ff(\000)23 b
Fm(3)f Ff(\000)h Fm(3)17 b Fh(I)918 4474 y Ff(p)p 1001
4474 49 4 v 82 x Fm(3)1082 4477 y Ff(\000)1314 4409 y
Fm(1)p 1192 4454 293 4 v 1192 4545 a(179361)1642 4409
y Fh(I)1710 4327 y Ff(p)p 1793 4327 49 4 v 82 x Fm(3)22
b Ff(\000)g Fm(163)p 1521 4454 710 4 v 1521 4556 a(2)17
b Fh(X)29 b Ff(\000)23 b Fm(3)f(+)g(3)17 b Fh(I)2099
4474 y Ff(p)p 2182 4474 49 4 v 82 x Fm(3)2263 4477 y(+)2371
4369 y Ff(\000)2531 4302 y Fm(1)p 2458 4346 196 4 v 2458
4438 a(2920)2685 4369 y Ff(\000)2844 4302 y Fm(27)p 2795
4346 V 2795 4438 a(2920)3017 4369 y Fh(I)p 2371 4454
697 4 v 2589 4545 a(X)30 b Fm(+)22 b Fh(I)3100 4477 y
Fm(+)3208 4369 y Ff(\000)3368 4302 y Fm(1)p 3295 4346
196 4 v 3295 4438 a(2920)3522 4369 y(+)3679 4302 y(27)p
3630 4346 V 3630 4438 a(2920)3852 4369 y Fh(I)p 3208
4454 696 4 v 3424 4545 a(X)30 b Ff(\000)23 b Fh(I)188
4734 y Ff(\000)347 4667 y Fm(1)p 298 4711 147 4 v 298
4802 a(104)585 4667 y(1)p 481 4711 258 4 v 481 4802 a
Fh(X)30 b Fm(+)22 b(1)770 4734 y(+)927 4667 y(1)p 878
4711 147 4 v 878 4802 a(112)1167 4667 y(1)p 1061 4711
260 4 v 1061 4802 a Fh(X)30 b Ff(\000)23 b Fm(1)1353
4734 y(+)1534 4667 y(1)p 1461 4711 196 4 v 1461 4802
a(2160)1797 4667 y(1)p 1692 4711 258 4 v 1692 4802 a
Fh(X)30 b Fm(+)22 b(3)0 4979 y Fk(Exercice)53 b(2)146
5095 y Fj(>)304 5103 y Fi(P)e(:=)h(X^\(2*n\))h(-)f(n^2*X^\(n+1\))i(+)d
(2*\(n^2-1\)*X^n)k(-)d(n^2*X^\(n-1\))i(+)d(1;)731 5306
y Fh(P)41 b Fm(:=)28 b Fh(X)1055 5265 y Fg(\(2)12 b Fj(n)p
Fg(\))1226 5306 y Ff(\000)22 b Fh(n)1383 5265 y Fg(2)1439
5306 y Fh(X)1528 5265 y Fg(\()p Fj(n)p Fg(+1\))1742 5306
y Fm(+)g(2)17 b(\()p Fh(n)2002 5265 y Fg(2)2064 5306
y Ff(\000)22 b Fm(1\))17 b Fh(X)2356 5265 y Fj(n)2424
5306 y Ff(\000)23 b Fh(n)2582 5265 y Fg(2)2638 5306 y
Fh(X)2727 5265 y Fg(\()p Fj(n)p Fc(\000)p Fg(1\))2941
5306 y Fm(+)f(1)146 5433 y Fj(>)304 5441 y Fi(subs\(X=1,A\);)1885
5644 y Fm(0)1885 5944 y(1)p eop
%%Page: 2 2
2 1 bop 0 84 a Fm(Corrig)m(\023)-46 b(e)33 b(TP2)g Fl(Maple)2474
b Fm(P)m(olyn^)-49 b(omes)p 0 124 3820 4 v 146 399 a
Fj(>)304 407 y Fi(P1:=diff\(A,X\):)146 523 y Fj(>)304
531 y Fi(subs\(X=1,P1\);)1006 734 y Fm(2)17 b Fh(n)k
Ff(\000)i Fh(n)1309 693 y Fg(2)1365 734 y Fm(\()p Fh(n)g
Fm(+)f(1\))f(+)h(2)17 b(\()p Fh(n)1950 693 y Fg(2)2012
734 y Ff(\000)22 b Fm(1\))17 b Fh(n)22 b Ff(\000)g Fh(n)2452
693 y Fg(2)2509 734 y Fm(\()p Fh(n)g Ff(\000)h Fm(1\))146
860 y Fj(>)304 868 y Fi(simplify\("\);)1885 1072 y Fm(0)146
1198 y Fj(>)304 1206 y Fi(P2:=diff\(P1,X\):simplify\(su)q(bs\(X)q(=1,)q
(P2\)\))q(;)1885 1410 y Fm(0)146 1536 y Fj(>)304 1544
y Fi(P3:=diff\(P2,X\):simplify\(su)q(bs\(X)q(=1,)q(P3\)\))q(;)1885
1747 y Fm(0)146 1874 y Fj(>)304 1882 y Fi
(P4:=diff\(P3,X\):simplify\(su)q(bs\(X)q(=1,)q(P4\)\))q(;)1648
2085 y Ff(\000)p Fm(2)17 b Fh(n)1849 2044 y Fg(2)1910
2085 y Fm(+)22 b(2)17 b Fh(n)2132 2044 y Fg(4)146 2212
y Fj(>)304 2220 y Fi(solve\("\);)1683 2423 y Fm(1)p Fh(;)33
b Ff(\000)p Fm(1)p Fh(;)g Fm(0)p Fh(;)g Fm(0)0 2554 y(Donc)f(1)h(est)g
(un)g(z)m(\023)-46 b(ero)33 b(d'ordre)g(4)f(p)s(our)g
Fh(P)1544 2569 y Fj(n)1624 2554 y Fm(si)h Fh(n)28 b Ff(\025)g
Fm(2.)43 b(On)33 b(traite)f(les)i(cas)f Fh(n)28 b Fm(=)f(0)33
b(et)f Fh(n)c Fm(=)g(1)k(\022)-49 b(a)32 b(part)h(:)146
2670 y Fj(>)304 2678 y Fi(n:=0:)104 b(P;)1885 2881 y
Fm(0)146 3008 y Fj(>)304 3016 y Fi(n:=1:)g(P;)1885 3219
y Fm(0)0 3350 y Fk(Exercice)53 b(3)146 3466 y Fj(>)304
3474 y Fi(restart;)146 3590 y Fj(>)304 3598 y Fi(with\(linalg\):)146
3714 y Fj(>)304 3722 y Fi(f[1]:=P->subs\()p Ff(f)p Fi(x=1)p
Ff(g)p Fi(,P\);)1304 3925 y Fh(f)1352 3940 y Fg(1)1420
3925 y Fm(:=)27 b Fh(P)41 b Ff(!)28 b Fm(subs)q(\()p
Ff(f)p Fh(x)g Fm(=)f(1)p Ff(g)p Fh(;)33 b(P)14 b Fm(\))146
4051 y Fj(>)304 4059 y Fi(f[2]:=P->subs\()p Ff(f)p Fi(x=2)p
Ff(g)p Fi(,P\);)1304 4263 y Fh(f)1352 4278 y Fg(2)1420
4263 y Fm(:=)27 b Fh(P)41 b Ff(!)28 b Fm(subs)q(\()p
Ff(f)p Fh(x)g Fm(=)f(2)p Ff(g)p Fh(;)33 b(P)14 b Fm(\))146
4389 y Fj(>)304 4397 y Fi(f[3]:=P)53 b(->)f(subs\()p
Ff(f)p Fi(x=1)p Ff(g)p Fi(,diff\(P,x\)\);)1230 4649 y
Fh(f)1278 4664 y Fg(3)1345 4649 y Fm(:=)28 b Fh(P)41
b Ff(!)27 b Fm(subs)r(\()p Ff(f)p Fh(x)g Fm(=)h(1)p Ff(g)p
Fh(;)2364 4582 y(@)p 2336 4626 113 4 v 2336 4717 a(@)5
b(x)2475 4649 y(P)14 b Fm(\))146 4819 y Fj(>)304 4827
y Fi(f[4]:=P)53 b(->)f(int\(P,x=0..1\);)1502 5095 y Fh(f)1550
5110 y Fg(4)1617 5095 y Fm(:=)28 b Fh(P)41 b Ff(!)1979
4959 y Fb(Z)2079 4985 y Fg(1)2034 5185 y(0)2118 5095
y Fh(P)30 b(dx)1885 5944 y Fm(2)p eop
%%Page: 3 3
3 2 bop 0 84 a Fm(Corrig)m(\023)-46 b(e)33 b(TP2)g Fl(Maple)2474
b Fm(P)m(olyn^)-49 b(omes)p 0 124 3820 4 v 0 407 a(Si)44
b(on)f(note)g(\()p Fh(e)581 422 y Fg(1)621 407 y Fh(;)17
b(e)710 422 y Fg(2)749 407 y Fh(;)g(e)838 422 y Fg(3)877
407 y Fh(;)g(e)966 422 y Fg(4)1006 407 y Fm(\))46 b(=)f(\(1)p
Fh(;)17 b(X)r(;)g(X)1558 371 y Fg(2)1597 407 y Fh(;)g(X)1730
371 y Fg(3)1769 407 y Fm(\))43 b(la)g(base)h(usuelle)h(de)f
Fh(E)49 b Fm(et)44 b(\()p Fh(e)2998 371 y Fc(\003)2998
431 y Fg(1)3038 407 y Fh(;)17 b(e)3127 371 y Fc(\003)3127
431 y Fg(2)3166 407 y Fh(;)g(e)3255 371 y Fc(\003)3255
431 y Fg(3)3294 407 y Fh(;)g(e)3383 371 y Fc(\003)3383
431 y Fg(4)3423 407 y Fm(\))43 b(sa)g(base)0 527 y(duale,)33
b(c)m(haque)h Fh(')676 542 y Fj(i)737 527 y Fm(p)s(eut)f(s')m(\023)-46
b(ecrire)34 b(dans)f(cette)h(base)f(:)1219 747 y Fh(')1283
762 y Fj(i)1339 747 y Fm(=)27 b Fh(a)1493 762 y Fj(i)p
Fg(1)1557 747 y Fh(e)1602 706 y Fc(\003)1602 772 y Fg(1)1664
747 y Fm(+)22 b Fh(a)1813 762 y Fj(i)p Fg(2)1876 747
y Fh(e)1921 706 y Fc(\003)1921 772 y Fg(2)1983 747 y
Fm(+)g Fh(a)2132 762 y Fj(i)p Fg(3)2196 747 y Fh(e)2241
706 y Fc(\003)2241 772 y Fg(3)2303 747 y Fm(+)g Fh(a)2452
762 y Fj(i)p Fg(4)2515 747 y Fh(e)2560 706 y Fc(\003)2560
772 y Fg(4)0 967 y Fm(On)33 b(calcule)g(les)h Fh(a)675
982 y Fj(ij)768 967 y Fm(gr^)-49 b(ace)33 b(\022)-49
b(a)32 b(la)g(form)m(ule)1663 1187 y Fh(a)1714 1202 y
Fj(ij)1803 1187 y Fm(=)27 b Fh(')1970 1202 y Fj(i)1998
1187 y Fm(\()p Fh(e)2081 1202 y Fj(j)2118 1187 y Fm(\))0
1407 y(On)33 b(place)g(ces)h(co)s(e\016cien)m(ts)g(dans)f(une)h
(matrice)f(o)s(\022)-51 b(u)31 b(c)m(haque)k(ligne)e(repr)m(\023)-46
b(esen)m(te)35 b(une)e(des)g(forme)g Fh(')3676 1422 y
Fj(i)3704 1407 y Fm(.)146 1523 y Fj(>)304 1531 y Fi
(A:=matrix\(4,4,\(i,j\)->f[i]\()q(x^\(j)q(-1\))q(\)\);)1434
2042 y Fh(A)28 b Fm(:=)1665 1662 y Fb(2)1665 1838 y(6)1665
1898 y(6)1665 1957 y(6)1665 2017 y(6)1665 2077 y(6)1665
2137 y(6)1665 2200 y(4)1773 1773 y Fm(1)93 b(1)103 b(1)f(1)1773
1953 y(1)93 b(2)103 b(4)f(8)1773 2134 y(0)93 b(1)103
b(2)f(3)1773 2320 y(1)1915 2252 y(1)p 1915 2297 49 4
v 1915 2388 a(2)2067 2252 y(1)p 2067 2297 V 2067 2388
a(3)2218 2252 y(1)p 2218 2297 V 2218 2388 a(4)2319 1662
y Fb(3)2319 1838 y(7)2319 1898 y(7)2319 1957 y(7)2319
2017 y(7)2319 2077 y(7)2319 2137 y(7)2319 2200 y(5)146
2490 y Fj(>)304 2498 y Fi(det\(A\);)1885 2677 y Fm(7)p
1861 2722 98 4 v 1861 2813 a(12)0 2907 y(La)32 b(famille)h(\()p
Fh(')561 2922 y Fg(1)601 2907 y Fh(;)17 b(')709 2922
y Fg(2)748 2907 y Fh(;)g(')856 2922 y Fg(3)895 2907 y
Fh(;)g(')1003 2922 y Fg(4)1042 2907 y Fm(\))32 b(forme)h(donc)g(une)g
(base)g(de)g Fh(E)2228 2871 y Fc(\003)2268 2907 y Fm(.)146
3022 y Fj(>)304 3030 y Fi(X:=vector\([1,x,x^2,x^3]\);)1521
3234 y Fh(X)j Fm(:=)28 b([1)p Fh(;)33 b(x;)g(x)2075 3193
y Fg(2)2115 3234 y Fh(;)h(x)2231 3193 y Fg(3)2270 3234
y Fm(])0 3365 y(Si)f Fh(P)41 b Ff(2)28 b Fh(E)39 b Fm(admet)33
b(comme)g(d)m(\023)-46 b(ecomp)s(osition)34 b Fh(P)41
b Fm(=)28 b Fh(ae)1998 3380 y Fg(1)2060 3365 y Fm(+)22
b Fh(be)2244 3380 y Fg(2)2306 3365 y Fm(+)g Fh(ce)2491
3380 y Fg(3)2553 3365 y Fm(+)g Fh(de)2747 3380 y Fg(4)2786
3365 y Fm(,)33 b(alors)1361 3758 y Fh(A)22 b Ff(\001)1506
3498 y Fb(0)1506 3673 y(B)1506 3733 y(B)1506 3797 y(@)1634
3576 y Fh(a)1639 3697 y(b)1639 3817 y(c)1635 3938 y(d)1727
3498 y Fb(1)1727 3673 y(C)1727 3733 y(C)1727 3797 y(A)1842
3758 y Fm(=)1945 3498 y Fb(0)1945 3673 y(B)1945 3733
y(B)1945 3797 y(@)2074 3576 y Fh(')2138 3591 y Fg(1)2177
3576 y Fm(\()p Fh(P)14 b Fm(\))2074 3697 y Fh(')2138
3712 y Fg(2)2177 3697 y Fm(\()p Fh(P)g Fm(\))2074 3817
y Fh(')2138 3832 y Fg(3)2177 3817 y Fm(\()p Fh(P)g Fm(\))2074
3938 y Fh(')2138 3953 y Fg(4)2177 3938 y Fm(\()p Fh(P)g
Fm(\))2371 3498 y Fb(1)2371 3673 y(C)2371 3733 y(C)2371
3797 y(A)0 4151 y Fm(On)33 b(a)f(donc)h(4)f(syst)m(\022)-46
b(emes)36 b(lin)m(\023)-46 b(eaires)33 b(\022)-49 b(a)33
b(r)m(\023)-46 b(esoudre)34 b(p)s(our)e(trouv)m(er)h(la)g(base)g(duale)
g(:)146 4267 y Fj(>)304 4275 y Fi(linsolve\(A,[1,0,0,0]\);P[1])q(:=ev)q
(alm)q(\(")57 b(&*)52 b(X\);)1495 4394 y Fb(\024)1541
4467 y Ff(\000)p Fm(16)p 1541 4511 176 4 v 1604 4603
a(7)1726 4534 y Fh(;)1796 4467 y Fm(54)p 1796 4511 98
4 v 1821 4603 a(7)1904 4534 y Fh(;)1974 4467 y Ff(\000)p
Fm(39)p 1974 4511 176 4 v 2037 4603 a(7)2159 4534 y Fh(;)2229
4467 y Fm(8)p 2229 4511 49 4 v 2229 4603 a(7)2271 4394
y Fb(\025)1201 4792 y Fh(P)1264 4807 y Fg(1)1331 4792
y Fm(:=)28 b Ff(\000)1549 4725 y Fm(16)p 1549 4769 98
4 v 1574 4860 a(7)1679 4792 y(+)1787 4725 y(54)p 1787
4769 V 1811 4860 a(7)1911 4792 y Fh(x)23 b Ff(\000)2098
4725 y Fm(39)p 2098 4769 V 2123 4860 a(7)2222 4792 y
Fh(x)2277 4751 y Fg(2)2339 4792 y Fm(+)2447 4725 y(8)p
2447 4769 49 4 v 2447 4860 a(7)2523 4792 y Fh(x)2578
4751 y Fg(3)146 4962 y Fj(>)304 4970 y Fi(linsolve\(A,[0,1,0,0]\);P[2])
q(:=ev)q(alm)q(\(")57 b(&*)52 b(X\);)1568 5089 y Fb(\024)1614
5162 y Ff(\000)p Fm(1)p 1614 5207 127 4 v 1653 5298 a(7)1750
5230 y Fh(;)1821 5162 y Fm(6)p 1821 5207 49 4 v 1821
5298 a(7)1879 5230 y Fh(;)1950 5162 y Ff(\000)p Fm(9)p
1950 5207 127 4 v 1988 5298 a(7)2086 5230 y Fh(;)2156
5162 y Fm(4)p 2156 5207 49 4 v 2156 5298 a(7)2198 5089
y Fb(\025)1275 5487 y Fh(P)1338 5502 y Fg(2)1405 5487
y Fm(:=)27 b Ff(\000)1622 5420 y Fm(1)p 1622 5465 V 1622
5556 a(7)1703 5487 y(+)1811 5420 y(6)p 1811 5465 V 1811
5556 a(7)1887 5487 y Fh(x)22 b Ff(\000)2074 5420 y Fm(9)p
2074 5465 V 2074 5556 a(7)2149 5487 y Fh(x)2204 5446
y Fg(2)2266 5487 y Fm(+)2374 5420 y(4)p 2374 5465 V 2374
5556 a(7)2450 5487 y Fh(x)2505 5446 y Fg(3)1885 5944
y Fm(3)p eop
%%Page: 4 4
4 3 bop 0 84 a Fm(Corrig)m(\023)-46 b(e)33 b(TP2)g Fl(Maple)2474
b Fm(P)m(olyn^)-49 b(omes)p 0 124 3820 4 v 146 368 a
Fj(>)304 376 y Fi(linsolve\(A,[0,0,1,0]\);P[3])q(:=ev)q(alm)q(\(")57
b(&*)52 b(X\);)1495 496 y Fb(\024)1541 569 y Fm(6)p 1541
613 49 4 v 1541 704 a(7)1600 636 y Fh(;)1670 569 y Ff(\000)p
Fm(29)p 1670 613 176 4 v 1733 704 a(7)1855 636 y Fh(;)1925
569 y Fm(33)p 1925 613 98 4 v 1950 704 a(7)2033 636 y
Fh(;)2103 569 y Ff(\000)p Fm(10)p 2103 613 176 4 v 2166
704 a(7)2271 496 y Fb(\025)1239 894 y Fh(P)1302 909 y
Fg(3)1369 894 y Fm(:=)1510 826 y(6)p 1510 871 49 4 v
1510 962 a(7)1591 894 y Ff(\000)1700 826 y Fm(29)p 1700
871 98 4 v 1725 962 a(7)1824 894 y Fh(x)23 b Fm(+)2010
826 y(33)p 2010 871 V 2034 962 a(7)2134 894 y Fh(x)2189
853 y Fg(2)2251 894 y Ff(\000)2361 826 y Fm(10)p 2361
871 V 2385 962 a(7)2485 894 y Fh(x)2540 853 y Fg(3)146
1064 y Fj(>)304 1072 y Fi(linsolve\(A,[0,0,0,1]\);P[4])q(:=ev)q(alm)q
(\(")57 b(&*)52 b(X\);)1471 1191 y Fb(\024)1517 1264
y Fm(24)p 1517 1309 V 1541 1400 a(7)1624 1332 y Fh(;)1694
1264 y Ff(\000)p Fm(60)p 1694 1309 176 4 v 1757 1400
a(7)1879 1332 y Fh(;)1950 1264 y Fm(48)p 1950 1309 98
4 v 1974 1400 a(7)2057 1332 y Fh(;)2127 1264 y Ff(\000)p
Fm(12)p 2127 1309 176 4 v 2191 1400 a(7)2296 1191 y Fb(\025)1215
1589 y Fh(P)1278 1604 y Fg(4)1345 1589 y Fm(:=)1486 1522
y(24)p 1486 1566 98 4 v 1510 1658 a(7)1615 1589 y Ff(\000)1725
1522 y Fm(60)p 1725 1566 V 1749 1658 a(7)1849 1589 y
Fh(x)22 b Fm(+)2034 1522 y(48)p 2034 1566 V 2059 1658
a(7)2159 1589 y Fh(x)2214 1548 y Fg(2)2276 1589 y Ff(\000)2385
1522 y Fm(12)p 2385 1566 V 2410 1658 a(7)2509 1589 y
Fh(x)2564 1548 y Fg(3)0 1746 y Fm(V)m(\023)-46 b(eri\014cation)33
b(:)146 1862 y Fj(>)304 1870 y Fi(matrix\(4,4,\(i,j\)->f[j]\(P[i)q
(]\)\);)1579 1991 y Fb(2)1579 2167 y(6)1579 2227 y(6)1579
2286 y(6)1579 2346 y(6)1579 2406 y(6)1579 2466 y(6)1579
2529 y(4)1687 2111 y Fm(1)83 b(0)g(0)g(0)1687 2292 y(0)g(1)g(0)g(0)1687
2472 y(0)g(0)g(1)g(0)1687 2653 y(0)g(0)g(0)g(1)2173 1991
y Fb(3)2173 2167 y(7)2173 2227 y(7)2173 2286 y(7)2173
2346 y(7)2173 2406 y(7)2173 2466 y(7)2173 2529 y(5)0
2826 y Fk(Exercice)53 b(4)146 2942 y Fj(>)304 2950 y
Fi(euclide:=proc\(P,Q\))359 3089 y(local)f(i,A,B,C,R;)359
3191 y(A:=P;)359 3294 y(B:=Q;)359 3396 y(R:=A,B;)359
3498 y(while)g(degree\(B\)<>0)j(do)461 3601 y(C:=rem\(A,B,x\);)461
3703 y(R:=R,C;)461 3805 y(A:=B;)461 3908 y(B:=C;)359
4010 y(od;)359 4112 y([R];)308 4215 y(end:)146 4438 y
Fj(>)304 4446 y Fi(chg_signe:=proc\(L\))359 4586 y(local)d(i,y,R,nb;)
359 4688 y(R:=remove\(x->\(x=0\),L\);)359 4790 y(nb:=0;)359
4893 y(for)g(i)f(from)i(2)e(to)h(nops\(R\))h(do)461 4995
y(if)f(R[i-1]*R[i]<0)j(then)d(nb:=nb+1)i(fi;)359 5097
y(od;)359 5200 y(nb;)308 5302 y(end:)1885 5944 y Fm(4)p
eop
%%Page: 5 5
5 4 bop 0 84 a Fm(Corrig)m(\023)-46 b(e)33 b(TP2)g Fl(Maple)2474
b Fm(P)m(olyn^)-49 b(omes)p 0 124 3820 4 v 146 399 a
Fj(>)304 407 y Fi(sturm:=proc\(P\))359 546 y(local)52
b(i,A,B,C,R;)359 649 y(A:=P;)359 751 y(B:=-diff\(P,x\);)359
853 y(R:=A,B;)359 955 y(while)g(degree\(B\)<>0)j(do)461
1058 y(C:=-rem\(A,B,x\);)461 1160 y(R:=R,C;)461 1262
y(A:=B;)461 1365 y(B:=C;)359 1467 y(od;)359 1569 y([R];)308
1672 y(end:)146 1895 y Fj(>)304 1903 y Fi(eval_sturm:=proc\(P,a\))359
2024 y(chg_signe\(subs\(\\{x=a\\},st)q(urm\()q(P\)\)\))q(;)308
2126 y(end:)146 2350 y Fj(>)304 2358 y Fi
(P:=expand\(\(x-1\)*\(x+2\)*\(x-3)q(\)\);)1398 2561 y
Fh(P)41 b Fm(:=)28 b Fh(x)1688 2520 y Fg(3)1750 2561
y Ff(\000)22 b Fm(2)17 b Fh(x)1970 2520 y Fg(2)2032 2561
y Ff(\000)22 b Fm(5)17 b Fh(x)22 b Fm(+)g(6)146 2795
y Fj(>)304 2803 y Fi(plot\(v->eval_sturm\(P,v\),-4)q(..4\))q(;)574
2844 y
 gsave currentpoint currentpoint translate 270 neg rotate neg exch
neg exch translate
 574 2844 a @beginspecial 0 @llx 0 @lly 612 @urx
792 @ury 2477 @rwi 3205 @rhi @setspecial
%%BeginDocument: TP201.eps
%!PS-Adobe-3.0 EPSF
%%Title: Maple plot
%%Creator: MapleV 
%%Pages:  1
%%BoundingBox: 0 0 612 792 
%%DocumentNeededResources: font Courier
%%EndComments
20 dict begin
gsave
/m {moveto} def
/l {lineto} def
/C {setrgbcolor} def
/Y /setcmykcolor where { %%ifelse Use built-in operator
       /setcmykcolor get
   }{ %%ifelse Emulate setcmykcolor with setrgbcolor
       { %%def
           1 sub 3 { %%repeat
               3 index add neg dup 0 lt { pop 0 } if 3 1 roll
           } repeat setrgbcolor
       } bind
   } ifelse def
/G {setgray} def
/S {stroke} def
/NP {newpath} def
%%%%This draws a filled polygon and avoids bugs/features
%%%%   of some postscript interpreters
%%%%GHOSTSCRIPT: has a bug in reversepath - removing
%%%%the call to reversepath is a sufficient work around
/P {gsave fill grestore reversepath stroke} def
%%%%This function is needed for drawing text
/stringbbox {gsave NP 0 0 m false charpath flattenpath
   pathbbox 4 2 roll pop pop 1.1 mul cvi exch 1.1 mul 
   cvi exch grestore} def
/thin 3 def
/medium 7 def
/thick 16 def
/boundarythick 20 def %% thickness of bounding box
%%IncludeResource: font Courier
576 36 translate
90 rotate
0.108 0.108 scale
1 setlinejoin
1 setlinecap
0.0 setgray
/inch {72 mul} def
/fheight 0.35 inch neg def
    0 G
medium setlinewidth
[] 0 setdash   0.3 G
NP 666 576 m 782 576 l
883 576 l
997 576 l
1112 576 l
1226 576 l
1331 576 l
1441 576 l
1554 576 l
1667 576 l
1783 576 l
1834 576 l
1885 576 l
1914 576 l
1942 576 l
1957 576 l
1971 576 l
1978 576 l
1985 576 l
1989 576 l
1993 576 l
1996 576 l
2000 1858 l
2058 1858 l
2115 1858 l
2227 1858 l
2328 1858 l
2448 1858 l
2550 1858 l
2668 1858 l
2773 1858 l
2888 1858 l
2997 1858 l
3112 1858 l
3217 1858 l
3330 1858 l
3447 1858 l
3550 1858 l
3660 1858 l
3775 1858 l
3886 1858 l
3940 1858 l
3994 1858 l
3998 1858 l
4002 3140 l
4006 3140 l
4009 3140 l
4017 3140 l
4024 3140 l
4039 3140 l
4054 3140 l
4084 3140 l
4114 3140 l
4168 3140 l
4222 3140 l
4337 3140 l
4442 3140 l
4556 3140 l
4663 3140 l
4775 3140 l
4885 3140 l
5000 3140 l
5110 3140 l
5167 3140 l
5224 3140 l
5252 3140 l
5280 3140 l
5294 3140 l
5308 3140 l
5315 3140 l
5322 3140 l
5325 3140 l
5329 3140 l
5332 3140 l
5336 4421 l
5387 4421 l
5439 4421 l
5557 4421 l
5663 4421 l
5775 4421 l
5883 4421 l
5999 4421 l
S
    0 G
medium setlinewidth
NP 3333 500 m 3333 4500 l
S
thin setlinewidth
NP 3290 576 m 3375 576 l
S
NP 3311 705 m 3354 705 l
S
NP 3311 833 m 3354 833 l
S
NP 3311 961 m 3354 961 l
S
NP 3311 1089 m 3354 1089 l
S
NP 3290 1217 m 3375 1217 l
S
NP 3311 1345 m 3354 1345 l
S
NP 3311 1473 m 3354 1473 l
S
NP 3311 1602 m 3354 1602 l
S
NP 3311 1730 m 3354 1730 l
S
NP 3290 1858 m 3375 1858 l
S
NP 3311 1986 m 3354 1986 l
S
NP 3311 2114 m 3354 2114 l
S
NP 3311 2242 m 3354 2242 l
S
NP 3311 2371 m 3354 2371 l
S
NP 3290 2499 m 3375 2499 l
S
NP 3311 2627 m 3354 2627 l
S
NP 3311 2755 m 3354 2755 l
S
NP 3311 2883 m 3354 2883 l
S
NP 3311 3011 m 3354 3011 l
S
NP 3290 3140 m 3375 3140 l
S
NP 3311 3268 m 3354 3268 l
S
NP 3311 3396 m 3354 3396 l
S
NP 3311 3524 m 3354 3524 l
S
NP 3311 3652 m 3354 3652 l
S
NP 3290 3780 m 3375 3780 l
S
NP 3311 3908 m 3354 3908 l
S
NP 3311 4037 m 3354 4037 l
S
NP 3311 4165 m 3354 4165 l
S
NP 3311 4293 m 3354 4293 l
S
NP 3290 4421 m 3375 4421 l
S
medium setlinewidth
NP 666 576 m 5999 576 l
S
thin setlinewidth
NP 666 544 m 666 608 l
S
NP 933 560 m 933 592 l
S
NP 1199 560 m 1199 592 l
S
NP 1466 560 m 1466 592 l
S
NP 1733 560 m 1733 592 l
S
NP 1999 544 m 1999 608 l
S
NP 2266 560 m 2266 592 l
S
NP 2533 560 m 2533 592 l
S
NP 2799 560 m 2799 592 l
S
NP 3066 560 m 3066 592 l
S
NP 3599 560 m 3599 592 l
S
NP 3866 560 m 3866 592 l
S
NP 4132 560 m 4132 592 l
S
NP 4399 560 m 4399 592 l
S
NP 4666 544 m 4666 608 l
S
NP 4932 560 m 4932 592 l
S
NP 5199 560 m 5199 592 l
S
NP 5466 560 m 5466 592 l
S
NP 5732 560 m 5732 592 l
S
NP 5999 544 m 5999 608 l
S
medium setlinewidth
/Courier findfont 115 scalefont setfont
(0) dup stringbbox 576 exch sub exch 3290 exch sub exch m show
(0.5) dup stringbbox 2 idiv 1217 exch sub exch 3290 exch sub exch m show
(1) dup stringbbox 2 idiv 1858 exch sub exch 3290 exch sub exch m show
(1.5) dup stringbbox 2 idiv 2499 exch sub exch 3290 exch sub exch m show
(2) dup stringbbox 2 idiv 3140 exch sub exch 3290 exch sub exch m show
(2.5) dup stringbbox 2 idiv 3780 exch sub exch 3290 exch sub exch m show
(3) dup stringbbox 2 idiv 4421 exch sub exch 3290 exch sub exch m show
(-4) dup stringbbox 544 exch sub exch 2 idiv 666 exch sub exch m show
(-2) dup stringbbox 544 exch sub exch 2 idiv 1999 exch sub exch m show
(2) dup stringbbox 544 exch sub exch 2 idiv 4666 exch sub exch m show
(4) dup stringbbox 544 exch sub exch 2 idiv 5999 exch sub exch m show
boundarythick setlinewidth
%%%% The following draws a box around the plot.
/bd boundarythick 2 idiv def
[] 0 setdash 
NP bd bd m bd 5000 bd sub l 
6666 bd sub 5000 bd sub l 
6666 bd sub bd l 
bd bd l S

showpage
grestore
end
%%Trailer
%%EOF

%%EndDocument
 @endspecial 2638 2844 a
 currentpoint grestore moveto
 2638 2844 a 0 5037 a Fm(On)33
b(constate)g(que)g Fi(eval)p 939 5037 31 4 v 38 w(sturm)h
Fm(augmen)m(te)g(de)f(1)f(\022)-49 b(a)33 b(c)m(haque)h(z)m(\023)-46
b(ero)33 b(de)g Fh(P)14 b Fm(.)146 5153 y Fj(>)304 5161
y Fi(eval_sturm\(P,4\)-eval_sturm)q(\(P,-)q(4\);)1885
5364 y Fm(3)1885 5944 y(5)p eop
%%Page: 6 6
6 5 bop 0 84 a Fm(Corrig)m(\023)-46 b(e)33 b(TP2)g Fl(Maple)2474
b Fm(P)m(olyn^)-49 b(omes)p 0 124 3820 4 v 0 407 a Fi(eval)p
210 407 31 4 v 38 w(sturm)q Fm(\()p Fh(P)s(;)17 b(b)p
Fm(\))24 b Ff(\000)g Fi(eval)p 1060 407 V 38 w(sturm)q
Fm(\()p Fh(P)s(;)17 b(a)p Fm(\))34 b(repr)m(\023)-46
b(esen)m(te)38 b(le)d(nom)m(bre)h(de)f(z)m(\023)-46 b(eros)36
b(du)f(p)s(olyn^)-49 b(ome)36 b Fh(P)48 b Fm(dans)0 527
y(l'in)m(terv)-5 b(alle)34 b([)p Fh(a;)17 b(b)p Fm([.)146
643 y Fj(>)304 651 y Fi(zero_simple:=proc\(P\))410 800
y(quo\(P,gcd\(P,diff\(P,x\)\),x)q(\))359 902 y(end:)0
1141 y Fm(Il)33 b(faut)f(en)h(e\013et)g(calculer)1871
1218 y Fh(P)p 1667 1262 486 4 v 1667 1353 a Fm(pgcd\()p
Fh(P)s(;)17 b(P)2092 1324 y Fc(0)2114 1353 y Fm(\))0
1510 y(P)m(our)33 b(le)g(v)m(\023)-46 b(eri\014er)34
b(on)c(\023)-46 b(ecrie)33 b Fh(P)46 b Fm(sous)33 b(la)g(forme)1200
1781 y Fh(P)14 b Fm(\()p Fh(X)8 b Fm(\))26 b(=)i Fh(\013)1693
1656 y Fj(n)1651 1686 y Fb(Y)1658 1896 y Fj(i)p Fg(=1)1795
1781 y Fm(\()p Fh(X)i Ff(\000)23 b Fh(a)2095 1796 y Fj(i)2123
1781 y Fm(\))2161 1732 y Fj(r)2193 1742 y Fa(i)2337 1781
y Fh(a)2388 1796 y Fj(i)2444 1781 y Ff(2)29 b Fe(C)0
2087 y Fm(On)j(sait)g(alors)g(que)h(c)m(haque)h Fh(a)1136
2102 y Fj(i)1197 2087 y Fm(est)e(un)h(z)m(\023)-46 b(ero)32
b(d'ordre)h Fh(r)2074 2102 y Fj(i)2123 2087 y Ff(\000)22
b Fm(1)31 b(p)s(our)h Fh(P)2609 2051 y Fc(0)2632 2087
y Fm(.)43 b(P)m(ar)33 b(cons)m(\023)-46 b(equen)m(t,)34
b(en)f(notan)m(t)1394 2377 y(\005\()p Fh(X)8 b Fm(\))27
b(=)1805 2253 y Fj(n)1763 2283 y Fb(Y)1769 2493 y Fj(i)p
Fg(=1)1907 2377 y Fm(\()p Fh(X)j Ff(\000)22 b Fh(a)2206
2392 y Fj(i)2235 2377 y Fm(\))2273 2329 y Fj(r)2305 2339
y Fa(i)2331 2329 y Fc(\000)p Fg(1)0 2653 y Fm(on)32 b(a)1318
2774 y(\005)p Ff(j)p Fh(P)1496 2733 y Fc(0)1551 2774
y Fm(et)h(donc)g(\005)p Ff(j)17 b Fm(pgcd\()p Fh(P)s(;)g(P)2441
2733 y Fc(0)2463 2774 y Fm(\))0 2948 y(Si)26 b(deg)q(\(\005\))i
Fh(<)g Fm(deg)q(\(pgcd)q(\()p Fh(P)s(;)17 b(P)1146 2912
y Fc(0)1168 2948 y Fm(\)\),)27 b(il)e(existe)i Fh(a)h
Ff(2)g Fe(C)8 b Ff(\000)g(f)p Fh(a)2092 2963 y Fj(i)2120
2948 y Ff(j)p Fh(r)2192 2963 y Fj(i)2248 2948 y Fh(>)27
b Fm(1)p Ff(g)e Fm(tel)h(que)g Fh(X)15 b Ff(\000)8 b
Fh(a)p Ff(j)17 b Fm(pgcd)q(\()p Fh(P)s(;)g(P)3486 2912
y Fc(0)3508 2948 y Fm(\))25 b(et)h(par)0 3069 y(suite)37
b Fh(P)14 b Fm(\()p Fh(a)p Fm(\))33 b(=)h Fh(P)661 3032
y Fc(0)683 3069 y Fm(\()p Fh(a)p Fm(\))g(=)g(0.)53 b(Or)36
b(ceci)h(est)g(imp)s(ossible)h(si)e Fh(a)e Ff(62)g(f)p
Fh(a)2448 3084 y Fj(i)2476 3069 y Ff(j)p Fh(r)2548 3084
y Fj(i)2610 3069 y Fh(>)f Fm(1)p Ff(g)j Fm(donc)g(\005)e(=)g(pgcd\()p
Fh(P)s(;)17 b(P)3732 3032 y Fc(0)3754 3069 y Fm(\).)0
3189 y(On)33 b(a)f(ainsi)1511 3293 y Fh(P)p 1307 3337
V 1307 3429 a Fm(pgcd\()p Fh(P)s(;)17 b(P)1732 3400 y
Fc(0)1754 3429 y Fm(\))1830 3360 y(=)27 b Fh(\013)2055
3236 y Fj(n)2013 3266 y Fb(Y)2019 3476 y Fj(i)p Fg(=1)2156
3360 y Fm(\()p Fh(X)j Ff(\000)23 b Fh(a)2456 3375 y Fj(i)2484
3360 y Fm(\))146 3576 y Fj(>)304 3584 y Fi
(P:=\(x-1\)^3*\(x-2\)^2*\(x-3\);)1283 3788 y Fh(P)41
b Fm(:=)28 b(\()p Fh(x)23 b Ff(\000)f Fm(1\))1820 3747
y Fg(3)1876 3788 y Fm(\()p Fh(x)g Ff(\000)h Fm(2\))2178
3747 y Fg(2)2234 3788 y Fm(\()p Fh(x)f Ff(\000)h Fm(3\))146
3914 y Fj(>)304 3922 y Fi(factor\(zero_simple\(P\)\);)1440
4126 y Fm(\()p Fh(x)g Ff(\000)f Fm(1\))17 b(\()p Fh(x)22
b Ff(\000)h Fm(2\))17 b(\()p Fh(x)22 b Ff(\000)g Fm(3\))1885
5944 y(6)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
