%!PS-Adobe-2.0
%%Creator: dvips(k) 5.85 Copyright 1999 Radical Eye Software
%%Title: TP4corrige.dvi
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o TP4corrige.ps TP4corrige.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.06.28:1116
%%BeginProcSet: texc.pro
%!
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id
ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{
rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get
/gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp add /cp
X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add /gp X
adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{dup
255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1 adv}
B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2 idiv
S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Created 1994/6/23. Source file was pstricks.doc
% Version 0.93a, 93/03/12.
% For use with Rokicki's dvips.
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
def
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
%  Modification Denis GIROU (CNRS/IDRIS - France) <Denis.Girou@idris.fr> - 15 Jan. 1997
% /Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
% pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
% div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
% d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt { 1 setlinecap [ 0 dx n div ]
dy n div 2 div setdash } { 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Created 1994/6/7. Source file was pst-node.doc
% Version 0.93a/b-97 patch 1, 97/05/09.
% For use with Rokicki's dvips.
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - 9 May 1997
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin /setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse /TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def /TeXcolorgrey{setgray}def /TeXcolorgray{
setgray}def /TeXcolorhsb{sethsbcolor}def /currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse /DC{exch dup userdict exch
known{pop pop}{X}ifelse}B /GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC /Goldenrod{0 0.10 0.84 0 setcmykcolor}
DC /Dandelion{0 0.29 0.84 0 setcmykcolor}DC /Apricot{0 0.32 0.52 0
setcmykcolor}DC /Peach{0 0.50 0.70 0 setcmykcolor}DC /Melon{0 0.46 0.50
0 setcmykcolor}DC /YellowOrange{0 0.42 1 0 setcmykcolor}DC /Orange{0
0.61 0.87 0 setcmykcolor}DC /BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC /RedOrange{0 0.77 0.87 0
setcmykcolor}DC /Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC /Maroon{0
0.87 0.68 0.32 setcmykcolor}DC /BrickRed{0 0.89 0.94 0.28 setcmykcolor}
DC /Red{0 1 1 0 setcmykcolor}DC /OrangeRed{0 1 0.50 0 setcmykcolor}DC
/RubineRed{0 1 0.13 0 setcmykcolor}DC /WildStrawberry{0 0.96 0.39 0
setcmykcolor}DC /Salmon{0 0.53 0.38 0 setcmykcolor}DC /CarnationPink{0
0.63 0 0 setcmykcolor}DC /Magenta{0 1 0 0 setcmykcolor}DC /VioletRed{0
0.81 0 0 setcmykcolor}DC /Rhodamine{0 0.82 0 0 setcmykcolor}DC /Mulberry
{0.34 0.90 0 0.02 setcmykcolor}DC /RedViolet{0.07 0.90 0 0.34
setcmykcolor}DC /Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC /Lavender{0
0.48 0 0 setcmykcolor}DC /Thistle{0.12 0.59 0 0 setcmykcolor}DC /Orchid{
0.32 0.64 0 0 setcmykcolor}DC /DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}
DC /Purple{0.45 0.86 0 0 setcmykcolor}DC /Plum{0.50 1 0 0 setcmykcolor}
DC /Violet{0.79 0.88 0 0 setcmykcolor}DC /RoyalPurple{0.75 0.90 0 0
setcmykcolor}DC /BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC /Periwinkle
{0.57 0.55 0 0 setcmykcolor}DC /CadetBlue{0.62 0.57 0.23 0 setcmykcolor}
DC /CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC /MidnightBlue{0.98 0.13
0 0.43 setcmykcolor}DC /NavyBlue{0.94 0.54 0 0 setcmykcolor}DC
/RoyalBlue{1 0.50 0 0 setcmykcolor}DC /Blue{1 1 0 0 setcmykcolor}DC
/Cerulean{0.94 0.11 0 0 setcmykcolor}DC /Cyan{1 0 0 0 setcmykcolor}DC
/ProcessBlue{0.96 0 0 0 setcmykcolor}DC /SkyBlue{0.62 0 0.12 0
setcmykcolor}DC /Turquoise{0.85 0 0.20 0 setcmykcolor}DC /TealBlue{0.86
0 0.34 0.02 setcmykcolor}DC /Aquamarine{0.82 0 0.30 0 setcmykcolor}DC
/BlueGreen{0.85 0 0.33 0 setcmykcolor}DC /Emerald{1 0 0.50 0
setcmykcolor}DC /JungleGreen{0.99 0 0.52 0 setcmykcolor}DC /SeaGreen{
0.69 0 0.50 0 setcmykcolor}DC /Green{1 0 1 0 setcmykcolor}DC
/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC /PineGreen{0.92 0 0.59
0.25 setcmykcolor}DC /LimeGreen{0.50 0 1 0 setcmykcolor}DC /YellowGreen{
0.44 0 0.74 0 setcmykcolor}DC /SpringGreen{0.26 0 0.76 0 setcmykcolor}
DC /OliveGreen{0.64 0 0.95 0.40 setcmykcolor}DC /RawSienna{0 0.72 1 0.45
setcmykcolor}DC /Sepia{0 0.83 1 0.70 setcmykcolor}DC /Brown{0 0.81 1
0.60 setcmykcolor}DC /Tan{0.14 0.42 0.56 0 setcmykcolor}DC /Gray{0 0 0
0.50 setcmykcolor}DC /Black{0 0 0 1 setcmykcolor}DC /White{0 0 0 0
setcmykcolor}DC end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (TP4corrige.dvi)
@start
%DVIPSBitmapFont: Fa cmmi8 8 2
/Fa 2 111 df<1307EB0F80EB1FC0A2EB0F80EB070090C7FCA9EA01E0EA07F8EA0E3CEA
1C3E123812301270EA607EEAE07C12C013FC485A120012015B12035BA21207EBC04014C0
120F13801381381F01801303EB0700EA0F06131EEA07F8EA01F0122E7EAC18>105
D<3907C007E0391FE03FF83918F8783E393879E01E39307B801F38707F00126013FEEAE0
FC12C05B00815C0001143E5BA20003147E157C5B15FC0007ECF8081618EBC00115F0000F
1538913803E0300180147016E0001F010113C015E390C7EAFF00000E143E251F7E9D2B>
110 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmr8 8 1
/Fb 1 50 df<130C133C137CEA03FC12FFEAFC7C1200B3B113FE387FFFFEA2172C7AAB23
>49 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmsy10 12 2
/Fc 2 18 df<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B0B789E1C>1
D<007FBA1280BB12C0A26C1980CEFCB0007FBA1280BB12C0A26C1980CEFCB0007FBA1280
BB12C0A26C1980422C7BAE4D>17 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmmi12 12 8
/Fd 8 114 df<121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A0A78891B>58
D<121E123FEA7F80EAFFC0A313E0127FEA3F60121E1200A513C0A4EA0180A2EA0300A212
065AA25A5A12200B1D78891B>I<EC0FC0EC7FE0903901F03038903903C0187C90390780
0CFC90381F0006013EEB07F8491303A25B00015D485AA2485A000F4A5A5B121FA249495A
123FA348C7485AA4007E4AC7FCA212FE1720037E1360A2127EA24B13C0A2003E13010203
EB0180EC067C6C010CEB03006CEB183C2607807013063A03C1E01E1C3A01FF800FF83A00
7E0003E02B2D7CAB33>97 D<EB0FE0EA07FFA25CEA001F130FA2495AA449C8FCA4137EA4
5BA4485AA2EC0FC0EC7FF03903F0F0789038F1803C9038F3001E01F6131F48487F01F814
805B4914C0120F5BA3485AA448C7121FA4007EEC3F80A31600007C5CA200FC147E15FE5D
A2007C495AA24A5A5D4A5A003C495A92C7FC6C131E000E5B000F13F8380783E03801FFC0
D8007EC8FC22467CC429>I<EC07F0EC3FFEECF80F903903E0018090390F8000C049C712
60013E14E049EB03F04913070001140F4848EB1FE05B0007EC0FC04848EB078092C7FC12
1F5B123F90C9FC5AA312FEA45AA616201660A2007C15C0ED01806CEC0700150E001E1418
6C147039078003E03903E01F802600FFFCC7FCEB3FE0242D7BAB2A>I<EE07E0EE1FF8EE
3C1CEE7006EEE03E0301137F030313FF4B5AEEC1FEA292380FC0FC1778EE8000151FA44B
C7FCA5157EA591B612805B6D1500DA00FCC7FCA34A5AA54A5AA64A5AA54A5AA54A5AA64A
C8FCA4143E147EA4147C14FCA25CA313015CA2001C5BEA3E03127F00FF5B5CEAFE0700FC
90C9FCEAF80EEA601CEA3838EA1FF0EA07C0305A7BC530>102 D<D907E0133F903A0FF0
01FFC0903A183C03C1E0013090380600F0496C4813789026C01F18137C4B133C4B133ED8
01805B4B133F143FD8030090C7FCA30006137EA2C7FCA24A147FA4494814FEA317FC4948
1301A217F81603494814F0A2EE07E0A2010FEC0FC01780EE1F00163ED91FB0133C5E0298
5BED03E090393F0E0F806EB4C7FCEC01F891C9FC137EA45BA4485AA412031207B512E080
5C303F82AB31>112 D<91380FC00491387FE00E903901F0301C903903C0183C90380780
0C90391F00067C013E14F8491303A25B000115F0485AA2485A000FEC07E05B121FA249EB
0FC0123FA348C7EA1F80A4007EEC3F00A212FEA2157EA2127EA25DA2003E130114034A5A
6C130D6C1319380780713903C1E3F03801FF8338007E0313004A5AA44A5AA44A5AA4143F
147F90383FFFFE815D273F7CAB2B>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmti12 12 8
/Fe 8 118 df<EC0FE0EC7FF8903801F83E903807C00F90391F800780EB3F00017E14C0
491303485A48481307000715805B000F140F484814005D4848133E15FCEC07F0007FEBFF
C0D9FFFEC7FC14C090C9FC5A5AA55AA4ED0180ED03C0007CEC0780A2007EEC0F00003E14
1E157C6C14F06CEB03E03907800F802603C07EC7FC3801FFF838003FC0222D75AB2D>
101 D<EE0F80EE3FE0EEF870923801F038923803E0F8923807E1FC16C3ED0FC7A2EE87F8
92381F83F0EE81E0EE8000153F93C7FCA45D157EA415FE5DA349B512FEA390260001F8C7
FCA314035DA414075DA4140F5DA4141F5DA4143F92C8FCA55C147EA314FE5CA413015CA4
495AA35C1307121C007F5B12FF495AA291C9FC485AEAF81E485AEA7878EA1FF0EA07C02E
5A83C51E>I<143C147E14FE1301A3EB00FC14701400AE137C48B4FC3803C780380703C0
000F13E0120E121C13071238A21278EA700F14C0131F00F0138012E0EA003F1400A25B13
7EA213FE5B12015BA212035B141E0007131C13E0A2000F133CEBC038A21478EB807014F0
14E0EB81C0EA0783EBC7803803FE00EA00F8174378C11E>105 D<D801F0EB0FE0D803FC
EB7FF83A071E01F03E3A0E0F03C01F001ED987001380001C018E130F003C139C003801B8
14C014F838781FF000705BA25C00F049131FD8E03F158091C7FC1200163F491500137EA2
5E01FE147E5B16FE5E12014913015E170F00030203130E4914F0A20307131E0007EDE01C
5B173CEEC038000F167849157017E0ED03C1001FEDE3C049903801FF000007C8127C302D
78AB37>110 D<EC0FE0EC7FFC903801F83E903907E00F8090390F8007C0EB1F00017EEB
03E04914F0A248481301484814F81207485AA2485AA2485A1503127F90C7FCA215074815
F05AA2150F16E05AED1FC0A21680153F16005D157E5D007C495A007E495A003E5C4A5A6C
EB1F80260F803EC7FC3807C0FC3801FFF038003F80252D75AB32>I<D801F0EB3F803A03
FC01FFF03A071E03C0F83A0E0F0F007C001E90389E01FC001C139CECB803003813F0A2D9
1FE013F80078EC00E00070491300A200F05BEAE03F91C8FC1200A25B137EA313FE5BA312
015BA312035BA312075BA3120F5BA3121F5B0007C9FC262D78AB29>114
D<EC0FE0EC7FF8903801F01E903803C00F90390780078090380F0003011E14C015074913
1FA2017CEB3F801378137CED0E0092C7FC137E137F14F014FF6D13C06D13F06D7F6D7F13
00EC0FFE14011400157F81120E003F141E487EA2153E48C7123CA200FC5C12705D007849
5A6C495A6CEB0F80260F803EC7FC3803FFF838007FC0222D7AAB28>I<137C48B4140726
03C780EB1F80380703C0000F7F000E153F121C0107150012385E1278D8700F147E5C011F
14FE00F05B00E05DEA003FEC0001A2495C137E150313FE495CA215071201495CA2030F13
380003167849ECC070A3031F13F0EE80E0153F00011581037F13C06DEBEF830000010114
8090397C03C787903A3E0F07C70090391FFE01FE903903F000782D2D78AB34>117
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmbx12 12 9
/Ff 9 57 df<EA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7EA7FFCEA3FF8EA1FF0EA07C00F0F
788E1F>46 D<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3ADB712FCA526
4177C038>49 D<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE3A0FE000
7FFFD81F806D138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881A46C5A6C
5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A90C7FC4A
5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A49C8FC01
7C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<ECFFF0010713FF
011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D138013FE001F16C0
7FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B020F1380902607FFFEC7FC15
F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A217F8A3EA0FC0EA
3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F80491380D81FF0491300D80FFE
EBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E02D427BC038>I<163FA25E5E5D
5DA25D5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F87EC1F07143E147E147C14F8EB
01F0EB03E0130714C0EB0F80EB1F00133E5BA25B485A485A485A120F5B48C7FC123E5A12
FCB91280A5C8000F90C7FCAC027FB61280A531417DC038>I<0007150301E0143F01FFEB
07FF91B6FC5E5E5E5E5E16804BC7FC5D15E092C8FC01C0C9FCAAEC3FF001C1B5FC01C714
C001DF14F09039FFE03FFC9138000FFE01FC6D7E01F06D13804915C0497F6C4815E0C8FC
6F13F0A317F8A4EA0F80EA3FE0487E12FF7FA317F05B5D6C4815E05B007EC74813C0123E
003F4A1380D81FC0491300D80FF0495AD807FEEBFFFC6CB612F0C65D013F1480010F01FC
C7FC010113C02D427BC038>I<4AB47E021F13F0027F13FC49B6FC01079038807F809039
0FFC001FD93FF014C04948137F4948EBFFE048495A5A1400485A120FA248486D13C0EE7F
80EE1E00003F92C7FCA25B127FA2EC07FC91381FFF8000FF017F13E091B512F89039F9F0
1FFC9039FBC007FE9039FF8003FF17804A6C13C05B6F13E0A24915F0A317F85BA4127FA5
123FA217F07F121FA2000F4A13E0A26C6C15C06D4913806C018014006C6D485A6C9038E0
1FFC6DB55A011F5C010714C0010191C7FC9038003FF02D427BC038>I<121E121F13FC90
B712FEA45A17FC17F817F017E017C0A2481680007EC8EA3F00007C157E5E00785D15014B
5A00F84A5A484A5A5E151FC848C7FC157E5DA24A5A14035D14074A5AA2141F5D143FA214
7F5D14FFA25BA35B92C8FCA35BA55BAA6D5A6D5A6D5A2F447AC238>I<EC7FF00103B5FC
010F14C0013F14F090397F801FFC3A01FC0003FE48486D7E497F4848EC7F80163F484815
C0A2001F151FA27FA27F7F01FE143F6D158002C0137F02F014006C01FC5B6E485A6C9038
FF83FCEDE7F86CECFFE06C5D6C92C7FC6D14C06D80010F14F882013F8090B7FC48013F14
802607FC0F14C0260FF80314E04848C6FC496D13F0003F141F48481307496D13F8150000
FF157F90C8123F161F160FA21607A36D15F0127F160F6D15E06C6C141F6DEC3FC06C6CEC
7F80D80FFE903801FF003A07FFC00FFE6C90B55AC615F0013F14C0010F91C7FC010013F0
2D427BC038>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmtt12 12 54
/Fg 54 125 df<00085B003EEB07C0007FEB0FE0A24814F0A26C14E0B3A2007E1307003E
14C0A20008EB01001C1E75BD33>34 D<903903E001F0A2496C487EA8010F1307A202E05B
A4007FB712E0A2B812F0A36C16E06C16C03B001FC00FE000013F131FA202805BA9017F13
3FA202005B003FB712C04816E0B812F0A36C16E0A2C648C66CC7FCA400015CA2495BA86C
48137CA22C3D7DBC33>I<EB03E0EB0FF8497E497E497E90B5FC9038FE3F803801FC1F13
F8000380EBF00FA7141F5D91393F87FFE001F84913F00001137F147E14FE9026F9FC0713
E001FF903801F8006C13F8ECF00302E05B1507D97FC05B14809038FF000F485D14804814
1F4801C05B5A391FEFE03FD83FC791C7FC903887F07FD87F03137EECF8FE6D6C5A12FEEB
00FF6E5AA291393FF00180EE03C091391FE007E0140F6CEB1FF06C133FEC7FF8903980FF
FE0FD83FC301FF13C0D9FFFC13FF6C496C13806C497E6CD9E00F13006C90388007FE3A00
FE0001F82C3F7DBD33>38 D<140FEC3F80147F14FF491300495AEB07F8495A495A495A49
5A49C7FC5B12015B485A12075B120F5B121F5BA2123F5BA2127F90C8FCA45A5AAD7E7EA4
7F123FA27F121FA27F120F7F12077F12036C7E7F12007F6D7E6D7E6D7E6D7E6D7EEB03FE
6D7E6D1380147F143FEC0F00194D6FC433>40 D<127812FE7E7F6C7E6C7EEA0FF06C7E6C
7E6C7E6C7E6D7E133F80131F6D7E801307801303801301A2801300A28080A41580143FAD
147F1500A45C5CA213015CA213035C13075C130F5C495A133F5C137F49C7FC485A485A48
5A485AEA3FE0485A485A90C8FC5A1278194D78C433>I<14F0497EA8007015E000F8EC01
F000FE140700FF140F01C1133F01F113FF263FF9F913C0000FB61200000314FCC614F06D
5B011F1380D907FEC7FC90381FFF80017F13E090B57E000314FC000F14FF263FF9F913C0
26FFF1F813F001C1133F0101130F00FE140700F814010070EC00E000001500A86D5A242B
79B333>I<141FA24A7EB0007FB71280A2B812C0A36C1680A2C7D83F80C7FCB06EC8FCA2
2A2B7CB333>I<EA07C0EA0FF0EA1FF8123F13FCA213FEA2121F120F1207EA007E13FEA2
13FC1201EA03F81207EA0FF0EA7FE012FF13C013005A12780F196E8A33>I<007FB612FE
A2B8FCA36C15FEA228077BA133>I<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F00
0B0B6C8A33>I<EB01E0497EA21307A2130FA2131F133F137F13FF1203123F5AEAFFF713
E71387EA7E071200B3B3A2003FB512FE48801680A216006C5C213E76BD33>49
D<EB03FF011F13E0017F13FC48B57E48ECFF804815C0260FFE0313E03A1FF0007FF049EB
1FF84848130F49EB03FC127F90C7EA01FE4814005A6C15FF167FA3127E123CC9FCA216FF
16FEA2150116FC150316F81507ED0FF0ED1FE0153F16C0ED7F80EDFF004A5AEC07FC4A5A
4A5A4A5A4A5A4A5A4990C7FC495AEB07F8EB1FF0495A495A495A4890C8FC4848143E4848
147FEA0FF0485A48B7FCB8FCA37E6C15FE283E7BBD33>I<903801FFC0010F13F8013F13
FF90B67E48814881489038807FF03A0FFC000FF801F06D7E484813036F7EA21500A26C5A
6C5AC9FC15015EA215034B5A150F4B5A4B5A913803FFC00103B55A4991C7FC5D8116C06D
8090C76C7EED0FF8ED03FC6F7E6F7E821780163FA2EE1FC0A3123C127EB4FCA2163F1780
167F6C16006D5C6D495A6C6C1303D81FF8EB0FFC3A0FFF807FF86C90B55A6C5D6C15806C
6C91C7FC010F13FC010113C02A3F7CBD33>I<15FF4A7F5C5CA25C5C15DFEC3F9FA2EC7F
1F14FEA2EB01FCA2EB03F8EB07F0A2EB0FE0EB1FC0A2EB3F80A2EB7F0013FEA2485A1203
5B485AA2485A485AA2485AA248C7FC12FEB812E017F0A46C16E0C8381F8000AC021FB512
804A14C04A14E0A26E14C06E14802C3E7DBD33>I<121FEA3F80EA7FC0EAFFE0A5EA7FC0
EA3F80EA1F00C7FCB3A3121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B2B6CAA33
>58 D<EA07C0EA0FE0EA1FF0EA3FF8A5EA1FF0EA0FE0EA07C0C7FCB3A3EA07C0EA0FE0EA
1FF0EA3FF8A213FCA3121F120F12071200A2120113F81203EA07F0120FEA1FE0127FEAFF
C01380130012FC12700E396EAA33>I<1608163E16FF5D15075DED3FFEED7FFC913801FF
F0020713E04A1380023F1300EC7FFC49485A4913E0010F13804990C7FCEB7FFC495A0003
13E0485B001F90C8FCEA7FFE13F8485A13C013F06C7E13FEEA1FFF000713C06C7FC613F8
6D7EEB1FFF6D7F010313E06D13F86D6C7E6EB4FC020F13806E13E0020113F09138007FFC
ED3FFEED0FFF81150181163E160828337BB733>I<007FB71280A2B812C0A36C16806C16
00CBFCA9003FB7FC481680B812C0A36C1680A22A177CA933>I<1210127CB4FC7F13E07F
EA7FFC6C7E380FFF806C13E000017F6C13FCEB3FFE6D6C7E01077F010113F06D7FEC3FFE
6E7E020713C06E13E0020013F8ED7FFE151FED0FFF1503150FED1FFE157FEDFFF8020313
E04A13C0021F13004A5AECFFF8495B010713C0011F5B4948C7FCEBFFFC4813F000075B48
1380D83FFEC8FC485AEAFFF05B138090C9FC127C121028337BB733>I<007FB512F8B7FC
16C082826C813A03F8000FFCED03FE15016F7E82A2EE3F80A7EE7F00A25E4B5AA2ED07FC
ED1FF890B65A5E1680828216F89039F8000FFCED01FE6F7EEE7F80163F17C0161FA2EE0F
E0A7161F17C0A2163FEE7F8016FF4B1300150F007FB65AB75A5E16E05E6C4AC7FC2B3D7D
BC33>66 D<003FB712E04816F0B8FCA27E7ED801FCC71207A8EE03E093C7FCA6151F4B7E
A490B6FCA69038FC003FA46FC7FC92C8FCA817F8EE01FCA9003FB7FC5AB8FCA27E6C16F8
2E3D7EBC33>69 D<003FB712E04816F0B8FCA27E7ED801FCC71207A8EE03E093C7FCA715
1F4B7EA490B6FCA69038FC003FA46FC7FC92C8FCB1383FFFF8487FB57EA26C5B6C5B2C3D
7DBC33>I<003FB612804815C0B712E0A26C15C06C1580260003F8C7FCB3B3AD003FB612
804815C0B712E0A26C15C06C1580233D78BC33>73 D<D87FFC90381FFFE0486C4913F07F
A36C6D6C13E00003913800FC0013F780A213F380A3EBF1F0A38013F0A280A2147C147EA2
143E143FA2801580A3140F15C0A2140715E0A2140315F0A21401A215F81400A3157CA315
3C153EA2151E151F387FFF80B5EAC00FA315076C496C5A2C3D7DBC33>78
D<90381FFFF890B6FC000315C0000F15F0A24815F83A3FFC003FFC01E013074913034848
EB01FEA290C8FCA500FE157FB3AC6C15FF6C15FEA46D1301A36C6CEB03FC01F0130F01FC
133F6CB612F86C15F0A2000315C0C61500011F13F8283F7BBD33>I<D87FFF903803FFF8
B56C4813FCA46C496C13F8D807F09038003F806D147F00031600A36D5C00015DA46C6C49
5AA46D13036D5CA3EC8007013F5CA3ECC00F011F5CA46D6C485AA46D6C485AA4010391C7
FC6E5AA30101137EA2ECFCFEA201005BA5EC7FF8A46E5AA26E5A6E5A2E3E7EBC33>86
D<007FB512C0B612E0A415C048C8FCB3B3B3ABB612C015E0A46C14C01B4D6CC433>91
D<007FB512C0B612E0A47EC7120FB3B3B3AB007FB5FCB6FCA46C14C01B4D7DC433>93
D<EB01C0EB07E0EB1FF8EB7FFE48B51280000714E0001F14F8393FFE7FFC39FFF81FFF49
7EEBC00390C7FC007E147E0038141C200E77BC33>I<007FB612FEA2B8FCA36C15FEA228
077B7D33>I<EB1FFC90B57E000314E048804814FC48809038F007FFEBE0016E7F153F6C
48806C48131FC87F150FA5EC0FFF49B5FC131F137F48B6FC0007140F4813C0381FFC00EA
3FF0EA7FC05B48C7FC5AA56C141F7E6D137FD83FE0497ED9F807EBFFF06CB712F87E6C14
F36C14C1C69138003FF0D91FF090C7FC2D2E7BAC33>97 D<EA3FFC487E12FFA2127F123F
1200ABEC01FE91380FFFC04A13F0027F7F91B512FE90B7FCECFE07DAF800138002E0EB7F
C04AEB3FE04A131FEE0FF091C7FC16074915F81603A217FC1601A9160317F8A26D140717
F06E130F17E06E131FEE3FC06E137F9139F801FF80DAFE07130091B55A495C6E5BD97E3F
13E0D93C0F138090260003FEC7FC2E3E7FBC33>I<ECFFF0010713FE011FEBFF804914C0
4914E048B612F048EBC01F9038FE000F485A485A4848EB07E049EB03C0484890C7FC5BA2
127F90C9FCA25A5AA97E7EA27F003FEC01F06DEB03F86C7E6D13076C6C14F06C6C130F01
FFEB1FE06CEBE07F6C90B512C06C1580013F14006D13FC01075B010013C0252E79AC33>
I<ED7FF84B7E5CA280157F1501ABEB01FF010713C1011F13F1017F13F990B6FC5A481381
3907FE003FD80FF8131F49130F48481307491303123F491301127F90C7FCA25A5AA97E7E
15037F123F6D1307A26C6C130F6D131F6C6C133F6C6C137F2603FF81B512F091B612F8C6
02FD13FC6D13F96D01E113F8010F018013F0D901FEC8FC2E3E7DBC33>I<ECFF80010713
F0011F13FC497F90B6FC48158048018013C03A07FE003FE001F8EB0FF048481307484814
F8491303003F15FC491301127F90C7FC16FE15005A5AB7FCA516FC48C9FC7E7EA36C7E16
7C6C6C14FE7F6C7E6D13016C6CEB03FC6CB4130F6C9038C03FF86C90B512F06D14E06D14
C0010F1400010313FC9038007FE0272E7BAC33>I<ED3FE0913801FFFC020713FE141F4A
13FF5CECFFC015004948137E4A133C010314005CA8003FB612F84815FCB7FCA36C15F826
0003F8C7FCB3AD003FB612804815C0A46C1580283E7DBD33>I<D901FEEB1FE0903A0FFF
C0FFF0013F01F313F84990B512FC90B7FC5A48010313E12607FC00EB80F849017F136048
4890383FC00049131FA2001F8149130FA66D131F000F5DA26D133F6C6C495A6D13FF2603
FF0390C7FCECFFFE485C5D5DD80FCF13C0D981FEC8FC0180C9FCA27FA26C7E7F90B512FC
6CECFFC06C15F0000715FC4815FF4816809038E0000748489038007FC090C8EA1FE04815
0F007E150700FE16F0481503A56C1507007E16E0007F150F6C6CEC1FC001E0147FD81FF8
903801FF80270FFF801F13006C90B55A6C5DC615F0013F14C0010F91C7FC010013F02E44
7DAB33>I<EA3FFC487E12FFA2127F123F1200AB4AB4FC020713C0021F13F0027F7F91B5
FC90B67EED07FEECF801ECF0004A7F4A7F5CA291C7FCA35BB3A43B3FFFF80FFFFC486D48
13FEB56C4813FFA26C496C13FE6C496C13FC303D7FBC33>I<14E0EB03F8A2497EA36D5A
A2EB00E091C8FCAA383FFFF8487FA47EEA0001B3AD007FB612C0B712E016F0A216E06C15
C0243E78BD33>I<383FFFFC487FB5FCA27E7EC7FCB3B3AD003FB612F84815FCB712FEA2
6C15FC6C15F8273D7ABC33>108 D<02FC137E3B7FC3FF01FF80D8FFEF01877F90B500CF
7F15DF92B57E6C010F13872607FE07130301FC01FE7F9039F803FC01A201F013F8A401E0
13F0B3A53C7FFE0FFF07FF80B548018F13C0A46C486C01071380322C80AB33>I<4AB4FC
263FFC0713C0267FFE1F13F000FF017F7F91B5FC6CB67E6CEC07FEC6EBF801ECF0004A7F
4A7F5CA291C7FCA35BB3A43B3FFFF80FFFFC486D4813FEB56C4813FFA26C496C13FE6C49
6C13FC302C7FAB33>I<EB01FE90380FFFC0013F13F0497F90B57E488048EB03FF2607FC
0013804848EB7FC049133F4848EB1FE049130F4848EB07F0A2007F15F890C71203A300FE
EC01FCAA6C14036C15F8A26D1307003F15F06D130FA26C6CEB1FE06D133F6C6CEB7FC06C
6CEBFF802603FF0313006CEBFFFE6C5C6D5B6D5B010F13C0D901FEC7FC262E7AAC33>I<
EC01FE3A3FFC0FFFC0486C4813F000FF017F7F91B512FE6CB7FC6CEBFE07C6D9F8001380
02E0EB7FC04AEB3FE04A131FEE0FF091C7FC16074915F81603A217FC1601A9160317F8A2
6D140717F06E130F17E06E131FEE3FC06E137F9139F801FF80DAFE07130091B55A495C6E
5B6E13E0020F1380DA03FEC7FC91C9FCAF383FFFF8487FB57EA26C5B6C5B2E427FAB33>
I<02FF137C0107EBE0FE011F13F0017F13FC90B512FE4814FF4813C03907FE003F484813
1F01F0130F484813071503485A491301127F90C7FC15005A5AA97E7E15017F123F6D1303
15076C7E6C6C130F6D131FD807FE137F3903FF81FF6CEBFFFE6C14FC6D13F86D13F0010F
13C0903801FE0090C8FCAF92387FFFFC92B512FEA46F13FC2F427CAB33>I<ED03FE3B7F
FF801FFF80B5D8C07F13E002C1B5FC02C314F014C76C9038CFFE0F39001FDFF09139FFC0
07E092388003C092C8FC5C5C5CA25CA25CA35CB2007FB512FEB7FCA46C5C2C2C7DAB33>
I<90381FFE0F90B5EA8F80000314FF120F5A5AEBF007387F800190C7FC00FE147F5A153F
A37E007FEC1F0001C090C7FCEA3FF8EBFFC06C13FF6C14E0000314F8C680011F13FF0100
1480020713C0EC007FED1FE0007C140F00FEEC07F01503A27EA27F15076D14E06D130F6D
EB3FC09038FE01FF90B61280160000FD5C00FC14F8D8F83F13E0D8780790C7FC242E79AC
33>I<EB03C0497E130FAA003FB612FC4881B7FCA36C5D26000FE0C8FCB3A3161FEE3F80
A5167F6E140001075C6E5A9138FE07FE6DB55A6D5C6D5C6E5B021F1380DA07FCC7FC2938
7EB633>I<D83FFCEB1FFE486C497E00FF5CA2007F80003F800000EC007FB3A75EA25DA2
6D5B90387F800FDAE03F13FC6DB612FE17FF6D806D01FE13FE01039038F83FFC010001C0
C7FC302C7FAA33>I<3B3FFFC00FFFF0486D4813F8B56C4813FCA26C496C13F86C496C13
F0D801F8C7EA7E006D14FE00005DA26D1301017E5CA2017F13036D5CA2EC8007011F5CA2
ECC00F010F5CA36D6C485AA3ECF03F010391C7FCA26E5A0101137EA2ECFCFE01005BA214
FF6E5AA36E5AA26E5A6E5A2E2B7EAA33>I<3B7FFF8007FFF8B56C4813FC6E5AA24A7E6C
496C13F8D80FC0C7EA0FC06D141F00071680A56D143F00031600A3EC0FC0EC1FE0A23A01
F83FF07EA3EC7FF8147CA20000157C9039FCFCFCFCA3ECF87CA2017C5C017D137EECF03E
A2017F133FA26D486C5AA3ECC00F90390F8007C02E2B7EAA33>I<3B3FFFC07FFF80486D
B512C0B500F114E0A26C01E014C06C496C13803B00FE000FE000017F495AEB3F804B5A6D
6C48C7FC90380FE07E903807F0FEECF1FC903803FBF8EB01FF6D5B5D6E5A143F6E5A143F
814A7E14FF903801FBF0ECF9F8903803F1FCEB07E0157E90380FC07F011F6D7E90383F80
1F02007F496D7E01FE6D7E484813033B7FFFC03FFFE0B56C4813F0A46C496C13E02C2B7D
AA33>I<3B7FFF801FFFE0B56C4813F06E4813F8A24A6C13F06C496C13E0D803F8C7EAFC
00000114015E7F000014036D5C137EA2017F495A7FA26E485A131FA26D6C485AA214E001
0749C7FCA214F01303157EEB01F8A2157C010013FC14FC5D147C147DEC3FF0A36E5AA36E
5AA2141F5DA2143F92C8FCA3147EA214FE003F5B1301387F81F81383EB87F0139FEBFFE0
6C5B5C6C90C9FCEA0FFCEA03F02D427DAA33>I<127CA212FEB3B3B3B3127CA2074D6AC4
33>124 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmbx12 17.28 23
/Fh 23 118 df<EF7FFF041FB512E04BB612FC030F81037F6F7E4AB5D8C0037F020701FC
C76C7E4A01E0EC1FF0023F0180147F4A90C748487EDAFFFC5C49498260495B5D5BA2495B
A3725BA2725B725BF13F8096C9FCAA0503B512FEBBFCA6D8000F01E0C7120184B3B3AF00
3FB6D8F803B71280A651647DE35A>12 D<140CEC7F80ECFFC04913E04913F015F85B5B49
13FC5BA24913F890B5FC4814F015E04814C0481400485B4813F814E04813804848C7FC48
5A13F013C06CC8FC123C12181E1C5EE551>19 D<16F04B7E1507151F153FEC01FF140714
7F011FB5FCB7FCA41487EBE007C7FCB3B3B3B2007FB91280A6395D74DC51>49
D<913801FFF8021FEBFFC091B612F8010315FF010F16C0013F16F09026FFF80180489026
C0003F13FE4890C7000F7FD807FC0203148048486E14C048486E14E04981D83FF86F13F0
01FE6F13F8487E6E6E13FC80B56F13FE80A319FF83A26C5BA26C5BA26C90C8FCEA07FCD8
00E04B13FE90C9FCA219FC5FA219F85F19F04D13E0A24D13C0198094B512004C5B604C5B
4C5B4C5B604C90C7FC4C5A4C5A4C5A4B13E04B5B4B5B4CC8FC4B5A4B5AED3FE04B48143F
4B5A4A90C8FC4A5ADA07F8157E4A5A4A5A4A5A4A5A02FEC912FE495A495A4948ED01FC49
48150749B8FC5B5B90B9FC5A4818F85A5A5A5A5AA2BAFC19F0A4405D78DC51>I<BA12F8
F1FFE01AFEF2FFC01BF01BFED800010280C76C7F070714C0070080083F13F8080F7F747F
747F8986897480A3757FA389A865A398B55AA26562655091C9FC64505B081F5B505B97B5
5A07071480077F49CAFC93B812F81BC050CBFCA2747E932680000314E0DE007F13F8071F
7F07077F737F7380738088747FA2747FA3747FA988A91F0F76EC1F80A286A277133F7417
00748067746E13FEB96E6E485A093F9038FE07F87590B55A09075D09015DE1003F5CD001
FCC7FC71637AE178>82 D<B800FE047FB612E0A6D8000302C0CB6CEB8000E307F8C7FCA2
6D6E611D0F6D6E611D1F6E6D611D3FA26E6D611D7F6E6D96C8FC656E6D601C01A26E6E4C
5AA26E6E5F1C076E6E5F1C0F6E6271161FA26F6D5F1C3F6F6D5F1C7F6F6D94C9FC64A26F
6D5E1B016F6E5D1B036F6E5D1B07A26F6E4A5AA26F6E5D1B1F706D5D1B3FA2706D4A5AA2
706D92CAFC63706D5C1A017002805B1A03A27002C05B1A077002E05B1A0F7002F05B1A1F
A2716D485AA27101FC5B1A7F7101FE90CBFC62A2716D5AA2715CA2715CA2715CA3715CA2
725BA2725BA37290CCFCA2725AA2725AA2725A73637DE17A>86 D<91381FFFFC0103B612
E0011F15FC017F15FF90B812C0489026F0003F13F04803077F6E01017F707F486D6E7E85
83717FA26C4982836C4982A238007FC0011FC8FC90C9FCA7047FB5FC033FB6FC0203B7FC
143F49B5EAF00F0107EBFE00011F13F0017F13C048B5C7FC4813FC485B485B485B5C5A48
5BA291C8FCB5FCA45FA25F6C6D143B177B6C6D14F36EEB01E36C6D0107806C6DD90FC313
FF6C01FFD9FF8114FE00019126FFFE0114FF6C6C4A7E011F02F07F010302C0131F902600
3FFCC7000313FE48407BBF4E>97 D<903807FF80B6FCA6C6FC7F7FB3A9EFFFF8040FEBFF
80047F14F00381B612FC038715FF92278FFE007F13C0DBBFE0010F7FDBFF8001037F93C7
6C13FC03FC6E7F4B6F7E4B814B6F13804B17C0851BE0851BF0A21BF8A2851BFCA41BFEAC
1BFCA44F13F8A31BF0A24F13E0A21BC04F13806F5D6F17006F4B5A6F4B5A4A6C02035B91
26FC7F80495BDB3FE0011F13C09127F80FFC01B55A4A6CB648C7FCDAE00115F84A6C6C14
E04A011F91C8FC91C7000113E04F647BE35A>I<92380FFFFC4AB612E0020F15FC023F15
FF91B8128001039026FE000713C04901F015E0011F01C05B4990C7FC49484A13F0495A48
5B5A5C487013E0485B7113C0485B0501130048EE007C95C7FCA2485BA4B5FCAC7EA280A2
7EA36C7F19FC7E806CEF01F86C7F6EED03F06C6D15076CEF0FE06D6C6CEC1FC06D6DEC3F
806D6DEC7F00010701FCEB01FE6D9039FF801FFC010091B55A023F15E0020F1580020102
FCC7FCDA000F13C03E407BBF48>I<F17FF8050FB5FCA6EF000F8484B3A9ED0FFF4AB512
F0020F14FE023FECFF8391B712E301039138007FF34901F0EB07FB011F01C00101B5FC49
497F4948C8123F49488148498148835C485B5AA2485BA25AA3485BA4B5FCAC7EA47E80A2
7EA27E807E6E5D6C5F6C6D5D6C6D5D6E92B5FC6D6C5C011F6D0107806D01E0D91FF77F6D
01FCD9FFE7EBFFFE010190B612876D6CECFE07021F14F8020314C09139001FFE004F647B
E35A>I<92381FFFC04AB512FE020F6E7E027F15F091B77E0103D9FE0113FE010F9039F0
003FFF4901C0010F7F4990C76C7F494802017F49488248498048496F7E85485B48717EA2
4849151F855AA34849811A80A3B5FCA291B9FCA31A000280CBFCA67EA3807EA36C7F190F
6CF01F806C7F193F6C6D17006C606C6D16FE6D6C4B5A6D6C4B5A6D01C0EC0FF06D01F0EC
3FE06D01FCECFFC001019026FFC00F5B6D91B6C7FC023F15FC020715F002001580030701
F0C8FC41407CBF4A>I<EE3FFC0303B51280031F14C092B612F0020315F84A9038F03FFC
021FEB807F4A903800FFFEEC7FFC4A484813FF5B15F05B15E05B7013FE5D49ED7FFCEF3F
F8EF1FF0EF038094C7FCAFB812C0A6D8000F01E0C8FCB3B3B0003FB612FEA638647CE331
>I<F107F0DB7FFCEC3FFC020FB500E090B5FC027FECFC0349B7000F14800107D9E00FEB
DFF149D90001D9FF0113C049486D13FCD97FFC147F4A143F4948DA1FFE148048717E1B00
48F0803C4A6E91C7FC4884A24884A96C60A26C606E5C6C95C8FCA26C5F6D6C4A5A6E147F
D91FFEECFFF06D6C495B49D9E00F5B013D90B6C9FCD9787F14FC020F14E09027F8007FFC
CAFC92CCFCA21201A47F7FA26D7E14E091B77E18FC6CEFFF8019F06D17FC19FF6D846D84
86010784011F84137F48BA7E000701C0C8FC4890C900077F484816014848EE007F49173F
007F727E5B00FF84A66C6C4D5AA26C6C4D5AA26C6C4D5A6C6C4D5A6C6D4B5B6C01E00307
5B6C01F8031F5B6C6CB4DBFFFEC7FC011F01F0010F13F8010790B712E0010094C8FC020F
15F0DA003F01FCC9FC4A5E7CC051>I<EB0FE0EB3FF8497E497E487F4880A24880A76C5C
A26C91C7FC6C5B6D5A6D5AEB0FE090C9FCB0903807FF80007FB5FCA6C6FC7F7FB3B3ADB7
12C0A622657BE42C>105 D<903807FF80B6FCA6C6FC7F7FB3B3B3B3ADB712E0A623647B
E32C>108 D<902607FF80D90FFFEE7FF8B691B500F00207B57E040302FC021F14E0040F
02FF027F14F8043F6F48B67E93267FC03F9027C003FE017F9326FE000F903BE007F0007F
FFC6DA81F86D9026F00FC06D7F6DD983E04CC7FC6DD987C06DD9F83E6E7FDB8F805E93C7
DAFC7882039E6E4A8003BCEEFDE003B8DCFFC08215F84B5FA24B94C8FCA44B5EB3B2B7D8
F007B7D8803FB612FCA67E407BBF89>I<902607FF80EB0FFFB691B512F0040314FC040F
14FF043F8193267FC03F7F9326FE000F7FC6DA81F86D7F6DEB83E06DD987C06D7FED8F80
93C780039E8015BC03B88215F85DA25DA45DB3B2B7D8F007B71280A651407BBF5A>I<92
3807FFE092B6FC020715E0023F15FC91B8FC010349C66C13C04901F0010F7F011F018001
0113F84990C87F49486F7E49486F7E48496F138048496F13C04A814819E04819F04A8148
19F8A24819FC4A81A24819FEA4B518FFAC6C19FEA46C6D4B13FCA36C19F8A26C6D4B13F0
A26C19E06E5D6C19C06C6D4B13806C6D4B13006D6C4B5A6D6C4B5A6D01C001035B6D01F0
010F5B010301FE017F13C0010090B7C7FC023F15FC020F15F0020092C8FC030713E04840
7CBF51>I<902607FF80EBFFF8B6010FEBFF80047F14F00381B612FC038715FF92268FFE
0014C0DBBFE0011F7FC6DAFF806D7F6D91C7000313FC6D01FC6E7F4B6E7F4B814B17804B
6F13C0851BE0A27313F0A21BF885A21BFCA285A21BFEAC1BFC61A31BF8A2611BF0A24F13
E0A24F13C01B806F5D6F92B512006F4A5B6F4A5B6F4A5B6F6C495B04E0013F13C09226CF
FC01B55A03C7B648C7FC03C115F8DBC07F14E0041F91C8FC040113E093CBFCB3A4B712F0
A64F5C7BBF5A>I<D90FFFEB07F8B6EB3FFF4C13C04BB512F04B14F8923907F87FFCED0F
E0C6923880FFFE6D495A6DD91E0113FF153CA21578A24B6C13FEA24BEB7FFCA2EF1FF04B
EB07C094C7FCA45DB3B0B712F8A638407BBF42>114 D<913A3FFF8007800103B5EAF80F
011FECFE3F017F91B5FC48B8FC48EBE0004848C7120FD80FF814034848804980003F167F
49153F127FA200FF161FA27FA213F86D92C7FC13FF14F06CEBFF8015FEEDFFE06C15FCEE
FF806C16E06C826C16FC6C826C826C6C1680131F010716C0010116E0EB001F020015F015
03ED003F040713F8007C150100FC81177F6C163FA2171F7E18F07FA26D16E06D153F7F6D
ED7FC06DEDFF8001FF5C02C00107130002F8EB7FFE019FB612F8010F15E0D8FC03158048
C66C49C7FC48010713C035407BBF40>I<EC07E0A6140FA5141FA3143FA2147FA214FF5B
A25B5B5B5B137F48B5FC000F91B512FEB8FCA5D8001F01E0C8FCB3AFEF0FC0AC6DED1F80
A2816DED3F00816D157E6D6D5B6DEBFF036EEBFFF86E5C020F14C0020191C7FC9138001F
FC325B7DDA3F>I<902607FFC0ED3FFEB60207B5FCA6C6EE00076D826D82B3B360A360A2
6D5E181E181C6D163C6F14F86D4B487F6D01F8D907E08003FED93FC0ECFF80010090B65A
6E5D021F14FC020314F0DA003F138051407BBF5A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmcsc10 12 4
/Fi 4 110 df<DB03FF140C033F01F0131C4AB500FC133C91390FFE007FDA1FF090380F
C07CDA7F80903803E0FC4948C812F0D903FC15794948153FD91FF0151F4948150F494815
074A150349C9FC48481601120349160012074848177CA24848173CA2123FA249171C127F
A319005B12FFAC127F7FA2191CA2123F7FA2001F183C19386C7EA26C6C1778000318706D
17F0000118E06C6C16016D6C16C06E15036D6CED07806D6CED0F00D907F8151E6D6C5D6D
B45D6D6C6C495ADA1FF0EB07C0DA0FFEEB7F800201B500FEC7FCDA003F13F0030313803E
4879C54E>67 D<157015F8A34A7EA24A7EA34A7E81A291380E3F80A2021E7FEC1C1FA24A
6C7EA34A6C7EA202F07FECE003A249486C7EA349486C7EA201078091C77EA249B67EA249
81011CC7121FA2013C810138140FA2496E7EA201F081491403120183486C140100074B7E
D81FF84A7EB5027F13F8A335357CB43D>97 D<B512FEA3000390C9FCEA01FCB3A9EE01C0
A416031780A41607A2160F161FA2167FEEFF00486C1307B8FCA32A337BB233>108
D<D8FFFEEE7FFFA26D93B5FC000318C06C1880D9DF80EC01DFA2D9CFC0EC039FA3D9C7E0
EC071FA2D9C3F0140EA3D9C1F8141CA2D9C0FC1438A3027E1470A26E14E0A391391F8001
C0A291390FC00380A3913907E00700A2913803F00EA36E6C5AA26E6C5AA3ED7E70A26F5A
A3486C6D5A487ED81FFC6D48EB3FC0B50080020FB5FCA2ED070040337BB24A>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmr12 12 56
/Fj 56 123 df<9239FF8003F8020F9038F01FFE913A3F807C3E07913BFC000E780F80D9
01F090381FF01F494890393FE03FC04948137F494814C0011FEE1F8091C7FC4991393F80
0600013E021F90C7FC137EAFB912F0A3D8007EC7D81F80C7FCB3B18301FF4A7E007FD9FE
1FB512E0A33A467EC539>11 D<4AB4FC020F13C091383F00F002FC1338D901F0130C4948
131E4948133E4948137F011F5C49C7FCA2013E147E017E143C93C7FCAD167FB8FCA3D800
7EC7FC8282B3B001FFEC7F80007FD9FC1FB5FCA330467EC536>I<4AB47E020F13F79138
3F007F02FC7FD901F05B49485B495A495A131F49C77E82133E137EAFB8FCA3D8007EC712
3FB3B201FFEC7F80007FD9FE3FB5FCA330467EC536>I<DBFF80EB3FE0020F9039E003FF
F8913B3F80780FE01E913BFC001C3F0007D901F0D9067CEB01804948D90FF8497E4948D9
3FF0130749484948497E011F171F91C75B5B013E6E486D5A017E021F6E5A96C8FCADF10F
E0BBFCA3D8007EC7391F80001F190F1907B3B001FF4A6C497E007FD9FE1FB50087B512E0
A34B467EC551>I<127812FCA27E7E6C7E123FEA0FC06C7E6C7E12016C7E137C7F130E7F
EB0380EB0100111275C431>18 D<130FEB1F80A2133F137FEBFF005BEA01F8485A485A5B
485A48C7FC123E12385A5A124011126CC431>I<121E123FEA7F80EAFFC0A313E0127FEA
3F60121E1200A513C0A4EA0180A2EA0300A212065AA25A5A12200B1D78C41B>39
D<1406140E14181430147014E0EB01C0EB0380EB0700A2130E5B133C133813785BA2485A
A2485AA212075BA2120F90C7FCA25A121EA2123EA3123C127CA6127812F8B21278127CA6
123C123EA3121EA2121F7EA27F1207A27F1203A26C7EA26C7EA213781338133C131C7F7F
A2EB0380EB01C0EB00E0147014301418140E1406176477CA26>I<7E7E12607E12387E7E
7E6C7EA26C7E6C7E7F137013787FA27FA27FA214801307A214C01303A214E01301A214F0
A3130014F8A61478147CB2147814F8A614F01301A314E0A2130314C0A213071480A2130F
1400A2131EA25BA25B137013F05B485A485AA248C7FC120E5A5A12305A5A5A16647ACA26
>I<16C04B7EB3AB007FBAFCBB1280A26C1900C8D801E0C9FCB3AB6F5A41407BB84C>43
D<121E123FEA7F80EAFFC0A313E0127FEA3F60121E1200A513C0A4EA0180A2EA0300A212
065AA25A5A12200B1D78891B>I<B612C0A51A057F9721>I<121E123FEA7F80EAFFC0A4EA
7F80EA3F00121E0A0A78891B>I<143014F013011307131F13FFB5FC13E713071200B3B3
AF497E497E007FB6FCA3204178C031>49 D<EB03FE90381FFFC0017F13F03901F80FFC39
03C001FE48C7127F000EEC3F80000CEC1FC04815E048EC0FF0A248EC07F8A2127C00FE15
FC7E6D1303A46CC71207123EC813F8A3ED0FF0A216E0151F16C0153F1680ED7F00157E5D
4A5A5D4A5A4A5A4A5A4AC7FC141E5C5C5C495A495A495A91C7120C130E5B4914185B5B48
5A49143848C8123000061570000FB612F05A5A5AB712E0A326417BC031>I<49B4FC010F
13F0013F13FC9038FE01FE3901E0007FD80380EB3F8048C7EA1FC0000EEC0FE0D80F8014
F0EA1FE016F86D1307A36C5AA2D80380130FC813F0A3ED1FE016C0A2ED3F801600157E5D
EC03F0EC1FC0D90FFFC7FC15F090380001FCEC007EED1F8016C0ED0FE0ED07F016F81503
16FC16FE1501A216FFA3121E123F487E487EA216FEA24913036CC713FC127E0070EC07F8
003015F06C140F000E15E06CEC1FC0D803E0EB7F803A01FC01FE0039007FFFFC011F13E0
010190C7FC28427CC031>I<1507A25D5DA25D5DA25DA25C5C811406140E140C14181438
1430146014E014C01301EB038014005B13065B131C13185B137013605B12015B48C7FC5A
1206120E120C5A123812305A12E0B812C0A3C86CC7FCAC4B7E4A7F91B61280A32A427DC1
31>I<000215C0D807C0130701FCEB7F8090B612005D5D15F05D158026063FFCC7FC90C9
FCAE14FF010713E090381F01F0903878007C01E07FD807807F90C71380ED0FC01202C8EA
07E016F0A3ED03F8A316FCA4121C123E127F487EA216F890C7FC4814074815F01260A26C
EC0FE016C06C141F001C15806CEC3F006C147E3903C001FC3901F807F039007FFFE06D13
80D907FCC7FC26427BC031>I<121CA2EA1F8090B712C0A34816801700A25E0038C8120C
00305D127000605D5EA25E484A5A4BC7FCA2C812065DA25D5D5DA25D14015D1403A24AC8
FCA25C140E141EA2143E143CA2147CA214FCA313015CA31303A61307AA6D5A6D5A2A447B
C231>55 D<121E123FEA7F80EAFFC0A4EA7F80EA3F00121EC7FCB3A5121E123FEA7F80EA
FFC0A4EA7F80EA3F00121E0A2B78AA1B>58 D<DB0FFE146092B512C0020302F013E0913A
1FFC01FC0191393FC0001E02FFC7EA0703D901FCEC0387D907F0EC00C74948156F494815
3F4948151F49C9120F13FE000117075B484816031207491601120F491600121FA2123F49
1760A2127FA219005B12FFAC127F7FA21960123FA27F121FA26C6C17C0A212076DEE0180
12036C6C16036D170000001706137F6D6C5D6D6C5D6D6C5D6D6C5DD901FC4A5A6DB4EC07
80DA3FC0011FC7FCDA1FFC13FC0203B55A020014C0DB0FFEC8FC3B467BC446>67
D<B912F8A3000101C0C7127F6C49EC07FC017F15011700187C183C181CA284A31806A418
07040C7FA395C7FCA4161CA2163C167CED01FC91B5FCA3EC8001ED007C163C161CA2160C
A319C0A3F0018093C7FCA41803A21900A260A260A2181EA2183E187EEF01FE01FF150748
6D147FB95AA33A447CC342>69 D<B912F0A3000101C0C7127F6C49EC0FF8017F15031701
170018781838A2181CA3180CA4180E1806160CA21800A5161CA2163C167CED01FC91B5FC
A3EC8001ED007C163C161CA2160CA793C8FCB0497E487FB612F8A337447CC340>I<DB0F
FE146092B512C0020302F013E0913A1FFC01FC0191393FC0001E02FFC7EA0703D901FCEC
0387D907F0EC00C74948156F4948153F4948151F49C9120F13FE000117075B4848160312
07491601120F491600121FA2123F491760A2127FA296C7FC5B12FFAC007F4BB612C07FA2
93C7387FF000003F715A181F7F121FA26C7EA212077F12036C7E7F1200137F6D7E6D6C15
3F6D7ED907F81567D901FC15C76DB4EC0383DA3FE0EB0F01DA1FFC137E0203B5EAF80002
0002E01360DB0FFEC9FC42467BC44D>I<B612F0A3C6EBF0006D5A6D5AB3B3B3A4497E49
7EB612F0A31C447DC323>73 D<010FB512FEA3D9000313806E130080B3B3AB123F487EA2
487EA25D14011380D87F005B006C495A12306C495A6C495A0007EB1F802603E07FC7FC38
00FFFCEB1FE027457BC332>I<B612F8A3000101E0C9FC6C5B6D5AB3B31830A418701860
A518E0A3EF01C0A217031707A2170F173F177F01FFEC01FF486D011F1380B9FCA334447C
C33D>76 D<ED1FFC4AB512C091390FF007F891393F8000FE027EC7123FD901F8EC0FC049
486E7ED90FE0EC03F849486E7E49486E7E49C9127F01FE707E49161F0001844848707EA2
4848707E000F84491603001F84A2491601003F84A3007F844982A300FF1980AC007F1900
6D5EA4003F606D1603A2001F606D1607000F60A26C6C4C5AA26C6C4C5A0001606C6C4C5A
6D167F6D94C7FC6D6C15FE6D6C4A5A6D6C4A5AD903F0EC07E0D901FCEC1FC0D9007E4AC8
FC6E6C13FE91390FF007F80201B512C09126001FFCC9FC41467BC44C>79
D<B712FCEEFFC017F800019039C0000FFE6C49EB01FF017F9138007F80EF1FE0170FEF07
F018F8EF03FCA218FE1701A218FFA718FEA2170318FCA2EF07F818F0EF0FE0EF1FC0EF7F
80933801FE00EE0FFC91B612F017800280C9FCB3A9497E487FB612C0A338447CC342>I<
003FB912E0A3903BF0003FF0007F01806D48130F003EC7150348EF01F000781700197012
70A219301260A5481818A5C81600B3B3A54B7EEDFFFC0103B7FCA33D447CC346>84
D<B600C0010FB5FCA3000101E0C813F06C49ED1F806D48ED0F00A21806B3B3A7013F5EA2
80131F6080010F5E13076E5D010316E06D6C4A5A6D6C4A5A027E4AC7FC6E6C131EDA1FE0
137C913907F803F00201B55A6E6C1380DB07FCC8FC40457CC349>I<130C131E133F497E
EBF3C03801E1E03803C0F03807807848487E001E7F487F0070EB038048EB01C00040EB00
801A0E75C331>94 D<EB07F8EB3FFF9038F80FC03901C003E048C66C7E00066D7E48147C
D80F80137E486C133E6D133F8182A26C5A6C5AC8FCA4EC0FFF49B5FC90380FFC1FEB3FC0
EBFF00EA03FCEA07F0485A121F485A5B127F176048C7FCA4153FA26C146F7F003F9138C7
C0C0391FC001873B0FE00307E1803A07F81E03FF2701FFFC0113003A001FE0007C2B2E7C
AC31>97 D<EA01FC12FFA3120312011200B3EC01FC91380FFF8091383E07E091387000F8
02C0137CD9FD807F01FFC77EEE0F804915C049EC07E017F0160317F8A217FC1601A317FE
A917FCA21603A217F8A2EE07F017E07FEE0FC001FBEC1F801700D9F180133ED9F0C05B90
39E06001F891383C07E09039C01FFF8090260003FCC7FC2F467DC436>I<EC7F80903803
FFF090380FC07C90383E000E49130349EB01804848EB00C0000314074848EB0FE0484813
1FA2121F5B003FEC0FC0ED0780007F91C7FC90C9FCA25AAA7EA27FA2123F16306C7EA200
0F15606C7E6C6C14C00001EC01806C7E017CEB07006D130E90381FC078903807FFF00100
1380242E7DAC2B>I<16FE157FA315011500167EB3EC7F80903803FFF090380FC0789038
3F000C017C13064913034848EB01FE00031400485A4848147EA2121F485AA2127FA290C8
FCA25AA97EA37F123FA2121F7F000F15FE6C7E000314016C6CEB037E6C6C147F017C010E
13806D011C13FE90380FC0F0903803FFE09026007F0013002F467DC436>I<EB01FE9038
07FFC090381F03F090387C00F849137C48487F48487F0007158049130F000F15C0121F49
14E0003F1407A2127F90C713F0A35AA290B6FCA290C9FCA67EA36C7EA21630121F7F000F
15606C7E000315C06C6CEB01806C6CEB0300017C13066D131C90380FC078903803FFE090
38007F80242E7DAC2B>I<EC1FC0EC7FF0ECF038903803E07C903807C0FC90380F81FEA2
EB1F0190383F00FCA2013E1330017E1300B0B61280A3D8007EC7FCB3B1137F497E007FEB
FF80A31F467EC51E>I<D901FCEB1FC0903A0FFF807FE0903A3F07E1E1F090397C01F781
9039F800FE01484890387C00E048486D13000007143FA248486D7EA2001F81A7000F5DA2
6C6C49C7FCA20003143E6C6C5B6C6C5B486C485A39033F07E090380FFF80260701FCC8FC
0006CAFCA3120E120F7EA27F13E06CB512F86CECFF806C15E06D14F848B67E3A07E0000F
FED80F80EB00FF001EC8123F003EED1F8048150F17C0481507A6007CED0F80A26CED1F00
6C153E6C6C5CD807E0495AD801F8EB07E0D8007FEB3F8090261FFFFEC7FC010113E02C41
7DAB31>I<EA01FC12FFA3120312011200B3EC01FE913807FF8091381E07E091383801F0
02607FECC000D9FD807F167C01FFC7FC167E5BA35BB3A9486C14FFB5D8FC7F13FEA32F45
7DC436>I<13E0EA03F8487EA66C5AEA00E090C7FCADEA01FC127FA3120312011200B3B0
487EB512F8A315437EC21B>I<14F0EB01F8EB03FCEB07FEA4EB03FCEB01F8EB00F01400
AD14FE137FA313011300147EB3B3AB003C137C127EB413FC14F8A238FE01F0007E13E038
3803C0381E0780380FFF00EA01FC175783C21E>I<EA01FC12FFA3120312011200B3B3B3
A5487EB512FCA316457EC41B>108 D<2701FC01FEEC7F8000FF903B07FFC001FFF0913B
0E03F00380FC913B3800F80E003E0003495C000101C0D97C307F0000037E81D9FD805C01
FFC7D83EC0130F043F81495DA34992C7FCB3A9486C4A6C497EB5D8FC3FB5000FB512C0A3
4A2C7DAB51>I<3901FC01FE00FF903807FF8091381E07E091383801F0000301607F0001
EBC0002600FD807F167C01FFC7FC167E5BA35BB3A9486C14FFB5D8FC7F13FEA32F2C7DAB
36>I<EC7F80903803FFF090380FC0FC90383E001F496D7E496D7E48486D7E48486D7E48
486D7E000F81A24848147E003F157FA290C87E481680A44816C0AA6C1680A26D147F003F
1600A2001F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49C7FC
90381FC0FE903807FFF89038007F802A2E7DAC31>I<3901FC01FC00FF90380FFF809138
3E07E091387001F800039038C0007C2601FD807F6CB4C7123FEE1F8049EC0FC04915E0EE
07F0A217F8160317FCA3160117FEA917FC1603A317F8160717F0EE0FE07FEE1FC06D1580
EE3F00D9FD80137ED9FCC05B91386001F891383C0FE091381FFF80DA03FCC7FC91C9FCAE
487EB512FCA32F3F7DAB36>I<91387F8006903903FFE00E90380FE07890383F001C017E
EB061E5B4848EB033E4848EB01BE12074848EB00FEA2485A003F157E5B127FA390C8FC5A
A97E7FA3123F7F121F16FE6C7E000714016C7E6C6CEB037E00001406017C130C013F1318
90380FC0F0903803FFE09038007F0091C7FCAE16FF037F13FEA32F3F7DAB33>I<3901F8
07E000FFEB1FF8EC383CEC607E0003EBC0FF12013800F980EBFB00157E153C01FE1300A4
5BB3A77F487EB6FCA3202C7DAB26>I<90383FE0303801FFF83907C01E70390F0007F000
1C1301481300A2481470A212F01530A37E7E007E1400EA7F80EA3FF0EBFF806C13F86C13
FE0003EBFF806C14C0D8003F13E0010313F09038001FF81403EC00FC0040147C00C0147E
153E7E151EA37E151C7E153C6C14386C147000FB14E039F18001C039E0F00F8039C07FFE
00EB0FF01F2E7DAC26>I<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0
B6FCA2D8007EC7FCB3A4150CAA133E013F1318A27F90380F803001071360903803E0C090
3801FF809038003F001E3E7EBC26>I<D801FC14FE00FF147FA300031401000114000000
157EB3A916FEA3017C1301A2017EEB037E013E147F011E010613806D011C13FE903807C0
78903803FFE09026007F8013002F2D7DAB36>I<B539E001FFFCA3D807FEC7EA7FE0D801
FCEC1F8017000000150E160CA2017E5CA2017F14386D1430A26D6C5BA26E13E0010F5CA2
6D6C485AA36D6C48C7FCA26E5A01011306A26D6C5AA2ECFE1CEC7E18A26E5AA3EC1FE0A3
6E5AA26E5AA36EC8FC2E2C7EAA33>I<3B7FFFF007FFFCA30001D9800113C06C90C7EAFE
006D147C6D14706D6C5B6D6C5BECE0010107495AD903F090C7FCECF806903801FC0E0100
5BEC7E18EC7F30EC3F706E5A6E5A811407814A7EEC0DFC1418EC387E4A7E02607FECC01F
01016D7ED903807F4A6C7E01061303496D7E011C80013C1300017C147ED801FC14FFD80F
FE4913C0B5D8800713FFA3302B7FAA33>120 D<B539E001FFFCA3D807FEC7EA7FE0D801
FCEC1F8017000000150E160C6D141C017E1418A26D5CA26E1370011F1460A26D6C5BA280
0107495AA2ECF003010391C7FCA2903801F806A2ECFC0E0100130CA2EC7E18A2EC7F38EC
3F30A2EC1FE0A36E5AA26E5AA36EC8FCA21406A35CA2141C1418A200385B127C00FE5BA2
5C1301387C0380D87007C9FCEA3C1EEA1FFCEA03F02E3F7EAA33>I<003FB612E0A29039
E0000FC090C7EA1F80003C143F00381500157E003014FE00705C4A5A14030060495A5D4A
5A141F5DC748C7FC5C14FE5C495A13035C495A130F494813605C49C7FC5B017E14C05B12
01485A5B48481301120F491303485A003FEC0F8090C7121F007E14FFB7FCA2232B7DAA2B
>I E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop Black 0 84 a Fj(Corrig)m(\023)-46 b(e)33 b(TP4)g
Fi(Caml)2112 b Fj(F)-8 b(orm)m(ules)34 b(b)s(o)s(ol)m(\023)-46
b(eennes)p 0 124 3820 4 v Black 0 407 a Fh(1)161 b(Repr)l(\023)-77
b(esen)l(tation)52 b(des)h(form)l(ules)d(b)t(o)t(ol)l(\023)-77
b(eennes)p Black Black 0 626 a Fg(type)52 b(binop)h(=)e(Et)h(|)g(Ou)g
(|)f(Oubien)i(|)f(Impl)g(|)f(Equiv;;)0 867 y(type)h(formule)h(=)103
987 y(|)e(Vrai)103 1107 y(|)g(Faux)103 1228 y(|)g(Var)103
b(of)52 b(string)103 1348 y(|)f(Non)103 b(of)52 b(formule)103
1469 y(|)f(Bin)103 b(of)52 b(binop)h(*)e(formule)i(*)f(formule)0
1589 y(;;)0 1830 y(let)g(rec)g(affiche)h(par)f(f)g(=)f(match)i(f)f
(with)103 1950 y(|)f(Vrai)155 b(->)52 b(print_string)i("Vrai")103
2070 y(|)d(Faux)155 b(->)52 b(print_string)i("Faux")103
2191 y(|)d(Var\(x\))i(->)f(print_string)i(x)103 2311
y(|)d(Non\(g\))i(->)f(print_string)i("Non\(";)f(affiche)g(false)g(g;)f
(print_string)i("\)")103 2432 y(|)d(Bin\(op,g,h\))j(->)308
2552 y(if)d(par)h(then)h(print_string)h("\(";)308 2672
y(affiche)f(true)f(g;)308 2793 y(print_string\(match)k(op)51
b(with)1077 2913 y(|)g(Et)257 b(->)52 b(")f(.)h(")1077
3033 y(|)f(Ou)257 b(->)52 b(")f(+)h(")1077 3154 y(|)f(Oubien)i(->)f(")f
(++)h(")1077 3274 y(|Impl)206 b(->)52 b(")f(=>)h(")1077
3395 y(|Equiv)155 b(->)52 b(")f(<=>)h("\);)308 3515 y(affiche)h(true)f
(h;)308 3635 y(if)f(par)h(then)h(print_string)h("\)")0
3756 y(;;)0 3876 y(let)e(print_formule)j(f)c(=)h(affiche)h(false)g(f;)e
(print_newline\(\);;)0 4209 y Fh(2)161 b(V)l(\023)-77
b(eri\014cateur)53 b(de)g(tautologie)0 4428 y Ff(1.)p
Black Black 0 4583 a Fg(let)f(rec)g(evalue)h(f)f(=)f(match)i(f)e(with)
103 4703 y(|)g(Vrai)155 b(->)52 b(true)103 4823 y(|)f(Faux)155
b(->)52 b(false)103 4944 y(|)f(Var)h(x)103 b(->)52 b(failwith)h("la)f
(formule)h(contient)h(une)e(inconnu")103 5064 y(|)f(Non\(g\))i(->)f
(not\(evalue)i(g\))103 5185 y(|)d(Bin\(op,g,h\))j(->)308
5305 y(let)e(a)f(=)h(evalue)h(g)e(and)h(b)g(=)f(evalue)i(h)f(in)308
5425 y(match)g(op)g(with)410 5546 y(|)g(Et)257 b(->)51
b(a)h(&&)g(b)410 5666 y(|)g(Ou)257 b(->)51 b(a)h(||)g(b)410
5786 y(|)g(Oubien)h(->)e(a)h(<>)g(b)410 5907 y(|)g(Impl)155
b(->)51 b(\(not)i(a\))e(or)h(b)p Black 1885 6180 a Fj(1)p
Black eop
%%Page: 2 2
2 1 bop Black 0 84 a Fj(Corrig)m(\023)-46 b(e)33 b(TP4)g
Fi(Caml)2112 b Fj(F)-8 b(orm)m(ules)34 b(b)s(o)s(ol)m(\023)-46
b(eennes)p 0 124 3820 4 v Black 410 407 a Fg(|)52 b(Equiv)104
b(->)51 b(a)h(=)f(b)0 527 y(;;)0 726 y Ff(2.)p Black
Black 0 879 a Fg(let)h(rec)g(subs)g(x)g(y)g(f)f(=)h(match)g(f)g(with)
103 999 y(|)f(Var\(v\))i(->)f(if)g(v)f(=)h(x)f(then)h(y)g(else)g(f)103
1119 y(|)f(Non\(g\))i(->)f(Non\(subs)h(x)f(y)f(g\))103
1240 y(|)g(Bin\(op,g,h\))j(->)e(Bin\(op,)h(subs)g(x)e(y)h(g,)f(subs)i
(x)e(y)h(h\))103 1360 y(|)f(_)h(->)f(f)0 1480 y(;;)0
1680 y Ff(3.)p Black Black 0 1832 a Fg(let)h(rec)g(tautologie)i(f)e
(vars)g(=)f(match)i(vars)f(with)103 1952 y(|)f([])h(->)g(evalue\(f\))
103 2073 y(|)f(x::suite)i(->)f(tautologie)i(\(subs)f(x)e(Vrai)i(f\))e
(suite)718 2193 y(&)g(tautologie)j(\(subs)f(x)e(Faux)i(f\))e(suite)0
2313 y(;;)0 2513 y Ff(4.)0 2633 y Fj(Il)43 b(faut)f(bien)h(prendre)h
(garde)e(\022)-49 b(a)42 b(d'ab)s(ord)g(simpli\014er)j(les)e(op)m(\023)
-46 b(erandes)44 b(d'une)f(expression)i(a)m(v)-5 b(an)m(t)42
b(de)0 2753 y(simpli\014er)34 b(l'expression)h(elle-m)m(^)-46
b(eme,)35 b(sans)e(quoi)g(la)g(simpli\014cation)h(e\013ectu)m(\023)-46
b(ee)34 b(est)f(tr)m(\022)-46 b(es)33 b(limit)m(\023)-46
b(ee.)p Black Black 0 2921 a Fg(let)52 b(rec)g(simplifie)i(f)d(=)h
(match)g(f)g(with)103 3042 y(|)f(Non\(g\))i(->)f(begin)308
3162 y(match)g(\(simplifie)i(g\))e(with)359 3282 y(|)f(Vrai)155
b(->)52 b(Faux)359 3403 y(|)f(Faux)155 b(->)52 b(Vrai)359
3523 y(|)f(Non\(h\))i(->)f(h)359 3643 y(|)f(h)308 b(->)52
b(Non)g(h)308 3764 y(end)103 3884 y(|)f(Bin\(op,g,h\))j(->)e(begin)h
(match)f(op,simplifie\(g\),simplifi)q(e\(h\))58 b(with)308
4005 y(|)51 b(Et,)h(Vrai,)h(b)256 b(->)52 b(b)308 4125
y(|)f(Et,)h(Faux,)h(b)256 b(->)52 b(Faux)308 4245 y(|)f(Et,)h(a,)g
(Vrai)257 b(->)52 b(a)308 4366 y(|)f(Et,)h(a,)g(Faux)257
b(->)52 b(Faux)308 4607 y(|)f(Ou,)h(Vrai,)h(b)256 b(->)52
b(Vrai)308 4727 y(|)f(Ou,)h(Faux,)h(b)256 b(->)52 b(b)308
4847 y(|)f(Ou,)h(a,)g(Vrai)257 b(->)52 b(Vrai)308 4968
y(|)f(Ou,)h(a,)g(Faux)257 b(->)52 b(a)308 5208 y(|)f(Oubien,)i(Faux,)g
(b)e(->)h(b)308 5329 y(|)f(Oubien,)i(Vrai,)g(b)e(->)h(Non)g(b)308
5449 y(|)f(Oubien,)i(a,)f(Faux)g(->)g(a)308 5570 y(|)f(Oubien,)i(a,)f
(Vrai)g(->)g(Non)g(a)308 5810 y(|)f(Impl,)i(Faux,)f(b)154
b(->)52 b(Vrai)308 5931 y(|)f(Impl,)i(Vrai,)f(b)154 b(->)52
b(b)p Black 1885 6180 a Fj(2)p Black eop
%%Page: 3 3
3 2 bop Black 0 84 a Fj(Corrig)m(\023)-46 b(e)33 b(TP4)g
Fi(Caml)2112 b Fj(F)-8 b(orm)m(ules)34 b(b)s(o)s(ol)m(\023)-46
b(eennes)p 0 124 3820 4 v Black 308 407 a Fg(|)51 b(Impl,)i(a,)f(Faux)
154 b(->)52 b(Non)g(a)308 527 y(|)f(Impl,)i(a,)f(Vrai)154
b(->)52 b(Vrai)308 768 y(|)f(Equiv,)i(Vrai,)g(b)102 b(->)52
b(b)308 888 y(|)f(Equiv,)i(Faux,)g(b)102 b(->)52 b(Non)g(b)308
1009 y(|)f(Equiv,)i(a,)f(Vrai)103 b(->)52 b(a)308 1129
y(|)f(Equiv,)i(a,)f(Faux)103 b(->)52 b(Non)g(a)308 1370
y(|)f(_,g,h)i(->)f(Bin\(op,g,h\))205 1490 y(end)103 1611
y(|)f(_)h(->)f(f)0 1731 y(;;)0 1942 y Ff(5.)p Black Black
0 2093 a Fg(let)h(rec)g(tautologie2)i(f)e(vars)g(=)g(match)g(vars)h
(with)103 2213 y(|)e([])h(->)g(evalue\(f\))103 2333 y(|)f(x::suite)i
(->)f(tautologie)i(\(simplifie)g(\(subs)f(x)e(Vrai)i(f\)\))f(suite)718
2454 y(&)f(tautologie)j(\(simplifie)g(\(subs)f(x)e(Faux)i(f\)\))f
(suite)0 2574 y(;;)0 2725 y Fj(En)45 b(y)g(r)m(\023)-46
b(e\015ec)m(hissan)m(t)48 b(bien,)d(cette)h(nouv)m(elle)g(fonction)f
(n'est)h(pas)f(b)s(eaucoup)g(plus)g(e\016cace)i(que)e(la)0
2845 y(pr)m(\023)-46 b(ec)m(\023)g(eden)m(te)40 b(car)d(elle)h(ne)f
(tire)h(pas)f(partie)g(de)h(l')m(\023)-46 b(ev)m(en)m(tuelle)40
b(disparition)e(d'une)g(v)-5 b(ariable)37 b(b)s(o)s(ol)m(\023)-46
b(eenne)0 2965 y(dans)33 b(une)g(form)m(ule)h(simpli\014)m(\023)-46
b(ee.)34 b(Ce)g(probl)m(\022)-46 b(eme)33 b(sera)h(r)m(\023)-46
b(egl)m(\023)g(e)33 b(a)m(v)m(ec)h(la)e(question)i(7.)0
3131 y Ff(6.)p Black Black 0 3282 a Fg(let)52 b(rec)g(tautologie3)i(f)e
(vars)g(=)g(match)g(vars)h(with)103 3402 y(|)e([])h(->)g
(\(evalue\(f\),[]\))103 3523 y(|)f(x::suite)i(->)308
3643 y(match)f(tautologie3)i(\(subs)f(x)f(Vrai)g(f\))g(suite)g(with)410
3763 y(|)g(\(false,l\))h(->)f(\(false,\(x^"=Vrai"\)::l\))410
3884 y(|)g(\(true,_\))h(->)410 4004 y(match)g(tautologie3)h(\(subs)f(x)
e(Faux)h(f\))g(suite)h(with)513 4125 y(|)e(\(false,l\))j(->)e
(\(false,\(x^"=Faux"\)::l\))513 4245 y(|)f(\(true,_\))105
b(->)52 b(\(true,[]\))0 4365 y(;;)0 4561 y Ff(7.)0 4682
y Fj(Cette)41 b(question)g(est)f(assez)h(di\016cile.)g(Elle)f(demande)h
(de)f(programmer)g(plusieurs)i(fonctions)e(auxi-)0 4802
y(liaires.)0 4923 y(La)f(premi)m(\022)-46 b(ere)41 b(p)s(ermet)g(de)f
Fe(fusionner)f Fj(deux)h(liste)h(de)f(v)-5 b(ariables,)40
b(sans)h(g)m(\023)-46 b(en)m(\023)g(erer)40 b(de)g(doublons.)h(Elle)0
5043 y(requiert)34 b(que)f(les)h(listes)g(de)f(d)m(\023)-46
b(epart)33 b(soien)m(t)g(tri)m(\023)-46 b(ees)34 b(p)s(our)e(l'ordre)h
(alphab)m(\023)-46 b(etique.)p Black Black 0 5208 a Fg(let)52
b(rec)g(fusion)h(=)f(fun)103 5329 y(|)f([])h(l2)667 b(->)52
b(l2)103 5449 y(|)f(l1)h([])667 b(->)52 b(l1)103 5570
y(|)f(\(x1::q1\))i(\(x2::q2\))h(->)e(if)f(x1=x2)i(then)f(fusion)h(q1)f
(\(x2::q2\))1282 5690 y(else)g(if)g(x1<x2)g(then)h(x1::\(fusion)h(q1)e
(\(x2::q2\)\))1999 5810 y(else)h(x2::\(fusion)h(\(x1::q1\))f(q2\))0
5931 y(;;)p Black 1885 6180 a Fj(3)p Black eop
%%Page: 4 4
4 3 bop Black 0 84 a Fj(Corrig)m(\023)-46 b(e)33 b(TP4)g
Fi(Caml)2112 b Fj(F)-8 b(orm)m(ules)34 b(b)s(o)s(ol)m(\023)-46
b(eennes)p 0 124 3820 4 v Black 0 527 a Fg(#fusion)53
b(["a";"b";"c"])i(["b";"d";"e";"f"];;)0 648 y(-)d(:)f(string)i(list)f
(=)g(["a";)g("b";)h("c";)f("d";)g("e";)h("f"])0 818 y
Fj(La)48 b(deuxi)m(\022)-46 b(eme)50 b(p)s(ermet)f(de)g(calculer)g(la)f
(liste)h(des)g(v)-5 b(ariables)49 b(con)m(ten)m(ues)i(dans)e(une)f
(form)m(ule,)h(en)0 938 y(utilisan)m(t)34 b(la)e(fonction)h
Fg(fusion)p Fj(.)p Black Black 0 1108 a Fg(let)52 b(rec)g(liste_vars)i
(f)e(=)f(match)i(f)e(with)103 1229 y(|)g(Vrai)155 b(->)52
b([])103 1349 y(|)f(Faux)155 b(->)52 b([])103 1469 y(|)f(Var)h(x)103
b(->)52 b([x])103 1590 y(|)f(Non\(g\))i(->)f(liste_vars)i(g)103
1710 y(|)d(Bin\(op,g,h\))j(->)e(fusion)h(\(liste_vars)h(g\))e
(\(liste_vars)i(h\))0 1831 y(;;)0 2071 y(#liste_vars)g(\(Bin)f
(\(Et,Bin)g(\(Ou,Var)g("b",Var)g("c"\),Bin)g(\(Impl,Var)h("b",Var)f
("a"\)\)\);;)0 2192 y(-)f(:)f(string)i(list)f(=)g(["a";)g("b";)h("c"])0
2362 y Fj(On)33 b(en)g(d)m(\023)-46 b(eduit)33 b(une)g(nouv)m(elle)i(v)
m(ersion)f(de)f Fg(tautologie)i Fj(:)p Black Black 0
2532 a Fg(let)52 b(rec)g(tautologie4)i(f)e(=)f(match)i(\(liste_vars)h
(f\))e(with)103 2652 y(|)f([])h(->)g(evalue\(f\))103
2773 y(|)f(x::suite)i(->)f(tautologie4)i(\(simplifie)g(\(subs)f(x)f
(Vrai)g(f\)\))718 2893 y(&)f(tautologie4)j(\(simplifie)g(\(subs)f(x)f
(Faux)g(f\)\))0 3014 y(;;)0 3233 y Ff(8.)0 3353 y Fj(Cette)34
b(question)g(demande)f(b)s(eaucoup)h(d'initiativ)m(e.)0
3473 y(On)39 b(supp)s(ose)h(que)h(la)d(form)m(ule)i(\022)-49
b(a)39 b(simpli\014er)i(ne)e(con)m(tien)m(t)i(plus)f(de)f(constan)m(te)
i Fg(Vrai)f Fj(ou)f Fg(Faux)p Fj(.)h(On)0 3594 y(commence)34
b(par)f(exprimer)h(les)g(op)m(\023)-46 b(erateurs)33
b Fg(Oubien)p Fj(,)h Fg(Impl)g Fj(et)f Fg(Equiv)g Fj(\022)-49
b(a)33 b(l'aide)g(de)g Fg(Et)p Fj(,)g Fg(Ou)g Fj(et)g
Fg(Non)p Fj(.)p Black Black 0 3764 a Fg(let)52 b(rec)g
(enleve_Oubien_Impl_Equiv)58 b(f)51 b(=)h(match)g(f)g(with)103
3884 y(|)f(Non\(g\))i(->)f(Non)g(\(enleve_Oubien_Impl_Equiv)58
b(g\))103 4005 y(|)51 b(Bin\(op,g,h\))j(->)308 4125 y(begin)410
4245 y(let)e(a)g(=)f(enleve_Oubien_Impl_Equiv)58 b(g)410
4366 y(and)52 b(b)g(=)f(enleve_Oubien_Impl_Equiv)58 b(h)51
b(in)410 4486 y(match)i(op)f(with)513 4607 y(|)f(Et)257
b(->)52 b(Bin\(Et,a,b\))513 4727 y(|)f(Ou)257 b(->)52
b(Bin\(Ou,a,b\))513 4847 y(|)f(Oubien)i(->)f(Bin\(Ou,Bin)i(\(Et,Non)f
(a,b\),Bin)g(\(Et,a,Non)h(b\)\))513 4968 y(|)d(Impl)155
b(->)52 b(Bin\(Ou,Non)i(a,b\))513 5088 y(|)d(Equiv)104
b(->)52 b(Bin\(Et,Bin)i(\(Ou,Non)f(a,b\),Bin)g(\(Ou,a,Non)h(b\)\))308
5208 y(end)103 5329 y(|)d(f)h(->)f(f)0 5449 y(;;)0 5690
y(#let)h(f=\(Bin)h(\(Impl,Var)h("a",Bin\(Oubien,Var)i("b",Var)d
("c"\)\)\);;)0 5810 y(#let)f(g=\(enleve_Oubien_Impl_Eq)q(uiv)58
b(f\);;)0 5931 y(#print_formule)d(g;;)p Black 1885 6180
a Fj(4)p Black eop
%%Page: 5 5
5 4 bop Black 0 84 a Fj(Corrig)m(\023)-46 b(e)33 b(TP4)g
Fi(Caml)2112 b Fj(F)-8 b(orm)m(ules)34 b(b)s(o)s(ol)m(\023)-46
b(eennes)p 0 124 3820 4 v Black 0 407 a Fg(Non\(a\))53
b(+)e(\(\(Non\(b\))j(.)d(c\))h(+)g(\(b)f(.)h(Non\(c\)\)\))0
527 y(-)g(:)f(unit)h(=)g(\(\))0 648 y(#print_formule)j(f;;)0
768 y(a)d(=>)f(\(b)h(++)g(c\))0 888 y(-)g(:)f(unit)h(=)g(\(\))0
1009 y(#tautologie4)i(\(Bin)f(\(Equiv,f,g\)\))h(;;)0
1129 y(-)e(:)f(bool)h(=)g(true)0 1301 y Fj(On)31 b(p)s(eut)g(alors)g
(faire)g(la)g(transformation)g(demand)m(\023)-46 b(ee,)33
b(en)e(se)h(basan)m(t)f(sur)h(les)g(form)m(ules)g(de)f(distribu-)0
1421 y(tivit)m(\023)-46 b(e)33 b(suiv)-5 b(an)m(tes)586
1641 y Fd(a)22 b Fj(+)g(\()p Fd(b)h Fc(\001)f Fd(c)p
Fj(\))27 b Fc(\021)h Fj(\()p Fd(a)23 b Fj(+)f Fd(b)p
Fj(\))g Fc(\001)g Fj(\()p Fd(a)g Fj(+)g Fd(c)p Fj(\))98
b(et)g(\()p Fd(b)22 b Fc(\001)g Fd(c)p Fj(\))g(+)g Fd(a)28
b Fc(\021)g Fj(\()p Fd(b)23 b Fj(+)f Fd(a)p Fj(\))g Fc(\001)g
Fj(\()p Fd(c)g Fj(+)g Fd(a)p Fj(\))p Black Black 0 1861
a Fg(let)52 b(rec)g(transforme)i(f)e(=)f(match)i(f)e(with)103
1982 y(|)g(Non\(Non)i(g\))f(->)g(transforme)i(g)103 2102
y(|)d(Non\(Bin)i(\(Ou,g,h\)\))h(->)e(Bin)g(\(Et,transforme)j(\(Non)d
(g\),transforme)j(\(Non)d(h\)\))103 2222 y(|)f(Non\(Bin)i(\(Et,g,h\)\))
h(->)e(transforme)i(\(Bin)e(\(Ou,Non)h(g,Non)g(h\)\))103
2343 y(|)e(Bin\(Et,g,h\))j(->)e(Bin)g(\(Et,transforme)j(g,transforme)g
(h\))103 2463 y(|)c(Bin\(Ou,g,h\))j(->)e(begin)359 2584
y(match)g(\(transforme)j(g\))c(with)359 2704 y(|)g(Bin\(Et,a1,a2\))k
(->)d(Bin\(Et,transforme)k(\(Bin\(Ou,a1,h\)\),)1692 2824
y(transforme)e(\(Bin\(Ou,a2,h\)\)\))359 2945 y(|)d(a)h(->)g(begin)718
3065 y(match)g(\(transforme)j(h\))c(with)718 3186 y(|)g
(Bin\(Et,b1,b2\))k(->)d(Bin\(Et,transforme)k(\(Bin\(Ou,a,b1\)\),)2051
3306 y(transforme)e(\(Bin\(Ou,a,b2\)\)\))718 3426 y(|)d(b)h(->)g
(Bin\(Ou,a,b\))718 3547 y(end)359 3667 y(end)103 3787
y(|)f(f)h(->)f(f)0 3908 y(;;)0 4149 y(#let)h(h=\(transforme)j(g\);;)0
4269 y(#print_formule)g(h;;)0 4389 y(\(\(Non\(a\))e(+)f(\(Non\(b\))h(+)
f(b\)\))g(.)f(\(Non\(a\))i(+)f(\(Non\(b\))h(+)f(Non\(c\)\)\)\))154
4510 y(.)f(\(\(Non\(a\))j(+)d(\(c)h(+)g(b\)\))g(.)f(\(Non\(a\))i(+)f
(\(c)g(+)f(Non\(c\)\)\)\))0 4630 y(-)h(:)f(unit)h(=)g(\(\))0
4751 y(#tautologie4\(Bin\(Equiv,h,)q(f\)\);)q(;)0 4871
y(-)g(:)f(bool)h(=)g(true)0 5043 y Fj(Une)34 b(conjonction)g(de)g(form)
m(ules)h Fd(f)1299 5058 y Fb(1)1338 5043 y Fd(;)17 b(:)g(:)g(:)33
b(;)17 b(f)1622 5058 y Fa(n)1702 5043 y Fj(est)34 b(une)g(tautologie)g
(si)g(et)f(seulemen)m(t)j(si)e(c)m(haque)i Fd(f)3638
5058 y Fa(i)3699 5043 y Fj(est)0 5163 y(une)31 b(tautologie.)f(Une)i
(disjonction)f(de)g(form)m(ules)h(atomiques)f(du)g(t)m(yp)s(e)h
Fd(p)e Fj(ou)p 2906 5108 49 4 v 31 w Fd(p)p Fj(,)g(a)m(v)m(ec)i
Fd(p)f Fj(une)g(v)-5 b(ariable)0 5284 y(b)s(o)s(ol)m(\023)-46
b(eenne,)45 b(est)f(une)h(tautologie)e(si)h(et)g(seulemen)m(t)j(si)d
(il)g(existe)i(une)e(v)-5 b(ariable)44 b(b)s(o)s(ol)m(\023)-46
b(eenne)45 b Fd(q)i Fj(telle)0 5404 y(que,)30 b(\022)-49
b(a)29 b(la)f(fois)h Fd(q)k Fj(et)p 746 5349 47 4 v 29
w Fd(q)g Fj(apparaissen)m(t)d(dans)g(la)f(disjonction.)h(Gr^)-49
b(ace)28 b(\022)-49 b(a)29 b(ces)h(remarques)h(on)e(obtien)m(t)g(une)0
5524 y(nouv)m(elle)g(m)m(\023)-46 b(etho)s(de)27 b(p)s(our)g(v)m(\023)
-46 b(eri\014er)28 b(les)g(tautologies.)f(Il)g(reste)h(cep)s(endan)m(t)
h(du)e(tra)m(v)-5 b(ail)27 b(\022)-49 b(a)26 b(accomplir)i(car)0
5645 y(il)34 b(faut)g(p)s(ouv)m(oir)g(d)m(\023)-46 b(etecter)36
b(si)e(une)h(disjonction)g(con)m(tien)m(t)g(une)g(v)-5
b(ariable)34 b(b)s(o)s(ol)m(\023)-46 b(eenne)34 b(et)h(sa)f(n)m(\023)
-46 b(egation.)0 5765 y(Je)33 b(v)m(ous)h(laisse)g(ce)f(tra)m(v)-5
b(ail)32 b(en)h(exercice...)p Black 1885 6180 a(5)p Black
eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
