%!PS-Adobe-2.0
%%Creator: dvips(k) 5.85 Copyright 1999 Radical Eye Software
%%Title: TP2.dvi
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o TP2.ps TP2.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.06.27:0942
%%BeginProcSet: texc.pro
%!
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id
ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{
rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get
/gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp add /cp
X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add /gp X
adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{dup
255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1 adv}
B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2 idiv
S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Created 1994/6/23. Source file was pstricks.doc
% Version 0.93a, 93/03/12.
% For use with Rokicki's dvips.
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
def
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
%  Modification Denis GIROU (CNRS/IDRIS - France) <Denis.Girou@idris.fr> - 15 Jan. 1997
% /Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
% pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
% div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
% d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt { 1 setlinecap [ 0 dx n div ]
dy n div 2 div setdash } { 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop

%%EndProcSet
%%BeginProcSet: pst-node.pro
%!
% PostScript prologue for pst-node.tex.
% Created 1994/6/7. Source file was pst-node.doc
% Version 0.93a/b-97 patch 1, 97/05/09.
% For use with Rokicki's dvips.
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - 9 May 1997
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin /setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse /TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def /TeXcolorgrey{setgray}def /TeXcolorgray{
setgray}def /TeXcolorhsb{sethsbcolor}def /currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse /DC{exch dup userdict exch
known{pop pop}{X}ifelse}B /GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC /Goldenrod{0 0.10 0.84 0 setcmykcolor}
DC /Dandelion{0 0.29 0.84 0 setcmykcolor}DC /Apricot{0 0.32 0.52 0
setcmykcolor}DC /Peach{0 0.50 0.70 0 setcmykcolor}DC /Melon{0 0.46 0.50
0 setcmykcolor}DC /YellowOrange{0 0.42 1 0 setcmykcolor}DC /Orange{0
0.61 0.87 0 setcmykcolor}DC /BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC /RedOrange{0 0.77 0.87 0
setcmykcolor}DC /Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC /Maroon{0
0.87 0.68 0.32 setcmykcolor}DC /BrickRed{0 0.89 0.94 0.28 setcmykcolor}
DC /Red{0 1 1 0 setcmykcolor}DC /OrangeRed{0 1 0.50 0 setcmykcolor}DC
/RubineRed{0 1 0.13 0 setcmykcolor}DC /WildStrawberry{0 0.96 0.39 0
setcmykcolor}DC /Salmon{0 0.53 0.38 0 setcmykcolor}DC /CarnationPink{0
0.63 0 0 setcmykcolor}DC /Magenta{0 1 0 0 setcmykcolor}DC /VioletRed{0
0.81 0 0 setcmykcolor}DC /Rhodamine{0 0.82 0 0 setcmykcolor}DC /Mulberry
{0.34 0.90 0 0.02 setcmykcolor}DC /RedViolet{0.07 0.90 0 0.34
setcmykcolor}DC /Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC /Lavender{0
0.48 0 0 setcmykcolor}DC /Thistle{0.12 0.59 0 0 setcmykcolor}DC /Orchid{
0.32 0.64 0 0 setcmykcolor}DC /DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}
DC /Purple{0.45 0.86 0 0 setcmykcolor}DC /Plum{0.50 1 0 0 setcmykcolor}
DC /Violet{0.79 0.88 0 0 setcmykcolor}DC /RoyalPurple{0.75 0.90 0 0
setcmykcolor}DC /BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC /Periwinkle
{0.57 0.55 0 0 setcmykcolor}DC /CadetBlue{0.62 0.57 0.23 0 setcmykcolor}
DC /CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC /MidnightBlue{0.98 0.13
0 0.43 setcmykcolor}DC /NavyBlue{0.94 0.54 0 0 setcmykcolor}DC
/RoyalBlue{1 0.50 0 0 setcmykcolor}DC /Blue{1 1 0 0 setcmykcolor}DC
/Cerulean{0.94 0.11 0 0 setcmykcolor}DC /Cyan{1 0 0 0 setcmykcolor}DC
/ProcessBlue{0.96 0 0 0 setcmykcolor}DC /SkyBlue{0.62 0 0.12 0
setcmykcolor}DC /Turquoise{0.85 0 0.20 0 setcmykcolor}DC /TealBlue{0.86
0 0.34 0.02 setcmykcolor}DC /Aquamarine{0.82 0 0.30 0 setcmykcolor}DC
/BlueGreen{0.85 0 0.33 0 setcmykcolor}DC /Emerald{1 0 0.50 0
setcmykcolor}DC /JungleGreen{0.99 0 0.52 0 setcmykcolor}DC /SeaGreen{
0.69 0 0.50 0 setcmykcolor}DC /Green{1 0 1 0 setcmykcolor}DC
/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC /PineGreen{0.92 0 0.59
0.25 setcmykcolor}DC /LimeGreen{0.50 0 1 0 setcmykcolor}DC /YellowGreen{
0.44 0 0.74 0 setcmykcolor}DC /SpringGreen{0.26 0 0.76 0 setcmykcolor}
DC /OliveGreen{0.64 0 0.95 0.40 setcmykcolor}DC /RawSienna{0 0.72 1 0.45
setcmykcolor}DC /Sepia{0 0.83 1 0.70 setcmykcolor}DC /Brown{0 0.81 1
0.60 setcmykcolor}DC /Tan{0.14 0.42 0.56 0 setcmykcolor}DC /Gray{0 0 0
0.50 setcmykcolor}DC /Black{0 0 0 1 setcmykcolor}DC /White{0 0 0 0
setcmykcolor}DC end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (TP2.dvi)
@start
%DVIPSBitmapFont: Fa cmmi8 8 2
/Fa 2 104 df<151FEC03FFA2EC003FA2153EA2157EA2157CA215FCA215F8A21401EB07
E190381FF9F0EB7C1DEBF80FEA01F03903E007E0EA07C0120FEA1F8015C0EA3F00140F5A
007E1480A2141F12FE481400A2EC3F021506143E5AEC7E0E007CEBFE0C14FC0101131C39
3E07BE18391F0E1E38390FFC0FF03903F003C0202F7DAD24>100
D<14FCEB03FF90380F839C90381F01BC013E13FCEB7C005B1201485A15F8485A1401120F
01C013F0A21403121F018013E0A21407A215C0A2000F130F141F0007EB3F80EBC07F3803
E1FF3800FF9F90383E1F0013005CA2143EA2147E0038137C00FC13FC5C495A38F807E038
F00F80D87FFEC7FCEA1FF81E2C7E9D22>103 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmmi10 10.95 2
/Fb 2 103 df<EC07F0EC7FFE903801FC0F903907E0038090390FC001C0D93F8013E090
387F000701FE131F485A485A16C0485A000F15804990C7FC121F485AA3127F5BA312FF90
C9FCA6007E1560007F15E01501ED03C06CEC07806DEB0F00001F141E6C6C137C3907E001
F03901F01FC06CB5C7FCEB1FF023297DA727>99 D<163EEEFFC0923803E1E0923807C0F0
ED0F811687ED1F8F160F153FA217E092387E038093C7FCA45DA514015DA30103B512FCA3
90260003F0C7FCA314075DA4140F5DA5141F5DA4143F92C8FCA45C147EA414FE5CA41301
5CA4495AA35CEA1E07127F5C12FF495AA200FE90C9FCEAF81EEA703EEA7878EA1FF0EA07
C02C537CBF2D>102 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc wncyr10 12 2
/Fc 2 63 df<151C153C157CEC01FC4A4813064A48130F4A48133FDA1F80137F027FC712
FE02FEEB03F84948EB07F04948EB0FE04948EB3FC0D91FE0EB7F00494813FE90397F8003
FC4948485A4848EB1FF0D807FCEB3FC0D80FF0495A48484848C7FC4848485AB448485A01
0013F0018013FC393FC003FE6C6C6C7E6C6C6C6C7ED807FC6D7ED801FEEB1FF06C6CEB07
F86D6C6C7E6D6CC67E6D6C137FD907F0EB3FC06D6CEB0FE06D6CEB07F06D6CEB03F8027F
EB00FEDA1F80137FDA0FE0133F6E6C130F6E6C13066E6C1300EC007C153C151C302F7CAC
3D>60 D<1438143C143EEC3F8000606D7E00F06D7E00FC6D7E6CEB01F8007FEB00FED81F
C0137F6C6C6D7E6C6C6D7ED803FC6D7EC66CEB07F8017F6D7E90393FC001FE6D6C6C7ED9
0FF8EB7F80D903FCEB3FE06D6CEB0FF0903A00FF8007F891397FC003FC91393FE001FF02
0F7F023F5B91397FC003FC9139FF8007F8903A01FE000FF04948EB3FE0D90FF8EB7F80D9
1FE0EBFF004948485A49C6485A01FE495AD803FCEB0FE0D807F0495A4848495A484849C7
FC007FC712FE00FEEB01F848EB07F000F0495A0060495AC7485A023EC8FC143C1438302F
79AC3D>62 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr10 10.95 5
/Fd 5 123 df<3901FC03FC00FF90381FFF8091387C0FE09039FDE003F03A03FFC001FC
6C496C7E91C7127F49EC3F805BEE1FC017E0A2EE0FF0A3EE07F8AAEE0FF0A4EE1FE0A2EE
3FC06D1580EE7F007F6E13FE9138C001F89039FDE007F09039FC780FC0DA3FFFC7FCEC07
F891C9FCAD487EB512F8A32D3A7EA733>112 D<131CA6133CA4137CA213FCA212011203
1207001FB512C0B6FCA2D801FCC7FCB3A215E0A912009038FE01C0A2EB7F03013F138090
381F8700EB07FEEB01F81B397EB723>116 D<B539F01FFFE0A30003D9C00F1300C69038
8007F8D97F0013E002805BD93FC05B011F49C7FC90380FE00EECF01E6D6C5A01035B6D6C
5A6E5AEB00FF6E5A6E5A81141F814A7E81147BECF1FC903801E1FEECC0FF01037F49486C
7ED90F007F011E6D7E013E130F496D7E01FC80486C80000F4A7EB539803FFFF8A32D277F
A630>120 D<B539E00FFFE0A32707FE000313006C48EB01FC6F5A00015D7F00005DA201
7F495AA2EC8003013F5CA26D6C48C7FCA26E5A010F130EA26D6C5AA2ECF83C01031338A2
6D6C5AA2ECFEF001005BA2EC7FC0A36E5AA36EC8FCA2140EA2141E141C143C1438A21478
00181370127EB45BA2495AA248485AD87E07C9FCEA780EEA3C3CEA1FF8EA07E02B3A7EA6
30>I<001FB61280A2EBE0000180140049485A001E495A121C4A5A003C495A141F00385C
4A5A147F5D4AC7FCC6485AA2495A495A130F5C495A90393FC00380A2EB7F80EBFF005A5B
484813071207491400485A48485BA248485B4848137F00FF495A90B6FCA221277EA628>
I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmbx12 12 11
/Fe 11 58 df<EA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7EA7FFCEA3FF8EA1FF0EA07C00F
0F788E1F>46 D<EC3FF849B5FC010F14E0013F14F890397FF01FFC9039FFC007FE489038
0001FF48486D1380000716C049147F000F16E049143F001F16F0A2003F16F8A249141F00
7F16FCA600FF16FEB3A3007F16FCA56C6CEC3FF8A3001F16F0A2000F16E06D147F000716
C06D14FF6C6C4913806C6D4813006C6D485A90397FF01FFC6DB55A010F14E00103148090
26003FF8C7FC2F427CC038>48 D<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003
B3B3ADB712FCA5264177C038>I<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC
0313FE3A0FE0007FFFD81F806D138048C7000F13C0488001C015E001F07F00FF6E13F07F
17F881A46C5A6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A
4B5A4A90C7FC4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F049
5A495A49C8FC017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<
ECFFF0010713FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D13
8013FE001F16C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B020F138090
2607FFFEC7FC15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A2
17F8A3EA0FC0EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F80491380D81F
F0491300D80FFEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E02D427BC038>
I<163FA25E5E5D5DA25D5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F87EC1F07143E
147E147C14F8EB01F0EB03E0130714C0EB0F80EB1F00133E5BA25B485A485A485A120F5B
48C7FC123E5A12FCB91280A5C8000F90C7FCAC027FB61280A531417DC038>I<00071503
01E0143F01FFEB07FF91B6FC5E5E5E5E5E16804BC7FC5D15E092C8FC01C0C9FCAAEC3FF0
01C1B5FC01C714C001DF14F09039FFE03FFC9138000FFE01FC6D7E01F06D13804915C049
7F6C4815E0C8FC6F13F0A317F8A4EA0F80EA3FE0487E12FF7FA317F05B5D6C4815E05B00
7EC74813C0123E003F4A1380D81FC0491300D80FF0495AD807FEEBFFFC6CB612F0C65D01
3F1480010F01FCC7FC010113C02D427BC038>I<4AB47E021F13F0027F13FC49B6FC0107
9038807F8090390FFC001FD93FF014C04948137F4948EBFFE048495A5A1400485A120FA2
48486D13C0EE7F80EE1E00003F92C7FCA25B127FA2EC07FC91381FFF8000FF017F13E091
B512F89039F9F01FFC9039FBC007FE9039FF8003FF17804A6C13C05B6F13E0A24915F0A3
17F85BA4127FA5123FA217F07F121FA2000F4A13E0A26C6C15C06D4913806C018014006C
6D485A6C9038E01FFC6DB55A011F5C010714C0010191C7FC9038003FF02D427BC038>I<
121E121F13FC90B712FEA45A17FC17F817F017E017C0A2481680007EC8EA3F00007C157E
5E00785D15014B5A00F84A5A484A5A5E151FC848C7FC157E5DA24A5A14035D14074A5AA2
141F5D143FA2147F5D14FFA25BA35B92C8FCA35BA55BAA6D5A6D5A6D5A2F447AC238>I<
EC7FF00103B5FC010F14C0013F14F090397F801FFC3A01FC0003FE48486D7E497F4848EC
7F80163F484815C0A2001F151FA27FA27F7F01FE143F6D158002C0137F02F014006C01FC
5B6E485A6C9038FF83FCEDE7F86CECFFE06C5D6C92C7FC6D14C06D80010F14F882013F80
90B7FC48013F14802607FC0F14C0260FF80314E04848C6FC496D13F0003F141F48481307
496D13F8150000FF157F90C8123F161F160FA21607A36D15F0127F160F6D15E06C6C141F
6DEC3FC06C6CEC7F80D80FFE903801FF003A07FFC00FFE6C90B55AC615F0013F14C0010F
91C7FC010013F02D427BC038>I<EC7FF0903807FFFE011F6D7E017F14E09039FFE03FF0
489038800FF848496C7E48488048486D7E001F80003F1680A2484815C08117E0A212FF17
F0A617F8A45D127FA3003F5CA26C7E5D6C6C5B12076C6C131E6CEBC07C6CEBFFF8013F5B
010F01C013F00101130090C8FCA217E05DA2EA03C0D80FF015C0487E486C491380A21700
4B5A150F5E49495A6C48495A01C0EBFFE0260FF0035B6CB65A6C4AC7FC6C14F86C6C13E0
D907FEC8FC2D427BC038>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmtt8 8 15
/Ff 15 118 df<1318133C137CA213FC120112031207127F12FFA2137C127C1200B3A638
7FFFFC14FEA314FC172A7AA923>49 D<14FC497E1303A2EB07DE130F149EEB1F1E133F13
3E137E137C13F8120113F0EA03E0120713C0120FEA1F8013005A123E5A12FCB612F815FC
A36C14F8C7EA1E00A7903807FFF84913FCA36D13F81E2A7EA923>52
D<001FB5FC481480A31500003EC8FCAAEB1FE0EBFFF8003F13FE8015809038E03FC0EB80
0F90380007E0121EC7EA03F0A21401A2123812FEA21403A2EC07E048130F007EEB1FC039
7FC0FF806CB512006C5B00075B6C13F038007F801C2A7DA823>I<3803FF80000F13E048
13F8487F80EB80FFEC3F80381F001FC7FC140F14FF137F0003B5FC120F5A387FF00F1300
12FCA25A141F7E6C133F387F81FF90B512FC6C14FE7E000713C73901FE01FC1F1D7D9C23
>97 D<EB3FF0EBFFFC000313FF5A5A381FE07FEA3F80387F003E007E90C7FCA25AA25AA5
7EA2007E1307007FEB0F80141FEA3FC0391FF07F006CB5FC6C5B6C5BC613F0EB3FC0191D
7B9C23>99 D<ECFF8015C0A41407A7EB7F873801FFE74813F7000F13FF5A13E0383F803F
387F001F007E130FA2481307A25AA56C130FA2127E141F007F133F383F807FEBE0FF6CB5
12FE7E000313F76C13C738007F031F297EA823>I<EB3FC0EBFFF800037F4813FF481480
381FF07F393F801FC0EB000F007E130715E05AB6FCA415C000F8C8FC7EA2007EEB01C000
7FEB03E0383F800713E0391FF81FC06CB5FC6C14800001EBFE006C6C5AEB1FE01B1D7D9C
23>I<EC01F090383F07FC9038FFDFFE000313FF5A48147E381FE1FE9038807E18393F00
3F00A2003E7FA4003F5BA2381F807EEBE1FE6CB45A485B5C001E13C0013FC7FC90C8FC12
1F1340380FFFFCECFF804814C04814F0397E0007F8007C130048147CA248143CA36C147C
6C14FC007FEB03F8EBE01F6CB512F0000F14C06C14800001EBFE0038003FF01F2E7E9D23
>103 D<B47E7FA41207A7EBC1FCEBC7FF01DF138090B512C0A29038FE0FE0EBF807EBF0
0313E0A313C0AD39FFFE1FFF5CA38020297FA823>I<133813FEA5133890C7FCA6EA7FFC
487EA3127FEA003EB3387FFFFEB6FCA36C13FE182A7AA923>I<38FF81FCEBC7FF01DF13
8090B512C0A23907FE0FE0EBF807EBF00313E0A313C0AD39FFFE1FFF5CA380201D7F9C23
>110 D<133F3801FFE0487F487F487F381FC0FE383F807F383E001F007E1480007C130F
00FC14C0481307A66C130FA2007C1480007E131F6CEB3F006D5A381FE1FE6CB45A6C5B6C
5B6C5BD8003FC7FC1A1D7C9C23>I<397FF00FE039FFF87FF8ECFFFC13FB6CB5FCC613F8
ECC078EC800091C7FC5BA25BA35BAA387FFFFCB57EA36C5B1E1D7E9C23>114
D<137013F8A7007FB51280B612C0A36C1480D800F8C7FCACEC01C0EC03E0A3EBFC07140F
9038FE1FC0EB7FFF158090383FFE00EB0FFCEB07F01B257EA423>116
D<39FF807FC001C013E0A400071303B01407140FEBE03F90B6FC7EA2C613F3EB3FC1201D
7F9C23>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmtt12 12 50
/Fg 50 126 df<14F0497EA8007015E000F8EC01F000FE140700FF140F01C1133F01F113
FF263FF9F913C0000FB61200000314FCC614F06D5B011F1380D907FEC7FC90381FFF8001
7F13E090B57E000314FC000F14FF263FF9F913C026FFF1F813F001C1133F0101130F00FE
140700F814010070EC00E000001500A86D5A242B79B333>42 D<007FB612FEA2B8FCA36C
15FEA228077BA133>45 D<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B0B6C8A
33>I<EB01E0497EA21307A2130FA2131F133F137F13FF1203123F5AEAFFF713E71387EA
7E071200B3B3A2003FB512FE48801680A216006C5C213E76BD33>49
D<EB03FF011F13E0017F13FC48B57E48ECFF804815C0260FFE0313E03A1FF0007FF049EB
1FF84848130F49EB03FC127F90C7EA01FE4814005A6C15FF167FA3127E123CC9FCA216FF
16FEA2150116FC150316F81507ED0FF0ED1FE0153F16C0ED7F80EDFF004A5AEC07FC4A5A
4A5A4A5A4A5A4A5A4990C7FC495AEB07F8EB1FF0495A495A495A4890C8FC4848143E4848
147FEA0FF0485A48B7FCB8FCA37E6C15FE283E7BBD33>I<15FF4A7F5C5CA25C5C15DFEC
3F9FA2EC7F1F14FEA2EB01FCA2EB03F8EB07F0A2EB0FE0EB1FC0A2EB3F80A2EB7F0013FE
A2485A12035B485AA2485A485AA2485AA248C7FC12FEB812E017F0A46C16E0C8381F8000
AC021FB512804A14C04A14E0A26E14C06E14802C3E7DBD33>52 D<0007B612F04815F85A
A316F001C0C8FCB0ECFFC001C713F801DF7F90B6FC168016C0028013E09039FC001FF001
F0EB0FF849130749EB03FC6C4813016CC713FEC9FCA216FF167FA41218127EA2B415FF16
FEA24814016C15FC6C14036DEB07F86D130F6C6CEB1FF06C6CEB7FE09039FE03FFC06CB6
12806C150000015C6C14F8013F13E0010390C7FC283E7BBC33>I<127CB8128017C0A417
8048C813004B5A4B5A007C4A5AC8485A5E151F4B5A4B5A93C7FC5D5D4A5A14035D14075D
140F5D141F5D143F5DA24AC8FCA25C5CA213015CA3495AA413075CA5130F5CAA6D5A6D5A
2A3F7CBD33>55 D<ECFFC0010713F8011F13FE017F6D7E90B67E4881489038807FF03A07
FE001FF8D80FF8EB07FC49130348486D7E491300003F814980A66C6C14FEA26C6C495A6D
13036C6C495AD803FEEB1FF03A01FF807FE06C90B55A013F91C7FC010F13FCA2013F13FF
90B612C0489038807FE03A07FC000FF848486D7ED81FE0EB01FE4913004848147F007F16
8090C8123FA200FEED1FC0A76C153F6C16806D147F003F16006D5C6C6C495A01F813076C
6C495A3A07FF807FF86C90B55A6C5D6C6C14806D91C7FC010713F8010013C02A3F7CBD33
>I<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F00C7FCB3A3121FEA3F80EA7FC0EA
FFE0A5EA7FC0EA3F80EA1F000B2B6CAA33>58 D<EA07C0EA0FE0EA1FF0EA3FF8A5EA1FF0
EA0FE0EA07C0C7FCB3A3EA07C0EA0FE0EA1FF0EA3FF8A213FCA3121F120F12071200A212
0113F81203EA07F0120FEA1FE0127FEAFFC01380130012FC12700E396EAA33>I<007FB7
1280A2B812C0A36C16806C1600CBFCA9003FB7FC481680B812C0A36C1680A22A177CA933
>61 D<1210127CB4FC7F13E07FEA7FFC6C7E380FFF806C13E000017F6C13FCEB3FFE6D6C
7E01077F010113F06D7FEC3FFE6E7E020713C06E13E0020013F8ED7FFE151FED0FFF1503
150FED1FFE157FEDFFF8020313E04A13C0021F13004A5AECFFF8495B010713C0011F5B49
48C7FCEBFFFC4813F000075B481380D83FFEC8FC485AEAFFF05B138090C9FC127C121028
337BB733>I<EC1F804A7E4A7EA34A7EA314F901017FA501037FA214F0A201077FA4ECE0
7E010F137FA449486C7EA549486C7EA4017F80EC000FA291B5FCA290B67EA43A01FE0007
F8491303A4000381491301A3000781491300D87FFF90380FFFE0B56C4813F06E5AA24A7E
6C496C13E02C3E7DBD33>65 D<007FB512F8B7FC16C082826C813A03F8000FFCED03FE15
016F7E82A2EE3F80A7EE7F00A25E4B5AA2ED07FCED1FF890B65A5E1680828216F89039F8
000FFCED01FE6F7EEE7F80163F17C0161FA2EE0FE0A7161F17C0A2163FEE7F8016FF4B13
00150F007FB65AB75A5E16E05E6C4AC7FC2B3D7DBC33>I<91391FE00780DAFFFC13C001
03EBFF0F010F148F4914FF5B90387FF81F9038FFC00748497E4848487E497F485A167F48
5A49143F121F5B003F151F5BA2127F90C8EA0F8093C7FCA25A5AAD7E7EA36DEC0F80003F
ED1FC0A27F121F7F000F153F6D15806C7E167F6C6CECFF007F3A01FF8003FE6C6D485A90
397FF81FF86DB55A6D5C6D5C010391C7FC010013FCEC1FE02A3F7CBD33>I<003FB712E0
4816F0B8FCA27E7ED801FCC71207A8EE03E093C7FCA7151F4B7EA490B6FCA69038FC003F
A46FC7FC92C8FCB1383FFFF8487FB57EA26C5B6C5B2C3D7DBC33>70
D<003FB612804815C0B712E0A26C15C06C1580260003F8C7FCB3B3AD003FB612804815C0
B712E0A26C15C06C1580233D78BC33>73 D<D87FFC90381FFFE0486C4913F07FA36C6D6C
13E00003913800FC0013F780A213F380A3EBF1F0A38013F0A280A2147C147EA2143E143F
A2801580A3140F15C0A2140715E0A2140315F0A21401A215F81400A3157CA3153C153EA2
151E151F387FFF80B5EAC00FA315076C496C5A2C3D7DBC33>78 D<003FB512FC48ECFF80
B712E016F86C816C813A01FC000FFF030313801500EE7FC0163FEE1FE0160FA217F01607
A6160F17E0A2161FEE3FC0167FEEFF801503030F130090B65A5E5E16E0168003FCC7FC01
FCC9FCB3383FFFE0487FB57EA26C5B6C5B2C3D7EBC33>80 D<007FB57EB612F815FE8182
6C812603F8007FED3FF0ED0FF815076F7E1501A26F7EA74B5AA215034B5A150FED3FF0ED
FFE090B65A5E93C7FC5D8182D9F8007F153F6F7E150F821507AA173E177FA416F8030313
FF267FFFC014FEB538E001FF17FC81EE7FF86C49EB3FF0C9EA0FC0303E7EBC33>82
D<D907FE137890393FFFC07C90B5EAF0FC4814FC000714FF5AEBFC03391FF0007F484813
3F0180131F007F140F90C712074814035AA21501A46CEC00F86C15007F7F6C7E7FEA1FFE
380FFFE06C13FF6C14F06C14FC6C6C13FF011F1480010314C0D9003F13E0020313F09138
003FF8ED0FFC1507ED03FE1501150016FFA2007C157F12FEA56C15FF16FE7FED01FC6D13
0301F0EB07F801FC130F9039FF807FF091B512E016C000FC1580013FEBFE00D8F80F5BD8
780013E0283F7BBD33>I<003FB712F84816FCB8FCA43AFE000FE001A8007CED00F8C715
00B3B3A40107B512C049804980A26D5C6D5C2E3D7EBC33>I<D87FFF903803FFF8B56C48
13FCA46C496C13F8D807F09038003F806D147F00031600A36D5C00015DA46C6C495AA46D
13036D5CA3EC8007013F5CA3ECC00F011F5CA46D6C485AA46D6C485AA4010391C7FC6E5A
A30101137EA2ECFCFEA201005BA5EC7FF8A46E5AA26E5A6E5A2E3E7EBC33>86
D<007FB612FEA2B8FCA36C15FEA228077B7D33>95 D<EB1FFC90B57E000314E048804814
FC48809038F007FFEBE0016E7F153F6C48806C48131FC87F150FA5EC0FFF49B5FC131F13
7F48B6FC0007140F4813C0381FFC00EA3FF0EA7FC05B48C7FC5AA56C141F7E6D137FD83F
E0497ED9F807EBFFF06CB712F87E6C14F36C14C1C69138003FF0D91FF090C7FC2D2E7BAC
33>97 D<EA3FFC487E12FFA2127F123F1200ABEC01FE91380FFFC04A13F0027F7F91B512
FE90B7FCECFE07DAF800138002E0EB7FC04AEB3FE04A131FEE0FF091C7FC16074915F816
03A217FC1601A9160317F8A26D140717F06E130F17E06E131FEE3FC06E137F9139F801FF
80DAFE07130091B55A495C6E5BD97E3F13E0D93C0F138090260003FEC7FC2E3E7FBC33>
I<ECFFF0010713FE011FEBFF804914C04914E048B612F048EBC01F9038FE000F485A485A
4848EB07E049EB03C0484890C7FC5BA2127F90C9FCA25A5AA97E7EA27F003FEC01F06DEB
03F86C7E6D13076C6C14F06C6C130F01FFEB1FE06CEBE07F6C90B512C06C1580013F1400
6D13FC01075B010013C0252E79AC33>I<ED7FF84B7E5CA280157F1501ABEB01FF010713
C1011F13F1017F13F990B6FC5A4813813907FE003FD80FF8131F49130F48481307491303
123F491301127F90C7FCA25A5AA97E7E15037F123F6D1307A26C6C130F6D131F6C6C133F
6C6C137F2603FF81B512F091B612F8C602FD13FC6D13F96D01E113F8010F018013F0D901
FEC8FC2E3E7DBC33>I<ECFF80010713F0011F13FC497F90B6FC48158048018013C03A07
FE003FE001F8EB0FF048481307484814F8491303003F15FC491301127F90C7FC16FE1500
5A5AB7FCA516FC48C9FC7E7EA36C7E167C6C6C14FE7F6C7E6D13016C6CEB03FC6CB4130F
6C9038C03FF86C90B512F06D14E06D14C0010F1400010313FC9038007FE0272E7BAC33>
I<ED3FE0913801FFFC020713FE141F4A13FF5CECFFC015004948137E4A133C010314005C
A8003FB612F84815FCB7FCA36C15F8260003F8C7FCB3AD003FB612804815C0A46C158028
3E7DBD33>I<D901FEEB1FE0903A0FFFC0FFF0013F01F313F84990B512FC90B7FC5A4801
0313E12607FC00EB80F849017F1360484890383FC00049131FA2001F8149130FA66D131F
000F5DA26D133F6C6C495A6D13FF2603FF0390C7FCECFFFE485C5D5DD80FCF13C0D981FE
C8FC0180C9FCA27FA26C7E7F90B512FC6CECFFC06C15F0000715FC4815FF4816809038E0
000748489038007FC090C8EA1FE048150F007E150700FE16F0481503A56C1507007E16E0
007F150F6C6CEC1FC001E0147FD81FF8903801FF80270FFF801F13006C90B55A6C5DC615
F0013F14C0010F91C7FC010013F02E447DAB33>I<EA3FFC487E12FFA2127F123F1200AB
4AB4FC020713C0021F13F0027F7F91B5FC90B67EED07FEECF801ECF0004A7F4A7F5CA291
C7FCA35BB3A43B3FFFF80FFFFC486D4813FEB56C4813FFA26C496C13FE6C496C13FC303D
7FBC33>I<14E0EB03F8A2497EA36D5AA2EB00E091C8FCAA383FFFF8487FA47EEA0001B3
AD007FB612C0B712E016F0A216E06C15C0243E78BD33>I<383FFFFC487FB5FCA27E7EC7
FCB3B3AD003FB612F84815FCB712FEA26C15FC6C15F8273D7ABC33>108
D<02FC137E3B7FC3FF01FF80D8FFEF01877F90B500CF7F15DF92B57E6C010F13872607FE
07130301FC01FE7F9039F803FC01A201F013F8A401E013F0B3A53C7FFE0FFF07FF80B548
018F13C0A46C486C01071380322C80AB33>I<4AB4FC263FFC0713C0267FFE1F13F000FF
017F7F91B5FC6CB67E6CEC07FEC6EBF801ECF0004A7F4A7F5CA291C7FCA35BB3A43B3FFF
F80FFFFC486D4813FEB56C4813FFA26C496C13FE6C496C13FC302C7FAB33>I<EB01FE90
380FFFC0013F13F0497F90B57E488048EB03FF2607FC0013804848EB7FC049133F4848EB
1FE049130F4848EB07F0A2007F15F890C71203A300FEEC01FCAA6C14036C15F8A26D1307
003F15F06D130FA26C6CEB1FE06D133F6C6CEB7FC06C6CEBFF802603FF0313006CEBFFFE
6C5C6D5B6D5B010F13C0D901FEC7FC262E7AAC33>I<EC01FE3A3FFC0FFFC0486C4813F0
00FF017F7F91B512FE6CB7FC6CEBFE07C6D9F800138002E0EB7FC04AEB3FE04A131FEE0F
F091C7FC16074915F81603A217FC1601A9160317F8A26D140717F06E130F17E06E131FEE
3FC06E137F9139F801FF80DAFE07130091B55A495C6E5B6E13E0020F1380DA03FEC7FC91
C9FCAF383FFFF8487FB57EA26C5B6C5B2E427FAB33>I<02FF137C0107EBE0FE011F13F0
017F13FC90B512FE4814FF4813C03907FE003F4848131F01F0130F484813071503485A49
1301127F90C7FC15005A5AA97E7E15017F123F6D130315076C7E6C6C130F6D131FD807FE
137F3903FF81FF6CEBFFFE6C14FC6D13F86D13F0010F13C0903801FE0090C8FCAF92387F
FFFC92B512FEA46F13FC2F427CAB33>I<ED03FE3B7FFF801FFF80B5D8C07F13E002C1B5
FC02C314F014C76C9038CFFE0F39001FDFF09139FFC007E092388003C092C8FC5C5C5CA2
5CA25CA35CB2007FB512FEB7FCA46C5C2C2C7DAB33>I<90381FFE0F90B5EA8F80000314
FF120F5A5AEBF007387F800190C7FC00FE147F5A153FA37E007FEC1F0001C090C7FCEA3F
F8EBFFC06C13FF6C14E0000314F8C680011F13FF01001480020713C0EC007FED1FE0007C
140F00FEEC07F01503A27EA27F15076D14E06D130F6DEB3FC09038FE01FF90B612801600
00FD5C00FC14F8D8F83F13E0D8780790C7FC242E79AC33>I<EB03C0497E130FAA003FB6
12FC4881B7FCA36C5D26000FE0C8FCB3A3161FEE3F80A5167F6E140001075C6E5A9138FE
07FE6DB55A6D5C6D5C6E5B021F1380DA07FCC7FC29387EB633>I<D83FFCEB1FFE486C49
7E00FF5CA2007F80003F800000EC007FB3A75EA25DA26D5B90387F800FDAE03F13FC6DB6
12FE17FF6D806D01FE13FE01039038F83FFC010001C0C7FC302C7FAA33>I<3B3FFFC00F
FFF0486D4813F8B56C4813FCA26C496C13F86C496C13F0D801F8C7EA7E006D14FE00005D
A26D1301017E5CA2017F13036D5CA2EC8007011F5CA2ECC00F010F5CA36D6C485AA3ECF0
3F010391C7FCA26E5A0101137EA2ECFCFE01005BA214FF6E5AA36E5AA26E5A6E5A2E2B7E
AA33>I<3B3FFFC07FFF80486DB512C0B500F114E0A26C01E014C06C496C13803B00FE00
0FE000017F495AEB3F804B5A6D6C48C7FC90380FE07E903807F0FEECF1FC903803FBF8EB
01FF6D5B5D6E5A143F6E5A143F814A7E14FF903801FBF0ECF9F8903803F1FCEB07E0157E
90380FC07F011F6D7E90383F801F02007F496D7E01FE6D7E484813033B7FFFC03FFFE0B5
6C4813F0A46C496C13E02C2B7DAA33>120 D<3B7FFF801FFFE0B56C4813F06E4813F8A2
4A6C13F06C496C13E0D803F8C7EAFC00000114015E7F000014036D5C137EA2017F495A7F
A26E485A131FA26D6C485AA214E0010749C7FCA214F01303157EEB01F8A2157C010013FC
14FC5D147C147DEC3FF0A36E5AA36E5AA2141F5DA2143F92C8FCA3147EA214FE003F5B13
01387F81F81383EB87F0139FEBFFE06C5B5C6C90C9FCEA0FFCEA03F02D427DAA33>I<ED
07FEED7FFF4AB5FC14075C4A13FE91383FFE0015E0EC7F8092C7FCB3A45C495A1303EB1F
FCEA3FFFB55A14E05C8014F8003F7FEA001FEB03FE13016D7E80B3A481EC3FE015FE9138
1FFFFE6E13FF8014016E7EED07FE284D7BC433>123 D<127CA212FEB3B3B3B3127CA207
4D6AC433>I<EA7FF0B5FC14C014F0806C7F38003FFE1303EB00FF80B3A4816E7E81EC1F
FCEDFFFC6E13FF1403805C140F4A13FCEDFC00EC3FE05D4A5A92C7FCB3A45CEB03FE133F
387FFFFCB55A5C14C091C8FCEA7FF0284D7BC433>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmcsc10 12 4
/Fh 4 110 df<DB03FF140C033F01F0131C4AB500FC133C91390FFE007FDA1FF090380F
C07CDA7F80903803E0FC4948C812F0D903FC15794948153FD91FF0151F4948150F494815
074A150349C9FC48481601120349160012074848177CA24848173CA2123FA249171C127F
A319005B12FFAC127F7FA2191CA2123F7FA2001F183C19386C7EA26C6C1778000318706D
17F0000118E06C6C16016D6C16C06E15036D6CED07806D6CED0F00D907F8151E6D6C5D6D
B45D6D6C6C495ADA1FF0EB07C0DA0FFEEB7F800201B500FEC7FCDA003F13F0030313803E
4879C54E>67 D<157015F8A34A7EA24A7EA34A7E81A291380E3F80A2021E7FEC1C1FA24A
6C7EA34A6C7EA202F07FECE003A249486C7EA349486C7EA201078091C77EA249B67EA249
81011CC7121FA2013C810138140FA2496E7EA201F081491403120183486C140100074B7E
D81FF84A7EB5027F13F8A335357CB43D>97 D<B512FEA3000390C9FCEA01FCB3A9EE01C0
A416031780A41607A2160F161FA2167FEEFF00486C1307B8FCA32A337BB233>108
D<D8FFFEEE7FFFA26D93B5FC000318C06C1880D9DF80EC01DFA2D9CFC0EC039FA3D9C7E0
EC071FA2D9C3F0140EA3D9C1F8141CA2D9C0FC1438A3027E1470A26E14E0A391391F8001
C0A291390FC00380A3913907E00700A2913803F00EA36E6C5AA26E6C5AA3ED7E70A26F5A
A3486C6D5A487ED81FFC6D48EB3FC0B50080020FB5FCA2ED070040337BB24A>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmbx12 17.28 24
/Fi 24 118 df<EF7FFF041FB512E04BB612FC030F81037F6F7E4AB5D8C0037F020701FC
C76C7E4A01E0EC1FF0023F0180147F4A90C748487EDAFFFC5C49498260495B5D5BA2495B
A3725BA2725B725BF13F8096C9FCAA0503B512FEBBFCA6D8000F01E0C7120184B3B3AF00
3FB6D8F803B71280A651647DE35A>12 D<140CEC7F80ECFFC04913E04913F015F85B5B49
13FC5BA24913F890B5FC4814F015E04814C0481400485B4813F814E04813804848C7FC48
5A13F013C06CC8FC123C12181E1C5EE551>19 D<EA01F8EA07FF4813804813C04813E048
13F0A2B512F8A214FCA314FEA27EA27E7E6C13BE6C133EEA01FCC7FCA2147CA514F8A3EB
01F0A2EB03E0A2EB07C0130F1480131FEB3F00137E13FE485A485A485A485A5B6C5A6CC7
FC173174E32D>39 D<16F04B7E1507151F153FEC01FF1407147F011FB5FCB7FCA41487EB
E007C7FCB3B3B3B2007FB91280A6395D74DC51>49 D<913801FFF8021FEBFFC091B612F8
010315FF010F16C0013F16F09026FFF80180489026C0003F13FE4890C7000F7FD807FC02
03148048486E14C048486E14E04981D83FF86F13F001FE6F13F8487E6E6E13FC80B56F13
FE80A319FF83A26C5BA26C5BA26C90C8FCEA07FCD800E04B13FE90C9FCA219FC5FA219F8
5F19F04D13E0A24D13C0198094B512004C5B604C5B4C5B4C5B604C90C7FC4C5A4C5A4C5A
4B13E04B5B4B5B4CC8FC4B5A4B5AED3FE04B48143F4B5A4A90C8FC4A5ADA07F8157E4A5A
4A5A4A5A4A5A02FEC912FE495A495A4948ED01FC4948150749B8FC5B5B90B9FC5A4818F8
5A5A5A5A5AA2BAFC19F0A4405D78DC51>I<ED7FFE0207B512F8023F14FF49B712C04916
F0010FD9800F13FC90271FF800037FD97FE001007FD9FF806E7F49C86C7F486C834801C0
6E7F80486D826E80804884A3805CA27EA24A4A5B6C5B6C5B6C6C485E011EC85A90C95CA2
4D5B6194B5FC96C7FC4C5B4C13F84C5B4C5B043F1380922607FFFEC8FC020FB512F817E0
94C9FC17F817FF91C7001F13E0040313F8040013FE717E7113C0717F85717F858385A285
831A80A31AC0EA03FCEA0FFF487F487FA2487FA2B57E1A80A34D1400A25C6C604A5C6C60
91C8485B6C5A01F04B5BD80FFC4B5B6CB492B55A6C01E0010391C7FC6C01FF011F5B6C6C
90B65A011F16F0010716C001014BC8FCD9001F14F0020049C9FC425E79DC51>I<F01F80
4E7E187F18FF5FA25F5F5FA25F5F5F94B5FCA25E5E5E5EA25EEE3FBFEE7F3F16FE16FC15
01ED03F8ED07F0ED0FE016C0151FED3F80ED7F0015FE5D14014A5A4A5A4A5A5D141F4A5A
4AC7FC14FE5C1301495A495A495A5C131F495A49C8FC13FE5B1201485A485A485AA2485A
485A48C9FC12FEBCFCA6CA6CEBC000B1037FB8FCA6485D7CDC51>I<BB12E0F2FF801BF0
1BFE757E1CF0D800010280C7000780DF003F13FE08076D7E080180746C7F091F7F7513FC
757F09017F878A767F767F888A767FA2767FA2767FA28A881F80A37614C0A41FE0A5891F
F0B09AB512E0A51FC0A4521480A31F006466A2525BA2525BA2525B525BA2525B99B55A51
91C7FC515B515B091F5B097F5B50B55A08071480083F91C8FC0707B512FCBD12F01CC051
C9FC1BF81B8008E0CAFC6C627AE17C>68 D<B912F8A6D8000102C0CBFCB3B3B1F307E0A5
F30FC0A61B1FA31B3F1C80A21B7FA21BFFA262A262625013006262624FB5FC1907191F4E
B6FCBDFC63A553627AE161>76 D<B700C0083FB612F070627097B7FCA37061D800010DF8
C7FC70F103EFA202FD6DF107CFA202FC6DF10F8FA36F6DF01F0FA26F6D183EA26F6D187C
A26F6D18F8A36F6DEF01F0A26F6DEF03E0A26F6DEF07C0A26F6DEF0F80A3706DEE1F00A2
706D163EA2706D5EA2706D5EA3706D4B5AA2706D4B5AA2706D4B5AA2706D4B5AA3716D4A
C7FCA2716D143EA2716D5CA2716D5CA3716D495AA2716D495AA2716D495AA2716D495AA3
726D48C8FCA272EBC03EA2726D5AA2726D5AA372EBF9F0A272EBFFE0A2725CA2725CA373
90C9FCA2735AA2735A90381FFFC0B700F86E480207B812F0A3735AA2735A8C627AE199>
I<001FBEFCA64849C79126E0000F148002E0180091C8171F498601F81A0349864986A249
1B7FA2491B3F007F1DC090C9181FA4007E1C0FA600FE1DE0481C07A5CA95C7FCB3B3B3A3
023FBA7EA663617AE070>84 D<91381FFFFC0103B612E0011F15FC017F15FF90B812C048
9026F0003F13F04803077F6E01017F707F486D6E7E8583717FA26C4982836C4982A23800
7FC0011FC8FC90C9FCA7047FB5FC033FB6FC0203B7FC143F49B5EAF00F0107EBFE00011F
13F0017F13C048B5C7FC4813FC485B485B485B5C5A485BA291C8FCB5FCA45FA25F6C6D14
3B177B6C6D14F36EEB01E36C6D0107806C6DD90FC313FF6C01FFD9FF8114FE00019126FF
FE0114FF6C6C4A7E011F02F07F010302C0131F9026003FFCC7000313FE48407BBF4E>97
D<92380FFFFC4AB612E0020F15FC023F15FF91B8128001039026FE000713C04901F015E0
011F01C05B4990C7FC49484A13F0495A485B5A5C487013E0485B7113C0485B0501130048
EE007C95C7FCA2485BA4B5FCAC7EA280A27EA36C7F19FC7E806CEF01F86C7F6EED03F06C
6D15076CEF0FE06D6C6CEC1FC06D6DEC3F806D6DEC7F00010701FCEB01FE6D9039FF801F
FC010091B55A023F15E0020F1580020102FCC7FCDA000F13C03E407BBF48>99
D<F17FF8050FB5FCA6EF000F8484B3A9ED0FFF4AB512F0020F14FE023FECFF8391B712E3
01039138007FF34901F0EB07FB011F01C00101B5FC49497F4948C8123F49488148498148
835C485B5AA2485BA25AA3485BA4B5FCAC7EA47E80A27EA27E807E6E5D6C5F6C6D5D6C6D
5D6E92B5FC6D6C5C011F6D0107806D01E0D91FF77F6D01FCD9FFE7EBFFFE010190B61287
6D6CECFE07021F14F8020314C09139001FFE004F647BE35A>I<92381FFFC04AB512FE02
0F6E7E027F15F091B77E0103D9FE0113FE010F9039F0003FFF4901C0010F7F4990C76C7F
494802017F49488248498048496F7E85485B48717EA24849151F855AA34849811A80A3B5
FCA291B9FCA31A000280CBFCA67EA3807EA36C7F190F6CF01F806C7F193F6C6D17006C60
6C6D16FE6D6C4B5A6D6C4B5A6D01C0EC0FF06D01F0EC3FE06D01FCECFFC001019026FFC0
0F5B6D91B6C7FC023F15FC020715F002001580030701F0C8FC41407CBF4A>I<EE3FFC03
03B51280031F14C092B612F0020315F84A9038F03FFC021FEB807F4A903800FFFEEC7FFC
4A484813FF5B15F05B15E05B7013FE5D49ED7FFCEF3FF8EF1FF0EF038094C7FCAFB812C0
A6D8000F01E0C8FCB3B3B0003FB612FEA638647CE331>I<EB0FE0EB3FF8497E497E487F
4880A24880A76C5CA26C91C7FC6C5B6D5A6D5AEB0FE090C9FCB0903807FF80007FB5FCA6
C6FC7F7FB3B3ADB712C0A622657BE42C>105 D<902607FF80D90FFFEE7FF8B691B500F0
0207B57E040302FC021F14E0040F02FF027F14F8043F6F48B67E93267FC03F9027C003FE
017F9326FE000F903BE007F0007FFFC6DA81F86D9026F00FC06D7F6DD983E04CC7FC6DD9
87C06DD9F83E6E7FDB8F805E93C7DAFC7882039E6E4A8003BCEEFDE003B8DCFFC08215F8
4B5FA24B94C8FCA44B5EB3B2B7D8F007B7D8803FB612FCA67E407BBF89>109
D<902607FF80EB0FFFB691B512F0040314FC040F14FF043F8193267FC03F7F9326FE000F
7FC6DA81F86D7F6DEB83E06DD987C06D7FED8F8093C780039E8015BC03B88215F85DA25D
A45DB3B2B7D8F007B71280A651407BBF5A>I<923807FFE092B6FC020715E0023F15FC91
B8FC010349C66C13C04901F0010F7F011F0180010113F84990C87F49486F7E49486F7E48
496F138048496F13C04A814819E04819F04A814819F8A24819FC4A81A24819FEA4B518FF
AC6C19FEA46C6D4B13FCA36C19F8A26C6D4B13F0A26C19E06E5D6C19C06C6D4B13806C6D
4B13006D6C4B5A6D6C4B5A6D01C001035B6D01F0010F5B010301FE017F13C0010090B7C7
FC023F15FC020F15F0020092C8FC030713E048407CBF51>I<D90FFFEB07F8B6EB3FFF4C
13C04BB512F04B14F8923907F87FFCED0FE0C6923880FFFE6D495A6DD91E0113FF153CA2
1578A24B6C13FEA24BEB7FFCA2EF1FF04BEB07C094C7FCA45DB3B0B712F8A638407BBF42
>114 D<913A3FFF8007800103B5EAF80F011FECFE3F017F91B5FC48B8FC48EBE0004848
C7120FD80FF814034848804980003F167F49153F127FA200FF161FA27FA213F86D92C7FC
13FF14F06CEBFF8015FEEDFFE06C15FCEEFF806C16E06C826C16FC6C826C826C6C168013
1F010716C0010116E0EB001F020015F01503ED003F040713F8007C150100FC81177F6C16
3FA2171F7E18F07FA26D16E06D153F7F6DED7FC06DEDFF8001FF5C02C00107130002F8EB
7FFE019FB612F8010F15E0D8FC03158048C66C49C7FC48010713C035407BBF40>I<EC07
E0A6140FA5141FA3143FA2147FA214FF5BA25B5B5B5B137F48B5FC000F91B512FEB8FCA5
D8001F01E0C8FCB3AFEF0FC0AC6DED1F80A2816DED3F00816D157E6D6D5B6DEBFF036EEB
FFF86E5C020F14C0020191C7FC9138001FFC325B7DDA3F>I<902607FFC0ED3FFEB60207
B5FCA6C6EE00076D826D82B3B360A360A26D5E181E181C6D163C6F14F86D4B487F6D01F8
D907E08003FED93FC0ECFF80010090B65A6E5D021F14FC020314F0DA003F138051407BBF
5A>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmti12 12 11
/Fj 11 117 df<EC1F80EC7FE0903901F07070903907C039F890380F801D90381F001F01
3E6D5A137E5B484813075E485A120749130F000F5DA2485A151F003F5D5BA2153F007F92
C7FC90C7FCA25D157E12FEA29238FE0380EDFC071700A2007E13015E913803F80E140700
3E010F131E161C6C131C02385B3A0F80F078783A07C3E07C703A01FF801FE03A007E0007
80292D76AB32>97 D<EB0FE0EA07FFA338001FC0130F131FA25CA3133F91C8FCA35B137E
A313FE5BA312015BEC1F80EC7FE03903F9E0F89038F3C07C9038F7003E13FE48487F5BA2
491480485AA25BA2121F5BA2153F123F90C7FCA2157F481500127EA25D5D5AA24A5AA24A
5AA2007C5C4A5A140F5D4A5A003C49C7FC003E137E001E5B6C485A380783E03803FF80C6
48C8FC214676C42D>I<EC0FE0EC7FF8903801F81E903807E00F90390F80078090381F00
03017E14C049131F0001143F5B4848EB7F801207485AED3E00484890C7FCA2485AA2127F
90C9FCA35A5AA45AA5ED0180ED03C0ED0780A2007CEC0F00007E141E003E147C15F06CEB
03E0390F800F802607C07EC7FC3801FFF838007FC0222D75AB2D>I<EC0FE0EC7FF89038
01F83E903807C00F90391F800780EB3F00017E14C0491303485A48481307000715805B00
0F140F484814005D4848133E15FCEC07F0007FEBFFC0D9FFFEC7FC14C090C9FC5A5AA55A
A4ED0180ED03C0007CEC0780A2007EEC0F00003E141E157C6C14F06CEB03E03907800F80
2603C07EC7FC3801FFF838003FC0222D75AB2D>101 D<143C147E14FE1301A3EB00FC14
701400AE137C48B4FC3803C780380703C0000F13E0120E121C13071238A21278EA700F14
C0131F00F0138012E0EA003F1400A25B137EA213FE5B12015BA212035B141E0007131C13
E0A2000F133CEBC038A21478EB807014F014E0EB81C0EA0783EBC7803803FE00EA00F817
4378C11E>105 D<EB03F8EA01FFA3380007F013031307A214E0A2130FA214C0A2131FA2
1480A2133FA21400A25BA2137EA213FEA25BA21201A25BA21203A25BA21207A25BA2120F
A25BA2121FA25BA2123FA290C7FCA2387F01C01303007E1380A2130700FE130012FCA25B
130EEA7C1E131CEA3C3CEA3E786C5AEA07C0154678C419>108 D<D801F0EB0FE0D803FC
EB7FF83A071E01F03E3A0E0F03C01F001ED987001380001C018E130F003C139C003801B8
14C014F838781FF000705BA25C00F049131FD8E03F158091C7FC1200163F491500137EA2
5E01FE147E5B16FE5E12014913015E170F00030203130E4914F0A20307131E0007EDE01C
5B173CEEC038000F167849157017E0ED03C1001FEDE3C049903801FF000007C8127C302D
78AB37>110 D<EC0FE0EC7FFC903801F83E903907E00F8090390F8007C0EB1F00017EEB
03E04914F0A248481301484814F81207485AA2485AA2485A1503127F90C7FCA215074815
F05AA2150F16E05AED1FC0A21680153F16005D157E5D007C495A007E495A003E5C4A5A6C
EB1F80260F803EC7FC3807C0FC3801FFF038003F80252D75AB32>I<D801F0EB3F803A03
FC01FFF03A071E03C0F83A0E0F0F007C001E90389E01FC001C139CECB803003813F0A2D9
1FE013F80078EC00E00070491300A200F05BEAE03F91C8FC1200A25B137EA313FE5BA312
015BA312035BA312075BA3120F5BA3121F5B0007C9FC262D78AB29>114
D<EC0FE0EC7FF8903801F01E903803C00F90390780078090380F0003011E14C015074913
1FA2017CEB3F801378137CED0E0092C7FC137E137F14F014FF6D13C06D13F06D7F6D7F13
00EC0FFE14011400157F81120E003F141E487EA2153E48C7123CA200FC5C12705D007849
5A6C495A6CEB0F80260F803EC7FC3803FFF838007FC0222D7AAB28>I<1470EB01F8A313
035CA313075CA3130F5CA3131F5CA2007FB512E0B6FC15C0D8003FC7FCA25B137EA313FE
5BA312015BA312035BA312075BA3120F5BA2EC0780001F140013805C140E003F131EEB00
1C143C14385C6C13F0495A6C485AEB8780D807FEC7FCEA01F81B3F78BD20>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmr8 8 1
/Fk 1 51 df<EB7F803801FFF0380780FC380E003F48EB1F8048EB0FC05A0060EB07E012
F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC3F00147E147C5C495A
495A495A495A011EC7FC5B5B4913305B485A4848136048C7FC000E14E0001FB5FC5A4814
C0B6FCA21C2C7DAB23>50 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmmi12 12 3
/Fl 3 111 df<121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A0A78891B>58
D<14FE137FA25C13011300A2495AA4495AA4495AA4495AA4495AA2ED7F80913881FFE090
393F0780F091380E00780218137C4A7FEB7E605CD97F80133F91C7FC5B5B5BA24848147E
A448485CA34B5A485AA24B5AA2485A4B5AA21702484890380FC006A392381F800C48C7FC
A2EE00181730127E176017C092380F0180489138078700007CEC03FE0038EC00F82F467B
C438>104 D<01FCEB03F8486CEB1FFE3B0307803C0F8000069138E007C03A0C03C1C003
0018D9E3007F14E683003013EC14F8495A12605CA2484848495AA21200A24948495AA34C
5A49C7FCA24CC7FCA2137E167EA21820494A1360A34B4813C0485AA29338F00180EF0300
485A17065F03005B4848EC78700003ED3FE06C48EC0F80332D7DAB3A>110
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmsy10 12 5
/Fm 5 80 df<007FB912E0BA12F0A26C18E03C04789A4D>0 D<19E0F003F0180FF03FE0
F0FF80943803FE00EF0FF8EF3FE0EFFF80DC03FEC7FCEE0FF8EE3FE0EEFF80DB03FEC8FC
ED1FF8ED7FE0913801FF80DA07FEC9FCEC1FF0EC7FC04948CAFCEB07FCEB1FF0EB7FC048
48CBFCEA07FCEA1FF0EA7FC048CCFCA2EA7FC0EA1FF0EA07FCEA01FF38007FC0EB1FF0EB
07FCEB01FF9038007FC0EC1FF0EC07FC913801FF809138007FE0ED1FF8ED07FE923800FF
80EE3FE0EE0FF8EE03FE933800FF80EF3FE0EF0FF8EF03FE943800FF80F03FE0F00FF018
03F000E01900B0007FB912E0BA12F0A26C18E03C4E78BE4D>20 D<EC0780A3140F92CEFC
A25C141EA2143E143C147C5CA2495A495A1307495A495A49CFFC137E5BEA03F8EA0FE000
3FBDFCBE1280A2003F1C00D80FE0CFFCEA03F8C67E137E7F6D7E6D7E6D7E13036D7E6D7E
A2147C143C143E141EA2141F80A2811407A359347BB264>32 D<1AF0A3861A78A21A7C1A
3CA21A3E1A1E1A1F747EA2747E747E87747E747E1B7E87757EF30FE0F303F8007FBC12FE
BE1280A26CF3FE00CEEA03F8F30FE0F31F8051C7FC1B7E63505A505A63505A505AA250C8
FC1A1E1A3E1A3CA21A7C1A78A21AF862A359347BB264>I<DB01C0EB3FC0923A078001FF
F892261F000F13FE033E013F7F03FC90B61280912601F00115C0912803E007E03F13E091
3A0FC00F800791281F001F000113F0023E013E7F4A49EC7FF84A01FC143F49484848EC1F
FC4948485A01070107150FD90FC05B49484848EC07FE90383F001F5E017E133F01FE49C8
1203485A4913FE00035C4A5AD807F05B000F148049CAFCA2001F19FC5B123FA21907007F
19F85BA21AF0190F12FF1AE0191F1AC0A2F13F80A2F17F007F19FE614E5A127F6D4C5A4E
5A6D4C5A616C6C4CC7FC183E6C6C5E6D5E6C6CED03F06EEC07C06C01E04A5A6E023FC8FC
6C01FC14FC6C9039FFC00FF86C91B512E06D1580011F4AC9FC6D14F0010391CAFC903800
3FF047487AC54F>79 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmr12 12 60
/Fn 60 123 df<9239FF8003F8020F9038F01FFE913A3F807C3E07913BFC000E780F80D9
01F090381FF01F494890393FE03FC04948137F494814C0011FEE1F8091C7FC4991393F80
0600013E021F90C7FC137EAFB912F0A3D8007EC7D81F80C7FCB3B18301FF4A7E007FD9FE
1FB512E0A33A467EC539>11 D<4AB4FC020F13C091383F00F002FC1338D901F0130C4948
131E4948133E4948137F011F5C49C7FCA2013E147E017E143C93C7FCAD167FB8FCA3D800
7EC7FC8282B3B001FFEC7F80007FD9FC1FB5FCA330467EC536>I<DBFF80EB3FE0020F90
39E003FFF8913B3F80780FE01E913BFC001C3F0007D901F0D9067CEB01804948D90FF849
7E4948D93FF0130749484948497E011F171F91C75B5B013E6E486D5A017E021F6E5A96C8
FCADF10FE0BBFCA3D8007EC7391F80001F190F1907B3B001FF4A6C497E007FD9FE1FB500
87B512E0A34B467EC551>14 D<EA01FC127FA3120312011200B3B0487EB512F8A3152C7E
AB1B>16 D<127812FCA27E7E6C7E123FEA0FC06C7E6C7E12016C7E137C7F130E7FEB0380
EB0100111275C431>18 D<130FEB1F80A2133F137FEBFF005BEA01F8485A485A5B485A48
C7FC123E12385A5A124011126CC431>I<13FCA4EBFF80EB1FE0EB07F0EB01F814FC1300
A3130114F8EB07F0EB3FE0B51280EBF0001612737E2B>24 D<02FFED7F80010701E09038
03FFE090261F80F8903807C1F890263E003C90381E007C49010F497F496D6C487F48486D
6C4814804848DAE1E0EB0FC00007EC01E34848DAF3C0EB07E0001FEC00FF4918F0003F6F
5A1903A248C816F870C7FCA25AA294B6FCA294C9FCA67E836D147F123FA2711418001F15
FF7F000F912601F3E014306C6C14E10003912603E0F014606C6C4A6C14C06C6C90260780
7CEB0180017C90260F001EEB03006D013C6D130E90261F80F8903807E03C902607FFE090
3801FFF0010090C8EA3FC0452E7DAC4C>27 D<121E123FEA7F80EAFFC0A313E0127FEA3F
60121E1200A513C0A4EA0180A2EA0300A212065AA25A5A12200B1D78C41B>39
D<1406140E14181430147014E0EB01C0EB0380EB0700A2130E5B133C133813785BA2485A
A2485AA212075BA2120F90C7FCA25A121EA2123EA3123C127CA6127812F8B21278127CA6
123C123EA3121EA2121F7EA27F1207A27F1203A26C7EA26C7EA213781338133C131C7F7F
A2EB0380EB01C0EB00E0147014301418140E1406176477CA26>I<7E7E12607E12387E7E
7E6C7EA26C7E6C7E7F137013787FA27FA27FA214801307A214C01303A214E01301A214F0
A3130014F8A61478147CB2147814F8A614F01301A314E0A2130314C0A213071480A2130F
1400A2131EA25BA25B137013F05B485A485AA248C7FC120E5A5A12305A5A5A16647ACA26
>I<16C04B7EB3AB007FBAFCBB1280A26C1900C8D801E0C9FCB3AB6F5A41407BB84C>43
D<121E123FEA7F80EAFFC0A313E0127FEA3F60121E1200A513C0A4EA0180A2EA0300A212
065AA25A5A12200B1D78891B>I<B612C0A51A057F9721>I<121E123FEA7F80EAFFC0A4EA
7F80EA3F00121E0A0A78891B>I<143014F013011307131F13FFB5FC13E713071200B3B3
AF497E497E007FB6FCA3204178C031>49 D<EB03FE90381FFFC0017F13F03901F80FFC39
03C001FE48C7127F000EEC3F80000CEC1FC04815E048EC0FF0A248EC07F8A2127C00FE15
FC7E6D1303A46CC71207123EC813F8A3ED0FF0A216E0151F16C0153F1680ED7F00157E5D
4A5A5D4A5A4A5A4A5A4AC7FC141E5C5C5C495A495A495A91C7120C130E5B4914185B5B48
5A49143848C8123000061570000FB612F05A5A5AB712E0A326417BC031>I<49B4FC010F
13F0013F13FC9038FE01FE3901E0007FD80380EB3F8048C7EA1FC0000EEC0FE0D80F8014
F0EA1FE016F86D1307A36C5AA2D80380130FC813F0A3ED1FE016C0A2ED3F801600157E5D
EC03F0EC1FC0D90FFFC7FC15F090380001FCEC007EED1F8016C0ED0FE0ED07F016F81503
16FC16FE1501A216FFA3121E123F487E487EA216FEA24913036CC713FC127E0070EC07F8
003015F06C140F000E15E06CEC1FC0D803E0EB7F803A01FC01FE0039007FFFFC011F13E0
010190C7FC28427CC031>I<1507A25D5DA25D5DA25DA25C5C811406140E140C14181438
1430146014E014C01301EB038014005B13065B131C13185B137013605B12015B48C7FC5A
1206120E120C5A123812305A12E0B812C0A3C86CC7FCAC4B7E4A7F91B61280A32A427DC1
31>I<000215C0D807C0130701FCEB7F8090B612005D5D15F05D158026063FFCC7FC90C9
FCAE14FF010713E090381F01F0903878007C01E07FD807807F90C71380ED0FC01202C8EA
07E016F0A3ED03F8A316FCA4121C123E127F487EA216F890C7FC4814074815F01260A26C
EC0FE016C06C141F001C15806CEC3F006C147E3903C001FC3901F807F039007FFFE06D13
80D907FCC7FC26427BC031>I<121E123FEA7F80EAFFC0A4EA7F80EA3F00121EC7FCB3A5
121E123FEA7F80EAFFC0A4EA7F80EA3F00121E0A2B78AA1B>58 D<16C04B7EA34B7EA34B
7EA34B7EA3ED19FEA2ED39FF1530A203707FED607FA203C07F163FA2DA01807F161FA24A
486C7EA302066D7EA2020E80020C1303A2021C8002181301A24A8082A24A81177FA291B7
7EA3D90180C7EA1FE0A201038291C8120FA2498201061507A2010E82010C1503A2498217
01A2498283137801F883487ED80FFF030313E0B500E0027FEBFFC0A342467DC549>65
D<DB0FFE146092B512C0020302F013E0913A1FFC01FC0191393FC0001E02FFC7EA0703D9
01FCEC0387D907F0EC00C74948156F4948153F4948151F49C9120F13FE000117075B4848
16031207491601120F491600121FA2123F491760A2127FA219005B12FFAC127F7FA21960
123FA27F121FA26C6C17C0A212076DEE018012036C6C16036D170000001706137F6D6C5D
6D6C5D6D6C5D6D6C5DD901FC4A5A6DB4EC0780DA3FC0011FC7FCDA1FFC13FC0203B55A02
0014C0DB0FFEC8FC3B467BC446>67 D<B8FC17F017FC00019039C00007FF6C499038007F
C0017FED1FE0EF07F0EF03FC717E717E84727E727E727EA2727E85180385A2180185A385
84A31A80AD1A00A36061A361180361180761180F614E5A183F614EC7FC18FEEF03FC4D5A
EF1FE001FFED7FC0486DD907FFC8FCB812FC17F094C9FC41447CC34B>I<B912F8A30001
01C0C7127F6C49EC07FC017F15011700187C183C181CA284A31806A41807040C7FA395C7
FCA4161CA2163C167CED01FC91B5FCA3EC8001ED007C163C161CA2160CA319C0A3F00180
93C7FCA41803A21900A260A260A2181EA2183E187EEF01FE01FF1507486D147FB95AA33A
447CC342>I<B612F0A3C6EBF0006D5A6D5AB3B3B3A4497E497EB612F0A31C447DC323>
73 D<B612F8A3000101E0C9FC6C5B6D5AB3B31830A418701860A518E0A3EF01C0A21703
1707A2170F173F177F01FFEC01FF486D011F1380B9FCA334447CC33D>76
D<B56C933807FFFC6E5EA20001F1FE002600EFE0EE1BFC016F60A2D967F01633A2D963F8
1663A3D961FC16C3A3D960FEED0183A2027FED0303A36E6C1406A36E6C140CA26E6C1418
A36E6C1430A36E6C1460A26E6C14C0A36E6CEB0180A3037FEB0300A292383F8006A36F6C
5AA36F6C5AA26F6C5AA36F6C5AA36F6C5AA26FB45AA370C7FC13F0A2486C023E4A7ED80F
FF4D7EB500F0011C0107B512FCA34E447BC359>I<B56C020FB5FC80A2C66C6C020013F0
6EED1F80016FEE0F00EB67F86E15061363EB61FE8013606E7E81143F6E7E81140F6E7E81
14036E7E81806F7E82153F6F7E82150F6F7E8215036F7E8281EE7F8017C0163FEE1FE017
F0160FEE07F817FC1603EE01FE17FF82EF7F8618C6173FEF1FE618F6170FEF07FEA21703
1701A21700187E13F0183E486C161EEA0FFFB500F0150E1806A240447CC349>I<ED1FFC
4AB512C091390FF007F891393F8000FE027EC7123FD901F8EC0FC049486E7ED90FE0EC03
F849486E7E49486E7E49C9127F01FE707E49161F0001844848707EA24848707E000F8449
1603001F84A2491601003F84A3007F844982A300FF1980AC007F19006D5EA4003F606D16
03A2001F606D1607000F60A26C6C4C5AA26C6C4C5A0001606C6C4C5A6D167F6D94C7FC6D
6C15FE6D6C4A5A6D6C4A5AD903F0EC07E0D901FCEC1FC0D9007E4AC8FC6E6C13FE91390F
F007F80201B512C09126001FFCC9FC41467BC44C>I<B712FCEEFFC017F800019039C000
0FFE6C49EB01FF017F9138007F80EF1FE0170FEF07F018F8EF03FCA218FE1701A218FFA7
18FEA2170318FCA2EF07F818F0EF0FE0EF1FC0EF7F80933801FE00EE0FFC91B612F01780
0280C9FCB3A9497E487FB612C0A338447CC342>I<49B41303010F13E0013FEBF8079038
FE00FCD801F0EB1F0F4848EB079F4848EB01DF48486DB4FC48C87E001E81123E007E8112
7C8212FC82A46C81A37E6C6C91C7FCA2EA3FE07FEA1FFEEBFFE06C13FE6CEBFFE06C14FC
6C14FF6C15C0013F80010F80010180D9001F7F02017F9138001FFF150303001380167FEE
3FC0161FA2EE0FE0124012C01607A47EA217C07E160F6C1680A26CED1F006C151E6C153E
D8FBC05CD8F9F05CD8F07CEB03F03AE03FC00FE0010FB51280D8C00349C7FC9038003FF0
2B467BC436>83 D<003FB912E0A3903BF0003FF0007F01806D48130F003EC7150348EF01
F00078170019701270A219301260A5481818A5C81600B3B3A54B7EEDFFFC0103B7FCA33D
447CC346>I<B600C0010FB5FCA3000101E0C813F06C49ED1F806D48ED0F00A21806B3B3
A7013F5EA280131F6080010F5E13076E5D010316E06D6C4A5A6D6C4A5A027E4AC7FC6E6C
131EDA1FE0137C913907F803F00201B55A6E6C1380DB07FCC8FC40457CC349>I<B66C91
383FFFF0A3000301E0C800071300C649ED01FC6D4816F018006E5E013F5FA26E1501011F
5F80010F4CC7FCA26E5D01071606A26D6C5DA28001015EA26E15386D163081027F5DA26F
14E0023F5DA26E6C495AA281020F4AC8FCA26F5B020714068102035CA26F131C02011418
A26E6C5BA21680037F5BA2EEC0E0033F5B16E092381FE180A216F3030F90C9FCA2ED07FE
A36F5AA36F5AA26F5AA3166044457EC349>I<130C131E133F497EEBF3C03801E1E03803
C0F03807807848487E001E7F487F0070EB038048EB01C00040EB00801A0E75C331>94
D<EB07F8EB3FFF9038F80FC03901C003E048C66C7E00066D7E48147CD80F80137E486C13
3E6D133F8182A26C5A6C5AC8FCA4EC0FFF49B5FC90380FFC1FEB3FC0EBFF00EA03FCEA07
F0485A121F485A5B127F176048C7FCA4153FA26C146F7F003F9138C7C0C0391FC001873B
0FE00307E1803A07F81E03FF2701FFFC0113003A001FE0007C2B2E7CAC31>97
D<EA01FC12FFA3120312011200B3EC01FC91380FFF8091383E07E091387000F802C0137C
D9FD807F01FFC77EEE0F804915C049EC07E017F0160317F8A217FC1601A317FEA917FCA2
1603A217F8A2EE07F017E07FEE0FC001FBEC1F801700D9F180133ED9F0C05B9039E06001
F891383C07E09039C01FFF8090260003FCC7FC2F467DC436>I<EC7F80903803FFF09038
0FC07C90383E000E49130349EB01804848EB00C0000314074848EB0FE04848131FA2121F
5B003FEC0FC0ED0780007F91C7FC90C9FCA25AAA7EA27FA2123F16306C7EA2000F15606C
7E6C6C14C00001EC01806C7E017CEB07006D130E90381FC078903807FFF001001380242E
7DAC2B>I<16FE157FA315011500167EB3EC7F80903803FFF090380FC07890383F000C01
7C13064913034848EB01FE00031400485A4848147EA2121F485AA2127FA290C8FCA25AA9
7EA37F123FA2121F7F000F15FE6C7E000314016C6CEB037E6C6C147F017C010E13806D01
1C13FE90380FC0F0903803FFE09026007F0013002F467DC436>I<EB01FE903807FFC090
381F03F090387C00F849137C48487F48487F0007158049130F000F15C0121F4914E0003F
1407A2127F90C713F0A35AA290B6FCA290C9FCA67EA36C7EA21630121F7F000F15606C7E
000315C06C6CEB01806C6CEB0300017C13066D131C90380FC078903803FFE09038007F80
242E7DAC2B>I<EC1FC0EC7FF0ECF038903803E07C903807C0FC90380F81FEA2EB1F0190
383F00FCA2013E1330017E1300B0B61280A3D8007EC7FCB3B1137F497E007FEBFF80A31F
467EC51E>I<D901FCEB1FC0903A0FFF807FE0903A3F07E1E1F090397C01F7819039F800
FE01484890387C00E048486D13000007143FA248486D7EA2001F81A7000F5DA26C6C49C7
FCA20003143E6C6C5B6C6C5B486C485A39033F07E090380FFF80260701FCC8FC0006CAFC
A3120E120F7EA27F13E06CB512F86CECFF806C15E06D14F848B67E3A07E0000FFED80F80
EB00FF001EC8123F003EED1F8048150F17C0481507A6007CED0F80A26CED1F006C153E6C
6C5CD807E0495AD801F8EB07E0D8007FEB3F8090261FFFFEC7FC010113E02C417DAB31>
I<EA01FC12FFA3120312011200B3EC01FE913807FF8091381E07E091383801F002607FEC
C000D9FD807F167C01FFC7FC167E5BA35BB3A9486C14FFB5D8FC7F13FEA32F457DC436>
I<13E0EA03F8487EA66C5AEA00E090C7FCADEA01FC127FA3120312011200B3B0487EB512
F8A315437EC21B>I<14F0EB01F8EB03FCEB07FEA4EB03FCEB01F8EB00F01400AD14FE13
7FA313011300147EB3B3AB003C137C127EB413FC14F8A238FE01F0007E13E0383803C038
1E0780380FFF00EA01FC175783C21E>I<EA01FC12FFA3120312011200B3B3B3A5487EB5
12FCA316457EC41B>108 D<2701FC01FEEC7F8000FF903B07FFC001FFF0913B0E03F003
80FC913B3800F80E003E0003495C000101C0D97C307F0000037E81D9FD805C01FFC7D83E
C0130F043F81495DA34992C7FCB3A9486C4A6C497EB5D8FC3FB5000FB512C0A34A2C7DAB
51>I<3901FC01FE00FF903807FF8091381E07E091383801F0000301607F0001EBC00026
00FD807F167C01FFC7FC167E5BA35BB3A9486C14FFB5D8FC7F13FEA32F2C7DAB36>I<EC
7F80903803FFF090380FC0FC90383E001F496D7E496D7E48486D7E48486D7E48486D7E00
0F81A24848147E003F157FA290C87E481680A44816C0AA6C1680A26D147F003F1600A200
1F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49C7FC90381FC0
FE903807FFF89038007F802A2E7DAC31>I<3901FC01FC00FF90380FFF8091383E07E091
387001F800039038C0007C2601FD807F6CB4C7123FEE1F8049EC0FC04915E0EE07F0A217
F8160317FCA3160117FEA917FC1603A317F8160717F0EE0FE07FEE1FC06D1580EE3F00D9
FD80137ED9FCC05B91386001F891383C0FE091381FFF80DA03FCC7FC91C9FCAE487EB512
FCA32F3F7DAB36>I<91387F8006903903FFE00E90380FE07890383F001C017EEB061E5B
4848EB033E4848EB01BE12074848EB00FEA2485A003F157E5B127FA390C8FC5AA97E7FA3
123F7F121F16FE6C7E000714016C7E6C6CEB037E00001406017C130C013F131890380FC0
F0903803FFE09038007F0091C7FCAE16FF037F13FEA32F3F7DAB33>I<3901F807E000FF
EB1FF8EC383CEC607E0003EBC0FF12013800F980EBFB00157E153C01FE1300A45BB3A77F
487EB6FCA3202C7DAB26>I<90383FE0303801FFF83907C01E70390F0007F0001C130148
1300A2481470A212F01530A37E7E007E1400EA7F80EA3FF0EBFF806C13F86C13FE0003EB
FF806C14C0D8003F13E0010313F09038001FF81403EC00FC0040147C00C0147E153E7E15
1EA37E151C7E153C6C14386C147000FB14E039F18001C039E0F00F8039C07FFE00EB0FF0
1F2E7DAC26>I<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2D8
007EC7FCB3A4150CAA133E013F1318A27F90380F803001071360903803E0C0903801FF80
9038003F001E3E7EBC26>I<D801FC14FE00FF147FA300031401000114000000157EB3A9
16FEA3017C1301A2017EEB037E013E147F011E010613806D011C13FE903807C078903803
FFE09026007F8013002F2D7DAB36>I<B539E001FFFCA3D807FEC7EA7FE0D801FCEC1F80
17000000150E160CA2017E5CA2017F14386D1430A26D6C5BA26E13E0010F5CA26D6C485A
A36D6C48C7FCA26E5A01011306A26D6C5AA2ECFE1CEC7E18A26E5AA3EC1FE0A36E5AA26E
5AA36EC8FC2E2C7EAA33>I<3B7FFFF007FFFCA30001D9800113C06C90C7EAFE006D147C
6D14706D6C5B6D6C5BECE0010107495AD903F090C7FCECF806903801FC0E01005BEC7E18
EC7F30EC3F706E5A6E5A811407814A7EEC0DFC1418EC387E4A7E02607FECC01F01016D7E
D903807F4A6C7E01061303496D7E011C80013C1300017C147ED801FC14FFD80FFE4913C0
B5D8800713FFA3302B7FAA33>120 D<B539E001FFFCA3D807FEC7EA7FE0D801FCEC1F80
17000000150E160C6D141C017E1418A26D5CA26E1370011F1460A26D6C5BA2800107495A
A2ECF003010391C7FCA2903801F806A2ECFC0E0100130CA2EC7E18A2EC7F38EC3F30A2EC
1FE0A36E5AA26E5AA36EC8FCA21406A35CA2141C1418A200385B127C00FE5BA25C130138
7C0380D87007C9FCEA3C1EEA1FFCEA03F02E3F7EAA33>I<003FB612E0A29039E0000FC0
90C7EA1F80003C143F00381500157E003014FE00705C4A5A14030060495A5D4A5A141F5D
C748C7FC5C14FE5C495A13035C495A130F494813605C49C7FC5B017E14C05B1201485A5B
48481301120F491303485A003FEC0F8090C7121F007E14FFB7FCA2232B7DAA2B>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fo cmcsc10 20.74 4
/Fo 4 110 df<952601FFF81638067FD9FFC015780507B600F815F8053F15FE4CB86C13
010407DAC00101E01303041F01F8C7EA1FF8047F0180DA03FE13074B4848C96C130F0307
01F093383F801F4B01C0EE0FE0033F49933807F03F4B48CA3803F87F4A4848EF00FC4A49
F07EFF4A01E0844A49844A49844A90CC7E4A5A4A48854949854987495B4B1A7F495B491C
3F49491A1FA24990CE120FA2495A481D075C5A1E03485BA21E015A5C5AA21E00485BA448
1E00A35CA2B5FCB07EA280A37EA21F78A26C7FA37E807E1FF0A26C7FA26C1D016E1CE07E
6D7EF603C06D7FF607806D7F6D6DF20F007F6F1A1E6D6D1A3E6D1C3C6D6D1A7C6E6C626E
6C4F5A6E6D4E5A6E6D18076E6D4E5A6E01F84E5A6E6D4EC7FC6E6C6C18FE6F6C6C4C5A03
0F01E0EE07F06F6D4C5A030101FEEE3FC06F6C6C6C4AB4C8FC041F01F8EC0FFC0407903A
FFC001FFF8040191B612E0DC003F93C9FC050715FCDD007F14C0060101F8CAFC6D7A74F7
87>67 D<17074D7E4D7EA34D7EA24D7EA34D7EA24C7FA34C7F17DF04077F178FA2040F80
1707041F80EE1E03A2043E80EE3C01047C80EE7800A204F8804C137FA24B486D7EA20303
814C131FA24B488084030F8293C77EA2031E8284033E82033C80A24B828403F8824B157F
A20201834B153F0203834B151F92B8FC4A83A24A8492C91207A24A84021E82023E84023C
82A2027C8402788202F8844A177FA20101854A173F1303747E130787010F84011F86133F
496C8501FF6000036D4D13F0000F01FE94B512FCB600C0031FECFFF8A45D5A7AD96A>97
D<B8FCA4C602F8CAFC013F13C06D5B7F92CBFCB3B3AB1A0FA51A1EA61A3EA41A7E1A7C1A
FCA21901A219031907190F191F197F49EE01FF496D020713F890B56C91B5FCBBFCA44858
78D758>108 D<B64FB6FC6F60A3C66E4E1400013F1CFC6D6C6C4E6C5A010F646E6C181E
A36E6C183CA26E6C1878A36E6C18F0A26E6CEF01E0A26E6DEE03C0A36E6DEE0780A26F6C
EE0F00A36F6C161EA26F6C5EA36F6C5EA26F6C5EA26F6C4B5AA36F6D4A5AA26F6D4A5AA3
706C4AC7FCA2706C141EA2706C5CA3706C5CA2706C5CA3706C495AA2706D485AA2706D48
5AA3716C48C8FCA294383FF01EA3716C5AA2716C5AA3716C5AA2496C6E6C5AA2715B497E
497E496C6E494B7E486D4F7F000F01FF6FC8000713FFB600F00507B7FCA2183E181C7058
78D781>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fp cmr17 20.74 16
/Fp 16 117 df<ED7FF00207B57E023F14F091B612FC4915FF902707FE007F13C0D90FE0
010F7FD91F80010113F849C87F017CED3FFE496F7E48486F138048486F13C04848817113
E0484817F090CAFC48EF7FF8121E003EEF3FFC123CA2007CEF1FFE1278A2EA7FC0D8FFF0
EE0FFF7F7F7FA76C5A6C5A6C5AD807C0EE1FFECBFCA3F03FFCA3F07FF8A219F018FF19E0
5F19C04D1380A24D130060170F4D5A604D5A4D5A604D5A4C90C7FC4C5A4C5A5F4C5A4C5A
4C5A4C5A94C8FC16FE4B5A4B5A4B5A4B5A4B5A4B5A4BC9FC157E5D4A5A4A5A4A5A4A5A4A
4815074AC9FC143E4A160E5C495A495A495A495A49CA121E011E171C5B5B49173C485A48
48177C4848EE01FC48B912F8A25A5A5ABAFCA219F0A3407279F14F>50
D<EA0780EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA0780C7FCB3B3AAEA07
80EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA07800E4A72C92B>58
D<F007804E7EA34E7EA34E7EA34E7EA34E7EA24D7FA34D7F18DF18CF0507801887A2050F
801803A2051F80EF1E01A2053E80EF3C00A24D80197FA24D80193F0401815F191F040381
5F850407824D7FA2040F8294C77EA24C82041E80A2043E82043C80A24C821A7FA24C821A
3F0301835E1A1F0303835E860307844C81A2030F8493C97EA24B84031E82A2033FB97EA3
4B84A20378CA127F4B841B3F0201855D1B1F0203855D870207864B83A2020F8692CB7EA2
4A86021E84A2023E86023C84A24A861C7FA24A861C3F010187A201031A1F891307010F86
496C4F7F496C87D9FFFE4F7F00076D6C4DB512F8B600F8057FECFFFCA56E7A7CF977>65
D<BA12F0F1FF801AF01AFCF2FF80D8003F01F0C86C7F010749030713F04B030013FC6DF0
3FFEF20FFF747F08017F747F757E88757E1B1F881B0F88A2751380A21DC0A287A21DE0AA
1DC0A263A21D80A2511300A2641B1F64515A515A1BFF6408035B5090C7FC505AF23FFCF2
FFF007075B077F138092B848C8FC1AF01A8007F0C9FC03C0CDFCB3B3AB497FA2013F13FC
B8FCA55B7678F56C>80 D<001FBE12F8A502F8C7000F01F0C7121F4801806E49020113FC
01FCC86C49EC003F491B1F01E01B07491B03491B0190C91800A2003E1D7CA2003C1D3CA3
481D1EA500701D0EA8481D07A6CA1900B3B3B3B14D7F4D7F057F13FE031FB812F8A56875
7BF473>84 D<913803FF80021F13F891B512FE903A03FC01FF80903A07E0003FE0D91F80
EB0FF8013EC76C7E496E7E01F06E7E48486E7F717E4848153F4982D807A06F7E13FC487E
6D6F7E80A2717EA46C90C8FC6C5A6C5ACAFCA6EE07FF0303B5FC157F913903FFFE07021F
138091387FF800903801FFC0010790C7FCEB1FFCEB3FF0EBFFE0485B485B4890C8FC5B48
5A485AA2485A1A0E485AA312FF5B170FA4171FA26D153F007F163B177B6DDBF1FE131C00
3F16E16C6C14016C6C912603C0FF13386C6CEC0F806C6C6C903A1F007F80706C6D017CEC
E1E028007FF803F8EB3FFF011FB500E06D1380010391C7000713009026003FF8EC01FC47
4D79CB4F>97 D<14F8EA03FFB5FCA5C6FC133F131FA2130FB3B04CB47E041F13F8047F13
FE923A01FC01FF80923A07E0003FE0031FC7EA0FF0033EEC07FC0378EC01FE4B6E7EDAF9
E06F7EDAFBC06F7EDAFF808292C96C7E737E5C4A707E864A160386851B80A37313C0A31B
E0A31A7FA21BF0AE1BE0A21AFFA31BC0A2611B80A21B0061626E1607626E160F626E4C5A
02F75FDAE7804B5ADAE3C0157FDAC1E04B5ADAC0F04A48C7FC03784A5A4A6CEC0FF8031F
4A5A4A6C6CEB7FC0922703F803FFC8FC0300B512FC010E023F13E090C8D807FEC9FC4C79
7BF758>I<ED07FE92387FFFE00203B512FC91390FFC01FF913A3FE0001FC0DA7F80EB03
E0D901FEC812F84948157C494881494881494881013FEE0780494815034948ED0BC04817
7F91C9EAFFE048485D00075EA2485AA2485AA27113C0003F70138049EE7F0095C7FC127F
A35BA212FFAE127F7FA4123F7FA2121F6D1738120F19786C6C1770A26C6C17F019E06C6D
15016C18C06D6C15036D6CED07806EED0F006D6C151E6D6C153ED903FE5D6D6C15F06D01
C0EB03E0DA3FF0EB0FC0DA0FFE01FFC7FC0203B512FCDA007F13E0030790C8FC3D4D7BCB
46>I<ED1FFC4AB512C0020714F091391FF00FFC91397F8001FFD901FEC7EA7FC049486E
7E49486E7E49486E7E49486E7E49486E7E4948140101FF824890C91380A24848EE7FC0A2
485A000FEF3FE05BA2001F18F0181F485AA3007F18F8A349160FA212FF90B9FCA301E0CB
FCAB127F7FA3123FA36C7EA219386C7E1978000718707F000318F06C6C17E018016C6DED
03C06D6C1680013F16076D6CED0F006D6C151E6D6C5D6D6C5D6DB44A5A6D6C6C495ADA3F
E0EB1F80DA0FFE01FEC7FC0203B512F8DA007F13E0DB07FEC8FC3D4D7BCB46>101
D<131EEB7F80497E487F487FA66C5B6C5B6D5A011EC7FC90C8FCB3A7EB01F0EA07FFB5FC
A51201EA007F133FA2131FB3B3B3A3497EEBFFFEB612FCA51E727AF12A>105
D<EB01F0EA07FFB5FCA51201EA007F133FA2131FB3B3B3B3B3AC497EEBFFFEB612FEA51F
787AF72A>108 D<D901F0903803FF80D807FF021F13F8B5027F13FE923A01FC03FF8092
3A03E0007FE0DB0F80EB1FF0031EC76C7EC65C013F496E7E011F496E7E5DEB0FF1DAF3C0
6E7E5D14F792C9FC02FF835CA35CA45CB3B3A8496C4B7FD97FFF030713F0B7D8800FB612
F8A54D4B7ACA58>110 D<ED07FE92387FFFE00203B512FC91390FFC03FF913A3FC0003F
C04AC7EA0FE0D901FEEC07F8D903F8EC01FC49486E7E4948157F49486F7E49486F7E017F
8349C96C7E4916070001844848707EA2000784491601000F84A24848701380A2003F19C0
A349177F007F19E0A412FF1AF0AD007F19E0A26D17FFA2003F19C0A46C6C4C1380A2000F
1900A26C6C4C5AA26C6C4C5A0001606D160F6C606D6C4B5A6D6C4B5AA26D6C4B5AD907F0
03FEC7FCD903FCEC03FC6D6C4A5A6D6C6CEB1FF0DA3FE0EB7FC091270FFC03FFC8FC0203
B512FCDA007F13E0DB07FEC9FC444D7BCB4F>I<D903E0EB1FE0D80FFFECFFFCB501037F
923907E01F8092391F807FC092383E00FF4B4813E000011478D8007F13F090383FE1E015
C0EB1FE39126E7800013C0EF7F8092C7EA3F0002EF91C7FC14EE14FE5CA45CA55CB3B3A4
80133F90B5FCB712C0A5334B7ACA3D>114 D<DA1FFFEB038049B512E0010FECF807903A
3FE001FE0F01FEC7EA1F9FD801F8EC07DFD807E0EC03FF484880498048C9127F48163F00
3E161F127E170F127C12FC1707A46C1603A27E7F6C7E7F6D92C7FCEA3FFC13FF6C13E06C
13FF6C14F06CECFF806C15F86C15FE013F6E7E010F15E0010381010081020F14FEDA007F
7F1503DB003F1380040713C0040113E000E081177FEF3FF06C161F170FEF07F8A217037E
1701A27EA37E18F07E17036D16E0A26D15076DED0FC06D168000FE161F017CED3F00486C
157E6DEC01F826F80FC0EB07F026F003F8EB7FC00100B6C7FC48013F13FC02071380354D
7CCB3E>I<1407A85CA65CA35CA35CA25CA25BA25B5B5B5B5B5B48B712FE120FB8FCA3D8
000190C9FCB3B3A2EF01C0B0EF03806D7FA3027FEC0700815F6E6C130E021F141E6F131C
6E6C5B6E6C13F8913901FF01F09139007FFFC0031F5BDB03FCC7FC326B7EE93D>I
E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop Black Black Black Black 675 809 a Fp(TP2)52 b
Fo(Caml)g Fp(:)g(Arbres)g(blancs)h(et)e(noirs)0 1469
y Fn(Lors)40 b(du)h(dernier)g(TP)g(nous)g(a)m(v)m(ons)h(vu)e(que)i(les)
f(op)m(\023)-46 b(erations)41 b(de)f(base)h(sur)g(les)g(arbres)g
(binaires)g(de)0 1590 y(rec)m(herc)m(he)36 b(\(ins)m(\023)-46
b(erer,)34 b(supprimer,)h(rec)m(herc)m(her\))h(se)d(faisait)g(dans)h
(un)g(temp)f Fm(O)s Fn(\()p Fl(h)p Fn(\))h(a)m(v)m(ec)g
Fl(h)f Fn(la)g(hauteur)0 1710 y(de)g(l'arbre.)g(V)-8
b(ous)33 b(a)m(v)m(ez)h(vu)f(en)g(cours)h(que)f(si)g
Fl(n)g Fn(est)g(le)g(nom)m(bre)h(de)f(no)s(euds)g(de)g(l'arbre)1485
1930 y(log)1611 1954 y Fk(2)1651 1930 y Fn(\()p Fl(n)22
b Fn(+)g(1\))27 b Fm(\024)i Fl(h)e Fm(\024)i Fl(n)0 2150
y Fn(P)m(our)39 b(que)g(les)g(op)m(\023)-46 b(erations)37
b(\023)-46 b(ev)m(o)s(qu)m(\023)g(ees)40 b(pr)m(\023)-46
b(ec)m(\023)g(edemmen)m(t)42 b(soit)c(e\016caces)i(\(par)f(rapp)s(ort)e
(\022)-49 b(a)38 b(une)h(simple)0 2271 y(structure)j(de)g(liste\),)g
(la)f(hauteur)h Fl(h)f Fn(doit)h(rester)g(p)s(etite.)g(Nous)f(allons)h
(nous)g(in)m(t)m(\023)-46 b(eresser)43 b(ici)f(\022)-49
b(a)41 b(des)0 2391 y(arbres)d(binaires)h(de)g(rec)m(herc)m(he)h
(particuliers,)f(les)g Fj(arbr)-5 b(es)39 b(blancs)g(et)h(noirs)p
Fn(.)e(Ces)h(arbres)f(p)s(oss)m(\022)-46 b(eden)m(t)0
2511 y(la)32 b(propri)m(\023)-46 b(et)m(\023)g(e)34 b(suiv)-5
b(an)m(te)1247 2632 y(log)1373 2655 y Fk(2)1413 2632
y Fn(\()p Fl(n)22 b Fn(+)g(1\))28 b Fm(\024)g Fl(h)g
Fm(\024)g Fn(2)17 b(log)2229 2655 y Fk(2)2269 2632 y
Fn(\()p Fl(n)22 b Fn(+)g(1\))0 2806 y(On)33 b(p)s(eut)f(ainsi)i
(e\013ectuer)g(des)f(mises)h(\022)-49 b(a)33 b(jours)f(et)h(des)h(rec)m
(herc)m(hes)h(en)e Fm(O)20 b Fn(\(log)2903 2830 y Fk(2)2942
2806 y Fn(\()p Fl(n)p Fn(\)\).)0 3139 y Fi(1)161 b(D)l(\023)-77
b(e\014nition)53 b(et)h(structure)d(de)i(donn)l(\023)-77
b(ee)0 3358 y Fn(Un)25 b(arbre)g(blanc)g(et)g(noir)f(et)h(un)g(arbre)g
(binaire)g(de)g(rec)m(herc)m(he)i(don)m(t)e(c)m(haque)h(n\033ud)f(ou)g
(feuille)g(p)s(oss)m(\022)-46 b(ede)0 3478 y(une)33 b(couleur.)h(Il)f
(doit)f(v)m(\023)-46 b(eri\014er)34 b(les)f(con)m(train)m(tes)i(suiv)-5
b(an)m(tes)34 b(:)p Black 119 3633 a(1.)p Black 49 w(un)f(n\033ud)g
(est)g(soit)g(blanc,)g(soit)g(noir,)p Black 119 3788
a(2.)p Black 49 w(une)g(feuille)h(est)f(noire,)p Black
119 3942 a(3.)p Black 49 w(la)f(racine)h(est)h(noire,)p
Black 119 4097 a(4.)p Black 49 w(le)f(p)m(\022)-46 b(ere)33
b(d'un)g(n\033ud)g(blanc)h(est)f(noir,)p Black 119 4252
a(5.)p Black 49 w(tous)f(les)i(c)m(hemins)g(partan)m(t)e(d'un)h
(n\033ud)g(donn)m(\023)-46 b(e)33 b(et)f(se)h(terminan)m(t)h(\022)-49
b(a)32 b(une)h(feuille)g(con)m(tiennen)m(t)244 4372 y(le)g(m)m(^)-46
b(eme)34 b(nom)m(bre)f(de)g(n\033uds)h(noirs.)0 4527
y(P)m(our)f(repr)m(\023)-46 b(esen)m(ter)35 b(ces)f(arbres)f(en)g
Fh(Caml)g Fn(on)g(utilise)h(le)f(t)m(yp)s(e)g(suiv)-5
b(an)m(t)34 b(:)p Black Black 103 4682 a Fg(type)52 b(Couleur)h(=)f
(Blanc)g(|)g(Noir)g(;;)103 4802 y(type)g(ArbreRN)h(=)256
4922 y(Vide)154 5043 y(|)e(Noeud)i(of)f(enreg_Noeud)103
5163 y(and)g(enreg_Noeud)i(=)205 5284 y({)e(mutable)h(val)257
b(:)51 b(int;)308 5404 y(mutable)i(couleur)g(:)e(Couleur;)308
5524 y(mutable)i(gauche)104 b(:)51 b(ArbreRN;)308 5645
y(mutable)i(droit)155 b(:)51 b(ArbreRN;)308 5765 y(mutable)i(pere)206
b(:)51 b(ArbreRN;)j(})d(;;)p Black 1885 6180 a Fn(1)p
Black eop
%%Page: 2 2
2 1 bop Black 0 84 a Fn(TP2)33 b Fh(Caml)2401 b Fn(Arbres)33
b(blancs)h(et)f(noirs)p 0 124 3820 4 v Black 0 407 a(P)m(our)f(p)s(ouv)
m(oir)h(parcourir)e(l'arbre)i(en)f(mon)m(tan)m(t)g(et)g(en)h(descendan)
m(t,)h(on)e(a)f(ra)5 b(jout)m(\023)-46 b(e)32 b(un)g(c)m(hamp)h
Fg(pere)0 527 y Fn(qui)g(p)s(oin)m(te)g(v)m(ers)h(le)f(p)m(\022)-46
b(ere)34 b(du)e(n\033ud)h(couran)m(t.)g(Si)g(un)g(n\033ud)g(n'a)g(pas)g
(de)g(p)m(\022)-46 b(ere)33 b(,)f(on)h(met)g(son)g(c)m(hamp)0
648 y Fg(pere)h Fn(\022)-49 b(a)32 b Fg(vide)h Fn(\(c'est)h(le)f(cas)g
(de)g(la)g(racine)g(d'un)g(arbre\).)0 768 y(A\014n)g(de)g(tester)h(les)
f(fonctions)d(\023)-46 b(ecrites)34 b(dans)f(la)g(suite)g(de)g(ce)h(TP)
-8 b(,)33 b(on)f(consid)m(\023)-46 b(erera)34 b(cet)g(exemple)g(:)p
Black Black 103 923 a Fg(let)52 b(rec)g(a11)g(=)f(Noeud)i({val=11;)g
(couleur=Noir;)i(gauche=a2;)f(droit=a14;)g(pere=Vide})103
1043 y(and)e(a2)f(=)h(Noeud)h({val=2;)g(couleur=Blanc;)i(gauche=a1;)f
(droit=a7;)f(pere=a11})103 1163 y(and)f(a1)f(=)h(Noeud)h({val=1;)g
(couleur=Noir;)h(gauche=Vide;)h(droit=Vide;)f(pere=a2})103
1284 y(and)e(a7)f(=)h(Noeud)h({val=7;)g(couleur=Noir;)h(gauche=a5;)g
(droit=a8;)g(pere=a2})103 1404 y(and)e(a5)f(=)h(Noeud)h({val=5;)g
(couleur=Blanc;)i(gauche=Vide;)f(droit=Vide;)g(pere=a7})103
1525 y(and)e(a8)f(=)h(Noeud)h({val=8;)g(couleur=Blanc;)i(gauche=Vide;)f
(droit=Vide;)g(pere=a7})103 1645 y(and)e(a14)g(=)f(Noeud)i({val=14;)g
(couleur=Noir;)i(gauche=Vide;)f(droit=a15;)g(pere=a11})103
1765 y(and)e(a15)g(=)f(Noeud)i({val=15;)g(couleur=Blanc;)i
(gauche=Vide;)g(droit=Vide;)f(pere=a14})f(;;)0 1920 y
Fn(Il)33 b(corresp)s(ond)g(\022)-49 b(a)33 b(cet)g(arbre)f(:)p
Black Black 1959 2095 a
 tx@Dict begin tx@NodeDict begin {8.50012 2 div 4.88889 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.0 add} false /N@T-0 11 {InitCnode
} NewNode end end
 1959 2095 a @beginspecial @setspecial
 tx@Dict begin STP 0  setgray newpath 8.50012 2 div 4.88889 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add SD end


@endspecial 1 TeXcolorgray Ff(11)p Black 1577 2341 a
 tx@Dict begin tx@NodeDict begin {6.175 2 div 7.33333 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0 11 {InitCnode
} NewNode end end

1577 2341 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.175 2 div 7.33333
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fg(2)1602
2311 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 1602 2311 a 1270 2578 a
 tx@Dict begin tx@NodeDict begin {6.175 2 div 7.33333 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.0 add} false /N@T-0-0-0 11 {InitCnode
} NewNode end end
 1270 2578 a @beginspecial
@setspecial
 tx@Dict begin STP 0  setgray newpath 6.175 2 div 7.33333 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add SD end
 
@endspecial 1 TeXcolorgray Fg(1)p Black
1295 2547 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1295 2547 a 1182 2783 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.0 add} false /N@T-0-0-0-0 11 {InitCnode
} NewNode end end
 1182 2783 a @beginspecial
@setspecial
 tx@Dict begin STP 0  setgray newpath 0.0 2 div 0.0 0.0 add 2 div 2
copy 0.0 sub 4 2 roll Pyth 3.0 add SD end
 
@endspecial 1 TeXcolorgray Black 1182 2783
a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0 /N@T-0-0-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1182 2783 a 1409 2783 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.0 add} false /N@T-0-0-0-1 11 {InitCnode
} NewNode end end
 1409 2783 a @beginspecial @setspecial
 tx@Dict begin STP 0  setgray newpath 0.0 2 div 0.0 0.0 add 2 div 2
copy 0.0 sub 4 2 roll Pyth 3.0 add SD end


@endspecial 1 TeXcolorgray Black 1409 2783 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0 /N@T-0-0-0-1 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1409 2783
a 1884 2578 a
 tx@Dict begin tx@NodeDict begin {6.175 2 div 7.33333 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.0 add} false /N@T-0-0-1 11 {InitCnode
} NewNode end end
 1884 2578 a @beginspecial @setspecial
 tx@Dict begin STP 0  setgray newpath 6.175 2 div 7.33333 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add SD end
 
@endspecial
1 TeXcolorgray Fg(7)p Black 1910 2547 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1910 2547 a 1657
2814 a
 tx@Dict begin tx@NodeDict begin {6.175 2 div 7.33333 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-1-0 11
{InitCnode } NewNode end end
 1657 2814 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.175 2 div 7.33333
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fg(5)1683 2783 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-1 /N@T-0-0-1-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1683 2783 a 1569 3020 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.0 add} false /N@T-0-0-1-0-0 11 {InitCnode
} NewNode end end
 1569 3020 a
@beginspecial @setspecial
 tx@Dict begin STP 0  setgray newpath 0.0 2 div 0.0 0.0 add 2 div 2
copy 0.0 sub 4 2 roll Pyth 3.0 add SD end
 
@endspecial 1 TeXcolorgray
Black 1569 3020 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-1-0 /N@T-0-0-1-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1569 3020 a 1796 3020 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.0 add} false /N@T-0-0-1-0-1 11 {InitCnode
} NewNode end end
 1796 3020 a
@beginspecial @setspecial
 tx@Dict begin STP 0  setgray newpath 0.0 2 div 0.0 0.0 add 2 div 2
copy 0.0 sub 4 2 roll Pyth 3.0 add SD end
 
@endspecial 1 TeXcolorgray
Black 1796 3020 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-1-0 /N@T-0-0-1-0-1 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1796 3020 a 2111 2814 a
 tx@Dict begin tx@NodeDict begin {6.175 2 div 7.33333 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-1-1 11
{InitCnode } NewNode end end
 2111 2814 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.175 2 div 7.33333
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fg(8)2136 2783
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-1 /N@T-0-0-1-1 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2136 2783 a 2023 3020 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.0 add} false /N@T-0-0-1-1-0 11 {InitCnode
} NewNode end end
 2023 3020 a @beginspecial @setspecial
 tx@Dict begin STP 0  setgray newpath 0.0 2 div 0.0 0.0 add 2 div 2
copy 0.0 sub 4 2 roll Pyth 3.0 add SD end


@endspecial 1 TeXcolorgray Black 2023 3020 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-1-1 /N@T-0-0-1-1-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2023 3020
a 2250 3020 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.0 add} false /N@T-0-0-1-1-1 11 {InitCnode
} NewNode end end
 2250 3020 a @beginspecial @setspecial
 tx@Dict begin STP 0  setgray newpath 0.0 2 div 0.0 0.0 add 2 div 2
copy 0.0 sub 4 2 roll Pyth 3.0 add SD end
 
@endspecial
1 TeXcolorgray Black 2250 3020 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-1-1 /N@T-0-0-1-1-1 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2250 3020 a 2351 2331
a
 tx@Dict begin tx@NodeDict begin {8.50012 2 div 4.88889 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.0 add} false /N@T-0-1 11 {InitCnode
} NewNode end end
 2351 2331 a @beginspecial @setspecial
 tx@Dict begin STP 0  setgray newpath 8.50012 2 div 4.88889 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add SD end
 
@endspecial
1 TeXcolorgray Ff(14)p Black 2386 2311 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 2386 2311 a
2249 2547 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.0 add} false /N@T-0-1-0 11 {InitCnode
} NewNode end end
 2249 2547 a @beginspecial @setspecial
 tx@Dict begin STP 0  setgray newpath 0.0 2 div 0.0 0.0 add 2 div 2
copy 0.0 sub 4 2 roll Pyth 3.0 add SD end
 
@endspecial
1 TeXcolorgray Black 2249 2547 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1 /N@T-0-1-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 2249 2547 a 2489 2567
a
 tx@Dict begin tx@NodeDict begin {8.50012 2 div 4.88889 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-1-1 11 {InitCnode
} NewNode end end
 2489 2567 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  8.50012 2 div 4.88889
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Ff(15)2524 2547 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1 /N@T-0-1-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 2524 2547 a 2410 2783 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.0 add} false /N@T-0-1-1-0 11 {InitCnode
} NewNode end end
 2410 2783 a
@beginspecial @setspecial
 tx@Dict begin STP 0  setgray newpath 0.0 2 div 0.0 0.0 add 2 div 2
copy 0.0 sub 4 2 roll Pyth 3.0 add SD end
 
@endspecial 1 TeXcolorgray
Black 2410 2783 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1-1 /N@T-0-1-1-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2410 2783 a 2637 2783 a
 tx@Dict begin tx@NodeDict begin {0.0 2 div 0.0 0.0 add 2 div 2 copy
0.0 sub 4 2 roll Pyth 3.0 add 0.0 add} false /N@T-0-1-1-1 11 {InitCnode
} NewNode end end
 2637 2783 a
@beginspecial @setspecial
 tx@Dict begin STP 0  setgray newpath 0.0 2 div 0.0 0.0 add 2 div 2
copy 0.0 sub 4 2 roll Pyth 3.0 add SD end
 
@endspecial 1 TeXcolorgray
Black 2637 2783 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1-1 /N@T-0-1-1-1 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2637 2783 a 0 3303 a Fi(2)161 b(Lecture)52
b(d'information)0 3522 y Fn(T)-8 b(outes)36 b(les)g(fonctions)g(de)f
(cette)h(partie)f(devron)m(t)h(ren)m(v)m(o)m(y)m(er)i(un)d(message)i
(d'erreur)f(si)f(l'arbre)h(pass)m(\023)-46 b(e)0 3642
y(en)33 b(argumen)m(t)g(n'a)g(pas)g(la)f(structure)i(requise.)0
3762 y Fe(1.)k Fn(Ecrire)g(une)h(fonction)f Fg(pere)52
b(:)f(arbreRN)j(->)d(arbreRN)40 b Fn(qui)e(ren)m(v)m(oie)i(le)e(p)m
(\022)-46 b(ere)38 b(du)g(n\033ud)g(racine)0 3883 y(d'un)30
b(arbre.)f(D)m(\023)-46 b(e\014nir)29 b(de)h(la)e(m)m(^)-46
b(eme)31 b(mani)m(\022)-46 b(ere)30 b(les)g(fonctions)f
Fg(fils)p 2451 3883 31 4 v 38 w(gauche)p Fn(,)i Fg(fils)p
3057 3883 V 38 w(droit)p Fn(,)f Fg(valeur)h Fn(et)0 4003
y Fg(couleur)p Fn(.)0 4173 y Fe(2.)39 b Fn(En)h(d)m(\023)-46
b(eduire)40 b(la)f(fonction)g Fg(est)p 1296 4173 V 38
w(fils)p 1538 4173 V 38 w(gauche)53 b(:)e(arbreRN)j(->)d(bool)41
b Fn(qui)e(test)h(si)g(le)f(n\033ud)h(ra-)0 4294 y(cine)i(d'un)f(arbre)
g(est)h(le)f(\014ls)h(gauc)m(he)f(de)h(son)f(p)m(\022)-46
b(ere.)42 b(D)m(\023)-46 b(e\014nir)41 b(de)g(la)g(m)m(^)-46
b(eme)42 b(mani)m(\022)-46 b(ere)42 b(les)f(fonctions)0
4414 y Fg(est)p 159 4414 V 38 w(fils)p 401 4414 V 38
w(droit)0 4584 y Fe(3.)33 b Fn(En)g(d)m(\023)-46 b(eduire)34
b(les)f(fonctions)g Fg(frere)h Fn(et)f Fg(oncle)52 b(:)g(arbreRN)h(->)f
(arbreRN)p Fn(.)0 4967 y Fi(3)161 b(T)-13 b(ests)0 5186
y Fe(4.)31 b Fn(P)m(our)h(p)s(ouv)m(oir)f(a\016c)m(her)i(ces)f(arbres,)
d(\023)-46 b(ecrire)32 b(une)g(fonction)f Fg(transforme)j
Fn(qui)e(con)m(v)m(ertit)g(un)g(arbre)0 5306 y(de)h(t)m(yp)s(e)h
Fg(arbreRN)g Fn(en)f(arbre)g(de)g(t)m(yp)s(e)g Fg(ArbreClassique)k
Fn(o)s(\022)-51 b(u)31 b(ce)i(dernier)h(t)m(yp)s(e)f(est)h(d)m(\023)-46
b(e\014ni)33 b(par)g(:)p Black Black 103 5461 a Fg(type)52
b(ArbreClassique)j(=)256 5581 y(V)154 5702 y(|)c(N)h(of)g
(int*Couleur*ArbreClassique)q(*Arb)q(reCl)q(ass)q(ique)58
b(;;)p Black 1885 6180 a Fn(2)p Black eop
%%Page: 3 3
3 2 bop Black 0 84 a Fn(TP2)33 b Fh(Caml)2401 b Fn(Arbres)33
b(blancs)h(et)f(noirs)p 0 124 3820 4 v Black 0 407 a
Fe(5.)24 b Fn(Ecrire)h(une)f(fonction)g Fg(test)p 1144
407 31 4 v 38 w(pere)52 b(:)f(arbreRN)j(->)d(bool)25
b Fn(qui)f(v)m(\023)-46 b(eri\014e)26 b(que)e(tous)g(les)h(c)m(hamps)g
Fg(pere)0 527 y Fn(d'un)k(arbre)f(son)m(t)h(v)-5 b(alides.)29
b(On)f(utilisera)i(une)e(fonction)h(auxiliaire)g Fg(test)p
2725 527 V 38 w(pere)p 2967 527 V 38 w(aux)52 b(:)f(arbreRN)i(->)0
648 y(arbreRN)g(->)f(bool)41 b Fn(telle)g(que)h Fg(test)p
1428 648 V 38 w(pere)p 1670 648 V 37 w(aux)53 b(p)e(a)41
b Fn(test)f(l'arbre)h Fg(a)g Fn(en)f(imp)s(osan)m(t)h(que)h
Fg(p)e Fn(soit)h(le)0 768 y(p)m(\022)-46 b(ere)33 b(de)g(la)g(racine)g
(de)g Fg(a)p Fn(.)0 938 y Fe(6.)50 b Fn(Ecrire)g(une)g(fonction)g
Fg(test)p 1247 938 V 38 w(prop4)j(:)e(arbreRN)i(->)f(bool)f
Fn(qui)f(teste)g(si)g(un)g(arbre)g(de)g(t)m(yp)s(e)0
1059 y Fg(arbreRN)34 b Fn(v)m(\023)-46 b(eri\014e)34
b(la)f(con)m(train)m(te)g(4)g(des)g(arbres)g(blancs)h(et)f(noirs.)0
1229 y Fe(7.)28 b Fn(Ecrire)i(une)f(fonction)f Fg(nb)p
1060 1229 V 38 w(noirs)52 b(:)g(arbreRN)h(->)f(int)29
b Fn(qui)g(ren)m(v)m(oie)h(le)e(nom)m(bre)i(de)e(n\033uds)i(noirs)0
1349 y(que)41 b(con)m(tien)m(t)h(n'imp)s(orte)f(quel)g(c)m(hemin)h
(relian)m(t)f(la)f(racine)h(d'un)g(arbre)g(\022)-49 b(a)40
b(une)h(de)f(ses)i(feuilles.)g(Si)0 1469 y(au)34 b(cours)i(du)f
(calcul,)g(la)f(con)m(train)m(tes)j(5)d(des)h(arbres)h(blancs)f(et)g
(noirs)g(n'est)h(pas)f(v)m(\023)-46 b(eri\014)m(\023)g(e)35
b(la)g(fonction)0 1590 y(ren)m(v)m(oie)f(une)g(erreur)f(de)g(ce)g(t)m
(yp)s(e)h(:)p Black Black 0 1745 a Fg(exception)54 b(StopProp5)f(;;)0
1949 y Fe(8.)31 b Fn(En)g(d)m(\023)-46 b(eduire)31 b(une)h(fonction)e
Fg(test)p 1380 1949 V 38 w(prop5)53 b(:)e(arbreRN)i(->)f(bool)32
b Fn(qui)f(teste)h(si)f(un)f(arbre)h(de)g(t)m(yp)s(e)0
2069 y Fg(arbreRN)j Fn(v)m(\023)-46 b(eri\014e)34 b(la)f(con)m(train)m
(te)g(5)g(des)g(arbres)g(blancs)h(et)f(noirs)g(\(en)g(utilisan)m(t)g
Fg(try...)p Fn(\).)0 2240 y Fe(9.)47 b Fn(En)g(d)m(\023)-46
b(eduire)47 b(une)g(fonction)g Fg(testRN)53 b(:)e(arbreRN)i(->)f(bool)
47 b Fn(qui)h(teste)f(si)g(un)g(arbre)f(de)h(t)m(yp)s(e)0
2360 y Fg(arbreRN)34 b Fn(est)g(un)f(arbre)f(blanc)h(et)g(noir.)0
2743 y Fi(4)161 b(Mo)t(di\014cations)0 2962 y Fe(10.)37
b Fn(Ecrire)h(une)f(fonction)g Fg(inverse)p 1405 2962
V 39 w(couleur)53 b(:)e(arbreRN)i(->)f(unit)38 b Fn(qui)f(in)m(v)m
(erse)j(la)c(couleur)i(du)0 3082 y(n\033ud)33 b(racine)g(d'un)g(arbre.)
0 3252 y Fe(11.)k Fn(Ecrire)g(une)g(fonction)f Fg(adopte)p
1352 3252 V 39 w(gauche)i Fn(de)e(t)m(yp)s(e)i Fg(arbreRN)53
b(->)f(arbreRN)h(->)f(unit)37 b Fn(telle)g(que)0 3373
y Fg(adopte)p 312 3373 V 39 w(gauche)52 b(f)g(p)47 b
Fn(donne)g(\022)-49 b(a)47 b(la)f(racine)h(de)h Fg(p)f
Fn(l'arbre)g Fg(f)g Fn(comme)g(\014ls)h(gauc)m(he)f(et)g(mo)s(di\014e)g
(en)0 3493 y(cons)m(\023)-46 b(equence)36 b Fg(f)p Fn(.)c(D)m(\023)-46
b(e\014nir)33 b(de)g(mani)m(\022)-46 b(ere)34 b(sym)m(\023)-46
b(etrique)35 b(la)d(fonction)h Fg(adopte)p 2780 3493
V 39 w(droit)p Fn(.)0 3663 y Fe(12.)h Fn(En)g(d)m(\023)-46
b(eduire)35 b(les)g(fonctions)f Fg(rotation)p 1652 3663
V 39 w(droite)i Fn(et)e Fg(rotation)p 2556 3663 V 39
w(gauche)52 b(:)g(arbreRN)h(->)f(unit)0 3784 y Fn(qui)33
b(r)m(\023)-46 b(ealisen)m(t)34 b(les)g(mo)s(di\014cations)f(suiv)-5
b(an)m(tes)35 b(sur)e(un)g(arbre)f(:)1234 3992 y
 tx@Dict begin tx@NodeDict begin {6.08334 2 div 4.71457 2.12917 add
2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0
11 {InitCnode } NewNode end end
 1234
3992 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  6.08334 2 div 4.71457
2.12917 add 2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial Fd(p)1235
4238 y
 tx@Dict begin tx@NodeDict begin {5.87494 2 div 5.16667 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0 11 {InitCnode
} NewNode end end
 1235 4238 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  5.87494 2 div 5.16667
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fn(a)1259 4217 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 1259 4217 a 1076 4488 a
 tx@Dict begin tx@NodeDict begin {6.52771 2 div 8.33331 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0 11 {InitCnode
} NewNode end end
 1076 4488 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.52771 2 div 8.33331
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fn(b)1103 4453
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1103 4453 a 924 4709 a
 tx@Dict begin tx@NodeDict begin {5.77919 2 div 4.71457 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0-0 11
{InitCnode } NewNode end end
 924 4709 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  5.77919 2 div 4.71457
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke  grestore
end


@endspecial Fd(x)948 4689 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0 /N@T-0-0-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 948 4689 a 1233 4700 a
 tx@Dict begin tx@NodeDict begin {5.77919 2 div 4.71457 2.12917 add
2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0-1
11 {InitCnode } NewNode end end
 1233
4700 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  5.77919 2 div 4.71457
2.12917 add 2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial Fd(y)1257
4689 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0 /N@T-0-0-0-1 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1257 4689 a 1396 4473 a
 tx@Dict begin tx@NodeDict begin {4.86667 2 div 4.71457 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-1 11 {InitCnode
} NewNode end end
 1396 4473 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  4.86667 2 div 4.71457
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fd(z)1416 4453 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1416 4453 a
1568 4237 a Fg(rotation)p 1982 4237 31 4 v 39 w(droite)1470
4268 y Fm(\000)-39 b(\000)-22 b(\000)g(\000)h(\000)f(\000)g(\000)h
(\000)f(\000)h(\000)f(\000)g(\000)h(\000)f(\000)g(\000)h(\000)-40
b(!)1470 4430 y( )g(\000)-22 b(\000)h(\000)f(\000)g(\000)h(\000)f(\000)
g(\000)h(\000)f(\000)g(\000)h(\000)f(\000)g(\000)h(\000)-40
b(\000)1568 4481 y Fg(rotation)p 1982 4481 V 39 w(gauche)2651
3992 y
 tx@Dict begin tx@NodeDict begin {6.08334 2 div 4.71457 2.12917 add
2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0
11 {InitCnode } NewNode end end
 2651 3992 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  6.08334 2 div 4.71457
2.12917 add 2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial
Fd(p)2649 4252 y
 tx@Dict begin tx@NodeDict begin {6.52771 2 div 8.33331 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0 11 {InitCnode
} NewNode end end
 2649 4252 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.52771 2 div 8.33331
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end


@endspecial Fn(b)2676 4217 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 2676 4217 a 2500 4473 a
 tx@Dict begin tx@NodeDict begin {5.77919 2 div 4.71457 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0 11 {InitCnode
} NewNode end end

2500 4473 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  5.77919 2 div 4.71457
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fd(x)2524
4453 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 2524 4453 a 2804 4475 a
 tx@Dict begin tx@NodeDict begin {5.87494 2 div 5.16667 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-1 11 {InitCnode
} NewNode end end
 2804 4475 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  5.87494 2 div 5.16667
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fn(a)2829 4453 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 2829 4453 a
2652 4700 a
 tx@Dict begin tx@NodeDict begin {5.77919 2 div 4.71457 2.12917 add
2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-1-0
11 {InitCnode } NewNode end end
 2652 4700 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  5.77919 2 div 4.71457
2.12917 add 2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial
Fd(y)2676 4689 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-1 /N@T-0-0-1-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2676 4689 a 2962 4709 a
 tx@Dict begin tx@NodeDict begin {4.86667 2 div 4.71457 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-1-1 11
{InitCnode } NewNode end end
 2962 4709 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  4.86667 2 div 4.71457
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fd(z)2982 4689
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-1 /N@T-0-0-1-1 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2982 4689 a 0 4936 a Fn(V)m(\023)-46 b(eri\014er)39
b(que)g(ces)h(deux)f(transformations)g(conserv)m(en)m(t)i(les)e(propri)
m(\023)-46 b(et)m(\023)g(es)39 b(d'un)g(arbre)g(binaire)f(de)h(re-)0
5056 y(c)m(herc)m(he.)0 5226 y Fe(13.)h Fn(En)g(d)m(\023)-46
b(eduire)41 b(les)g(fonctions)f Fg(rotation)p 1682 5226
31 4 v 39 w(gauche)p 2027 5226 V 39 w(droite)h Fn(et)f
Fg(rotation)p 2942 5226 V 39 w(droite)p 3287 5226 V 38
w(gauche)i Fn(sui-)p Black 1885 6180 a(3)p Black eop
%%Page: 4 4
4 3 bop Black 0 84 a Fn(TP2)33 b Fh(Caml)2401 b Fn(Arbres)33
b(blancs)h(et)f(noirs)p 0 124 3820 4 v Black 0 407 a(v)-5
b(an)m(tes)34 b(:)644 596 y
 tx@Dict begin tx@NodeDict begin {6.08334 2 div 4.71457 2.12917 add
2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0
11 {InitCnode } NewNode end end
 644 596 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  6.08334 2 div 4.71457
2.12917 add 2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end


@endspecial Fd(p)645 842 y
 tx@Dict begin tx@NodeDict begin {5.87494 2 div 5.16667 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0 11 {InitCnode
} NewNode end end
 645 842 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  5.87494 2 div 5.16667
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end


@endspecial Fn(a)669 821 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 669 821 a 486 1092 a
 tx@Dict begin tx@NodeDict begin {6.52771 2 div 8.33331 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0 11 {InitCnode
} NewNode end end
 486
1092 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.52771 2 div 8.33331
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fn(b)513
1057 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 513 1057 a 343 1321 a
 tx@Dict begin tx@NodeDict begin {4.25835 2 div 6.73512 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0-0 11
{InitCnode } NewNode end end
 343 1321 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  4.25835 2 div 6.73512
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fd(t)361 1293 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0 /N@T-0-0-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 361 1293 a 643
1315 a
 tx@Dict begin tx@NodeDict begin {5.22217 2 div 5.16667 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0-1 11
{InitCnode } NewNode end end
 643 1315 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  5.22217 2 div 5.16667
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fn(c)665 1293 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0 /N@T-0-0-0-1 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 665 1293 a 486 1549 a
 tx@Dict begin tx@NodeDict begin {5.77919 2 div 4.71457 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0-1-0
11 {InitCnode } NewNode end end
 486 1549 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  5.77919 2 div 4.71457
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fd(x)510 1530 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0-1 /N@T-0-0-0-1-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 510 1530 a 796
1541 a
 tx@Dict begin tx@NodeDict begin {5.77919 2 div 4.71457 2.12917 add
2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0-1-1
11 {InitCnode } NewNode end end
 796 1541 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  5.77919 2 div 4.71457
2.12917 add 2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial
Fd(y)820 1530 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0-1 /N@T-0-0-0-1-1 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 820 1530 a 806 1077 a
 tx@Dict begin tx@NodeDict begin {4.86667 2 div 4.71457 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-1 11 {InitCnode
} NewNode end end
 806 1077 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  4.86667 2 div 4.71457
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fd(z)826 1057 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 826 1057 a 1026
1025 a Ff(rotation)914 1082 y Fm(\000)-39 b(\000)-22
b(\000)g(\000)h(\000)f(\000)g(\000)h(\000)-39 b(!)943
1141 y Ff(gauche)p 1157 1141 22 4 v 27 w(droite)1949
714 y
 tx@Dict begin tx@NodeDict begin {6.08334 2 div 4.71457 2.12917 add
2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0
11 {InitCnode } NewNode end end
 1949 714 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  6.08334 2 div 4.71457
2.12917 add 2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial
Fd(p)1952 960 y
 tx@Dict begin tx@NodeDict begin {5.22217 2 div 5.16667 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0 11 {InitCnode
} NewNode end end
 1952 960 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  5.22217 2 div 5.16667
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end


@endspecial Fn(c)1974 939 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 1974 939 a 1640 1210 a
 tx@Dict begin tx@NodeDict begin {6.52771 2 div 8.33331 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0 11 {InitCnode
} NewNode end end
 1640
1210 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.52771 2 div 8.33331
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fn(b)1667
1175 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1667 1175 a 1496 1439 a
 tx@Dict begin tx@NodeDict begin {4.25835 2 div 6.73512 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0-0 11
{InitCnode } NewNode end end
 1496 1439 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  4.25835 2 div 6.73512
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fd(t)1514 1411 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0 /N@T-0-0-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1514 1411 a
1795 1431 a
 tx@Dict begin tx@NodeDict begin {5.77919 2 div 4.71457 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0-1 11
{InitCnode } NewNode end end
 1795 1431 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  5.77919 2 div 4.71457
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fd(x)1819 1411 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0 /N@T-0-0-0-1 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 1819 1411 a 2257 1197 a
 tx@Dict begin tx@NodeDict begin {5.87494 2 div 5.16667 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-1 11 {InitCnode
} NewNode end end
 2257 1197 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  5.87494 2 div 5.16667
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fn(a)2282 1175
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 2282 1175 a 2105 1422 a
 tx@Dict begin tx@NodeDict begin {5.77919 2 div 4.71457 2.12917 add
2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-1-0
11 {InitCnode } NewNode end end
 2105 1422 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  5.77919 2 div 4.71457
2.12917 add 2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end


@endspecial Fd(y)2129 1411 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-1 /N@T-0-0-1-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2129 1411 a 2414 1431 a
 tx@Dict begin tx@NodeDict begin {4.86667 2 div 4.71457 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-1-1 11
{InitCnode } NewNode end end

2414 1431 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  4.86667 2 div 4.71457
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fd(z)2435
1411 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-1 /N@T-0-0-1-1 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2435 1411 a 2629 1025 a Ff(rotation)2516 1082
y Fm( )g(\000)-23 b(\000)i(\000)f(\000)g(\000)h(\000)f(\000)-39
b(\000)2545 1141 y Ff(droite)p 2759 1141 22 4 v 27 w(gauche)3244
596 y
 tx@Dict begin tx@NodeDict begin {6.08334 2 div 4.71457 2.12917 add
2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0
11 {InitCnode } NewNode end end
 3244 596 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  6.08334 2 div 4.71457
2.12917 add 2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial
Fd(p)3243 855 y
 tx@Dict begin tx@NodeDict begin {6.52771 2 div 8.33331 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0 11 {InitCnode
} NewNode end end
 3243 855 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.52771 2 div 8.33331
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end


@endspecial Fn(b)3270 821 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 3270 821 a 3099 1085 a
 tx@Dict begin tx@NodeDict begin {4.25835 2 div 6.73512 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0 11 {InitCnode
} NewNode end end
 3099
1085 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  4.25835 2 div 6.73512
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fd(t)3116
1057 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 3116 1057 a 3399 1079 a
 tx@Dict begin tx@NodeDict begin {5.87494 2 div 5.16667 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-1 11 {InitCnode
} NewNode end end
 3399 1079 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  5.87494 2 div 5.16667
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fn(a)3423 1057 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 3423 1057 a
3252 1315 a
 tx@Dict begin tx@NodeDict begin {5.22217 2 div 5.16667 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-1-0 11
{InitCnode } NewNode end end
 3252 1315 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  5.22217 2 div 5.16667
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial
Fn(c)3274 1293 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-1 /N@T-0-0-1-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 3274 1293 a 3095 1549 a
 tx@Dict begin tx@NodeDict begin {5.77919 2 div 4.71457 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-1-0-0
11 {InitCnode } NewNode end end
 3095 1549 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  5.77919 2 div 4.71457
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fd(x)3119 1530
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-1-0 /N@T-0-0-1-0-0 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 3119 1530 a 3404 1541 a
 tx@Dict begin tx@NodeDict begin {5.77919 2 div 4.71457 2.12917 add
2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-1-0-1
11 {InitCnode } NewNode end end
 3404 1541 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  5.77919 2 div 4.71457
2.12917 add 2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end


@endspecial Fd(y)3428 1530 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-1-0 /N@T-0-0-1-0-1 InitNC { NCLine  } if end gsave
0.8 SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 3428 1530 a 3552 1313 a
 tx@Dict begin tx@NodeDict begin {4.86667 2 div 4.71457 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-1-1 11
{InitCnode } NewNode end end

3552 1313 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  4.86667 2 div 4.71457
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fd(z)3573
1293 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-1 /N@T-0-0-1-1 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 3573 1293 a 0 1877 a Fe(14.)36 b Fn(Ecrire)g(une)g(fonction)f
Fg(insere)p 1348 1877 31 4 v 39 w(blanc:)53 b(int)f(->)g(arbreRN)h(->)f
(arbreRN)37 b Fn(qui)f(insere)h(une)f(v)-5 b(a-)0 1997
y(leur)24 b(dans)g(un)g(arbre)g(blanc)g(et)g(noir)g(au)f(niv)m(eau)i
(des)g(feuilles)g(et)f(en)g(lui)g(donnan)m(t)g(une)g(couleur)g(blanc)m
(he.)0 2118 y(La)k(fonction)h(doit)g(ren)m(v)m(o)m(y)m(er)i(le)e
(sous-arbre)h(don)m(t)f(le)g(nouv)m(eau)h(n\033ud)f(est)g(la)g(racine.)
g(Cette)h(insertion)0 2238 y(doit)38 b(seulemen)m(t)j(main)m(tenir)f
(la)e(structure)h(d'arbre)g(binaire)g(de)g(rec)m(herc)m(he.)i(Si)e(la)f
(v)-5 b(aleur)39 b(\022)-49 b(a)38 b(ins)m(\023)-46 b(erer)0
2358 y(est)33 b(d)m(\023)-46 b(eja)33 b(pr)m(\023)-46
b(esen)m(te)35 b(dans)e(l'arbre)g(la)f(fonction)h(d)m(\023)-46
b(eclenc)m(he)35 b(l'exception)f(suiv)-5 b(an)m(te)34
b(:)p Black Black 0 2513 a Fg(exception)54 b(FinInsertion)g(;;)0
2718 y Fe(15.)42 b Fn(Ecrire)h(une)g(fonction)f Fg(mauvais)p
1426 2718 V 39 w(blanc)53 b(:)e(arbreRN)i(->)f(unit)43
b Fn(qui)g(prend)g(un)f(sous-arbre)h Fg(x)0 2838 y Fn(en)33
b(argumen)m(t)g(don)m(t)g(la)f(racine)h(est)g(blanc)m(he)h(et)e(qui)i
(appartien)m(t)f(\022)-49 b(a)32 b(un)g(arbre)h Fc(<)p
Fn(quasimen)m(t)p Fc(>)p Fn(blanc)i(et)0 2958 y(noir)f(:)h(cet)g(arbre)
f(v)m(\023)-46 b(eri\014e)36 b(toutes)f(les)g(con)m(train)m(tes)f(\023)
-46 b(enonc)m(\023)g(ees)36 b(sauf)c(\023)-46 b(ev)m(en)m(tuellemen)m
(t)38 b(au)c(niv)m(eau)i(de)f Fg(x)0 3079 y Fn(don)m(t)f(le)f(p)m(\022)
-46 b(ere)35 b(p)s(eut)c(^)-46 b(etre)33 b(blanc.)h(Cette)g(fonction)g
(doit)f(alors)g(mo)s(di\014er)h(l'arbre)g(p)s(our)f(qu'il)h(resp)s
(ecte)0 3199 y(toutes)28 b(les)g(propri)m(\023)-46 b(et)m(\023)g(es)29
b(des)f(arbres)g(blancs)h(et)e(noirs.)h(Utiliser)h(p)s(our)e(cela)h(le)
g(squelette)h(fourni)f(dans)g(le)0 3319 y(\014c)m(hier)i
Fg(TP2.squ)g Fn(et)f(les)h(sc)m(h)m(\023)-46 b(emas)30
b(suiv)-5 b(an)m(ts)30 b(qui)g(donnen)m(t)f(la)g(solution)g(p)s(our)f
(deux)i(cas)f(particuliers)h(:)1036 3530 y
 tx@Dict begin tx@NodeDict begin {6.175 2 div 5.16667 2.66666 add 2
div 2 copy 2.66666 sub 4 2 roll Pyth 3.0 add 0.0 add} false /N@T-0
11 {InitCnode } NewNode end end
 1036 3530
a @beginspecial @setspecial
 tx@Dict begin STP 0  setgray newpath 6.175 2 div 5.16667 2.66666 add
2 div 2 copy 2.66666 sub 4 2 roll Pyth 3.0 add SD end
 
@endspecial 1 TeXcolorgray
Fg(g)p Black 699 3766 a
 tx@Dict begin tx@NodeDict begin {6.175 2 div 5.16667 2.66666 add 2
div 2 copy 2.66666 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0
11 {InitCnode } NewNode end end
 699 3766 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.175 2 div 5.16667
2.66666 add 2 div 2 copy 2.66666 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke
 grestore end


@endspecial Fg(p)725 3756 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 725 3756 a 537 4014 a
 tx@Dict begin tx@NodeDict begin {6.175 2 div 5.16667 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0 11 {InitCnode
} NewNode end end
 537
4014 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.175 2 div 5.16667
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fg(x)563
3992 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 563 3992 a 340 4247 a
 tx@Dict begin tx@NodeDict begin {10.19296 2 div 7.60416 3.19804 add
2 div 2 copy 3.19804 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0-0
11 {InitCnode } NewNode end end
 340 4247 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  10.19296 2 div 7.60416
3.19804 add 2 div 2 copy 3.19804 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial Fb(f)385 4261 y Fa(g)382 4228
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0 /N@T-0-0-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 382 4228 a 701 4251 a
 tx@Dict begin tx@NodeDict begin {10.23462 2 div 7.60416 2.12917 add
2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0-1
11 {InitCnode } NewNode end end
 701 4251 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  10.23462 2 div 7.60416
2.12917 add 2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end


@endspecial Fb(f)746 4266 y Fa(d)743 4228 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0 /N@T-0-0-0-1 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 743 4228
a 859 4015 a
 tx@Dict begin tx@NodeDict begin {6.53961 2 div 7.60416 2.12917 add
2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-1
11 {InitCnode } NewNode end end
 859 4015 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  6.53961 2 div 7.60416
2.12917 add 2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial
Fb(f)886 3992 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 886 3992 a 1373 3777 a
 tx@Dict begin tx@NodeDict begin {6.175 2 div 5.16667 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-1 11 {InitCnode
} NewNode end end
 1373 3777 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.175 2 div 5.16667
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fg(o)1399 3756 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 1399 3756 a
1189 3999 a
 tx@Dict begin tx@NodeDict begin {9.57068 2 div 4.71457 3.19804 add
2 div 2 copy 3.19804 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-1-0
11 {InitCnode } NewNode end end
 1189 3999 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  9.57068 2 div 4.71457
3.19804 add 2 div 2 copy 3.19804 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial
Fb(c)1228 4013 y Fa(g)1228 3992 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1 /N@T-0-1-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1228 3992 a 1530 4004
a
 tx@Dict begin tx@NodeDict begin {9.61234 2 div 4.71457 1.7839 add
2 div 2 copy 1.7839 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-1-1
11 {InitCnode } NewNode end end
 1530 4004 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  9.61234 2 div 4.71457
1.7839 add 2 div 2 copy 1.7839 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial
Fb(c)1569 4019 y Fa(d)1570 3992 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1 /N@T-0-1-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1570 3992 a 1804 3912
a Fn(cas)j(1)1706 3944 y Fm(\000)-34 b(\000)-22 b(\000)h(\000)f(\000)g
(\000)-34 b(!)2860 3533 y
 tx@Dict begin tx@NodeDict begin {6.175 2 div 5.16667 2.66666 add 2
div 2 copy 2.66666 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0
11 {InitCnode } NewNode end end
 2860 3533 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.175 2 div 5.16667
2.66666 add 2 div 2 copy 2.66666 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke
 grestore end


@endspecial Fg(g)2523 3770 y
 tx@Dict begin tx@NodeDict begin {6.175 2 div 5.16667 2.66666 add 2
div 2 copy 2.66666 sub 4 2 roll Pyth 3.0 add 0.0 add} false /N@T-0-0
11 {InitCnode } NewNode end end
 2523 3770 a @beginspecial
@setspecial
 tx@Dict begin STP 0  setgray newpath 6.175 2 div 5.16667 2.66666 add
2 div 2 copy 2.66666 sub 4 2 roll Pyth 3.0 add SD end
 
@endspecial 1 TeXcolorgray Fg(p)p Black
2549 3759 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 2549 3759 a 2361 4017 a
 tx@Dict begin tx@NodeDict begin {6.175 2 div 5.16667 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0 11 {InitCnode
} NewNode end end
 2361 4017 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.175 2 div 5.16667
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fg(x)2387 3996 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 2387 3996 a
2164 4250 a
 tx@Dict begin tx@NodeDict begin {10.19296 2 div 7.60416 3.19804 add
2 div 2 copy 3.19804 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0-0
11 {InitCnode } NewNode end end
 2164 4250 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  10.19296 2 div 7.60416
3.19804 add 2 div 2 copy 3.19804 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial
Fb(f)2209 4264 y Fa(g)2207 4232 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0 /N@T-0-0-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2207 4232 a 2525 4255
a
 tx@Dict begin tx@NodeDict begin {10.23462 2 div 7.60416 2.12917 add
2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0-1
11 {InitCnode } NewNode end end
 2525 4255 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  10.23462 2 div 7.60416
2.12917 add 2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial
Fb(f)2570 4270 y Fa(d)2568 4232 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0 /N@T-0-0-0-1 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 2568 4232 a 2684 4018
a
 tx@Dict begin tx@NodeDict begin {6.53961 2 div 7.60416 2.12917 add
2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-1
11 {InitCnode } NewNode end end
 2684 4018 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  6.53961 2 div 7.60416
2.12917 add 2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial
Fb(f)2711 3996 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 2711 3996 a 3198 3781 a
 tx@Dict begin tx@NodeDict begin {6.175 2 div 5.16667 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.0 add} false /N@T-0-1 11 {InitCnode
} NewNode end end
 3198 3781 a
@beginspecial @setspecial
 tx@Dict begin STP 0  setgray newpath 6.175 2 div 5.16667 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add SD end
 
@endspecial 1 TeXcolorgray
Fg(o)p Black 3223 3759 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 3223 3759 a 3013 4002 a
 tx@Dict begin tx@NodeDict begin {9.57068 2 div 4.71457 3.19804 add
2 div 2 copy 3.19804 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-1-0
11 {InitCnode } NewNode end end
 3013
4002 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  9.57068 2 div 4.71457
3.19804 add 2 div 2 copy 3.19804 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial Fb(c)3052
4016 y Fa(g)3053 3996 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1 /N@T-0-1-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 3053 3996 a 3354 4008 a
 tx@Dict begin tx@NodeDict begin {9.61234 2 div 4.71457 1.7839 add
2 div 2 copy 1.7839 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-1-1
11 {InitCnode } NewNode end end
 3354
4008 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  9.61234 2 div 4.71457
1.7839 add 2 div 2 copy 1.7839 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial Fb(c)3393
4023 y Fa(d)3394 3996 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1 /N@T-0-1-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 3394 3996 a 998 4518 a
 tx@Dict begin tx@NodeDict begin {6.175 2 div 5.16667 2.66666 add 2
div 2 copy 2.66666 sub 4 2 roll Pyth 3.0 add 0.0 add} false /N@T-0
11 {InitCnode } NewNode end end
 998 4518
a @beginspecial @setspecial
 tx@Dict begin STP 0  setgray newpath 6.175 2 div 5.16667 2.66666 add
2 div 2 copy 2.66666 sub 4 2 roll Pyth 3.0 add SD end
 
@endspecial 1 TeXcolorgray
Fg(g)p Black 661 4755 a
 tx@Dict begin tx@NodeDict begin {6.175 2 div 5.16667 2.66666 add 2
div 2 copy 2.66666 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0
11 {InitCnode } NewNode end end
 661 4755 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.175 2 div 5.16667
2.66666 add 2 div 2 copy 2.66666 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke
 grestore end


@endspecial Fg(p)687 4745 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 687 4745 a 499 5002 a
 tx@Dict begin tx@NodeDict begin {6.175 2 div 5.16667 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0 11 {InitCnode
} NewNode end end
 499
5002 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.175 2 div 5.16667
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fg(x)525
4981 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 525 4981 a 302 5235 a
 tx@Dict begin tx@NodeDict begin {10.19296 2 div 7.60416 3.19804 add
2 div 2 copy 3.19804 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0-0
11 {InitCnode } NewNode end end
 302 5235 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  10.19296 2 div 7.60416
3.19804 add 2 div 2 copy 3.19804 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial Fb(f)347 5249 y Fa(g)344 5217
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0 /N@T-0-0-0-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 344 5217 a 663 5240 a
 tx@Dict begin tx@NodeDict begin {10.23462 2 div 7.60416 2.12917 add
2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0-1
11 {InitCnode } NewNode end end
 663 5240 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  10.23462 2 div 7.60416
2.12917 add 2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end


@endspecial Fb(f)708 5255 y Fa(d)705 5217 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0-0 /N@T-0-0-0-1 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 705 5217
a 821 5004 a
 tx@Dict begin tx@NodeDict begin {6.53961 2 div 7.60416 2.12917 add
2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-1
11 {InitCnode } NewNode end end
 821 5004 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  6.53961 2 div 7.60416
2.12917 add 2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial
Fb(f)848 4981 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 848 4981 a 1336 4766 a
 tx@Dict begin tx@NodeDict begin {6.175 2 div 5.16667 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.0 add} false /N@T-0-1 11 {InitCnode
} NewNode end end
 1336 4766 a @beginspecial
@setspecial
 tx@Dict begin STP 0  setgray newpath 6.175 2 div 5.16667 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add SD end
 
@endspecial 1 TeXcolorgray Fg(o)p Black
1361 4745 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 1361 4745 a 1151 4987 a
 tx@Dict begin tx@NodeDict begin {9.57068 2 div 4.71457 3.19804 add
2 div 2 copy 3.19804 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-1-0
11 {InitCnode } NewNode end end
 1151 4987 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  9.57068 2 div 4.71457
3.19804 add 2 div 2 copy 3.19804 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial Fb(c)1190 5001 y Fa(g)1190 4981
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1 /N@T-0-1-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1190 4981 a 1492 4993 a
 tx@Dict begin tx@NodeDict begin {9.61234 2 div 4.71457 1.7839 add
2 div 2 copy 1.7839 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-1-1
11 {InitCnode } NewNode end end
 1492 4993 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  9.61234 2 div 4.71457
1.7839 add 2 div 2 copy 1.7839 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end


@endspecial Fb(c)1531 5008 y Fa(d)1532 4981 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1 /N@T-0-1-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 1532 4981
a 1766 4901 a Fn(cas)33 b(2)p Fl(:)p Fn(1)1668 4933 y
Fm(\000)-24 b(\000)j(\000)f(\000)g(\000)h(\000)f(\000)e(!)2743
4523 y
 tx@Dict begin tx@NodeDict begin {6.175 2 div 5.16667 2.66666 add 2
div 2 copy 2.66666 sub 4 2 roll Pyth 3.0 add 0.0 add} false /N@T-0
11 {InitCnode } NewNode end end
 2743 4523 a @beginspecial @setspecial
 tx@Dict begin STP 0  setgray newpath 6.175 2 div 5.16667 2.66666 add
2 div 2 copy 2.66666 sub 4 2 roll Pyth 3.0 add SD end
 
@endspecial
1 TeXcolorgray Fg(p)p Black 2399 4771 a
 tx@Dict begin tx@NodeDict begin {6.175 2 div 5.16667 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0 11 {InitCnode
} NewNode end end
 2399 4771 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.175 2 div 5.16667
0.0 add 2 div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add CLW 2 div add 0
360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fg(x)2425 4750 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-0 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 2425 4750 a
2202 5004 a
 tx@Dict begin tx@NodeDict begin {10.19296 2 div 7.60416 3.19804 add
2 div 2 copy 3.19804 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-0
11 {InitCnode } NewNode end end
 2202 5004 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  10.19296 2 div 7.60416
3.19804 add 2 div 2 copy 3.19804 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial
Fb(f)2247 5018 y Fa(g)2244 4986 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 2244 4986 a 2563 5008
a
 tx@Dict begin tx@NodeDict begin {10.23462 2 div 7.60416 2.12917 add
2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-0-1
11 {InitCnode } NewNode end end
 2563 5008 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  10.23462 2 div 7.60416
2.12917 add 2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial
Fb(f)2608 5023 y Fa(d)2606 4986 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-0 /N@T-0-0-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 2606 4986 a 3087 4760
a
 tx@Dict begin tx@NodeDict begin {6.175 2 div 5.16667 2.66666 add 2
div 2 copy 2.66666 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-1
11 {InitCnode } NewNode end end
 3087 4760 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.175 2 div 5.16667
2.66666 add 2 div 2 copy 2.66666 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke
 grestore end
 
@endspecial
Fg(g)3113 4750 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0 /N@T-0-1 InitNC { NCLine  } if end gsave 0.8 SLW 0 
setgray 0 setlinecap stroke  grestore  grestore end
 3113 4750 a 2927 5008 a
 tx@Dict begin tx@NodeDict begin {6.53961 2 div 7.60416 2.12917 add
2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-1-0
11 {InitCnode } NewNode end end
 2927 5008 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  6.53961 2 div 7.60416
2.12917 add 2 div 2 copy 2.12917 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial Fb(f)2954 4986
y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1 /N@T-0-1-0 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end
 2954 4986 a 3246 5007 a
 tx@Dict begin tx@NodeDict begin {6.175 2 div 5.16667 0.0 add 2 div
2 copy 0.0 sub 4 2 roll Pyth 3.0 add 0.0 add} false /N@T-0-1-1 11 {InitCnode
} NewNode end end
 3246 5007 a @beginspecial @setspecial
 tx@Dict begin STP 0  setgray newpath 6.175 2 div 5.16667 0.0 add 2
div 2 copy 0.0 sub 4 2 roll Pyth 3.0 add SD end


@endspecial 1 TeXcolorgray Fg(o)p Black 3271 4986 a
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1 /N@T-0-1-1 InitNC { NCLine  } if end gsave 0.8 SLW
0  setgray 0 setlinecap stroke  grestore  grestore end

3271 4986 a 3061 5228 a
 tx@Dict begin tx@NodeDict begin {9.57068 2 div 4.71457 3.19804 add
2 div 2 copy 3.19804 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-1-1-0
11 {InitCnode } NewNode end end
 3061 5228 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  9.57068 2 div 4.71457
3.19804 add 2 div 2 copy 3.19804 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end


@endspecial Fb(c)3100 5242 y Fa(g)3100 5222 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1-1 /N@T-0-1-1-0 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 3100 5222
a 3402 5234 a
 tx@Dict begin tx@NodeDict begin {9.61234 2 div 4.71457 1.7839 add
2 div 2 copy 1.7839 sub 4 2 roll Pyth 3.0 add 0.8 add} false /N@T-0-1-1-1
11 {InitCnode } NewNode end end
 3402 5234 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 1  setgray  9.61234 2 div 4.71457
1.7839 add 2 div 2 copy 1.7839 sub 4 2 roll Pyth 3.0 add CLW 2 div
add 0 360 arc closepath gsave 0.8 SLW 1  setgray 0 setlinecap stroke
 grestore end
 
@endspecial
Fb(c)3441 5249 y Fa(d)3442 5222 y
 tx@Dict begin gsave STV newpath 0.8 SLW 0  setgray  /ArrowA { moveto
} def /ArrowB { } def /NCLW CLW def tx@NodeDict begin 0.0 0.0 neg 0.0
0.0 0 0 /N@T-0-1-1 /N@T-0-1-1-1 InitNC { NCLine  } if end gsave 0.8
SLW 0  setgray 0 setlinecap stroke  grestore  grestore end
 3442 5222 a 0 5543
a Fe(16.)25 b Fn(En)h(d)m(\023)-46 b(eduire)26 b(la)f(fonction)g
Fg(insere)53 b(:)e(int)h(->)g(arbreRN)h(->)f(unit)26
b Fn(qui)g(insere)g(une)g(v)-5 b(aleur)25 b(dans)0 5663
y(un)33 b(arbre)g(blanc)g(et)g(noir)f(en)h(conserv)-5
b(an)m(t)34 b(ses)g(propri)m(\023)-46 b(et)m(\023)g(es.)0
5834 y Fe(17.)33 b Fn(Mo)s(di\014er)g(les)g(fonctions)g(pr)m(\023)-46
b(eceden)m(tes)36 b(de)d(fa\030)-43 b(con)32 b(\022)-49
b(a)33 b(conna)-11 b(^)-38 b(\020tre)33 b(la)f(racine)i(de)f(l'arbre)f
(mo)s(di\014)m(\023)-46 b(ee.)p Black 1885 6180 a(4)p
Black eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
