%!PS-Adobe-2.0
%%Creator: dvips(k) 5.85 Copyright 1999 Radical Eye Software
%%Title: TP6corrige.dvi
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -o TP6corrige.ps TP6corrige.dvi
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2002.03.12:1119
%%BeginProcSet: texc.pro
%!
/TeXDict 250 dict def TeXDict begin /N{def}def /B{bind def}N /S{exch}N
/X{S N}B /TR{translate}N /isls false N /vsize 11 72 mul N /hsize 8.5 72
mul N /landplus90{false}def /@rigin{isls{[0 landplus90{1 -1}{-1 1}
ifelse 0 0 0]concat}if 72 Resolution div 72 VResolution div neg scale
isls{landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div
hsize mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul
TR matrix currentmatrix dup dup 4 get round 4 exch put dup dup 5 get
round 5 exch put setmatrix}N /@landscape{/isls true N}B /@manualfeed{
statusdict /manualfeed true put}B /@copies{/#copies X}B /FMat[1 0 0 -1 0
0]N /FBB[0 0 0 0]N /nn 0 N /IE 0 N /ctr 0 N /df-tail{/nn 8 dict N nn
begin /FontType 3 N /FontMatrix fntrx N /FontBBox FBB N string /base X
array /BitMaps X /BuildChar{CharBuilder}N /Encoding IE N end dup{/foo
setfont}2 array copy cvx N load 0 nn put /ctr 0 N[}B /df{/sf 1 N /fntrx
FMat N df-tail}B /dfs{div /sf X /fntrx[sf 0 0 sf neg 0 0]N df-tail}B /E{
pop nn dup definefont setfont}B /ch-width{ch-data dup length 5 sub get}
B /ch-height{ch-data dup length 4 sub get}B /ch-xoff{128 ch-data dup
length 3 sub get sub}B /ch-yoff{ch-data dup length 2 sub get 127 sub}B
/ch-dx{ch-data dup length 1 sub get}B /ch-image{ch-data dup type
/stringtype ne{ctr get /ctr ctr 1 add N}if}B /id 0 N /rw 0 N /rc 0 N /gp
0 N /cp 0 N /G 0 N /sf 0 N /CharBuilder{save 3 1 roll S dup /base get 2
index get S /BitMaps get S get /ch-data X pop /ctr 0 N ch-dx 0 ch-xoff
ch-yoff ch-height sub ch-xoff ch-width add ch-yoff setcachedevice
ch-width ch-height true[1 0 0 -1 -.1 ch-xoff sub ch-yoff .1 add]/id
ch-image N /rw ch-width 7 add 8 idiv string N /rc 0 N /gp 0 N /cp 0 N{
rc 0 ne{rc 1 sub /rc X rw}{G}ifelse}imagemask restore}B /G{{id gp get
/gp gp 1 add N dup 18 mod S 18 idiv pl S get exec}loop}B /adv{cp add /cp
X}B /chg{rw cp id gp 4 index getinterval putinterval dup gp add /gp X
adv}B /nd{/cp 0 N rw exit}B /lsh{rw cp 2 copy get dup 0 eq{pop 1}{dup
255 eq{pop 254}{dup dup add 255 and S 1 and or}ifelse}ifelse put 1 adv}
B /rsh{rw cp 2 copy get dup 0 eq{pop 128}{dup 255 eq{pop 127}{dup 2 idiv
S 128 and or}ifelse}ifelse put 1 adv}B /clr{rw cp 2 index string
putinterval adv}B /set{rw cp fillstr 0 4 index getinterval putinterval
adv}B /fillstr 18 string 0 1 17{2 copy 255 put pop}for N /pl[{adv 1 chg}
{adv 1 chg nd}{1 add chg}{1 add chg nd}{adv lsh}{adv lsh nd}{adv rsh}{
adv rsh nd}{1 add adv}{/rc X nd}{1 add set}{1 add clr}{adv 2 chg}{adv 2
chg nd}{pop nd}]dup{bind pop}forall N /D{/cc X dup type /stringtype ne{]
}if nn /base get cc ctr put nn /BitMaps get S ctr S sf 1 ne{dup dup
length 1 sub dup 2 index S get sf div put}if put /ctr ctr 1 add N}B /I{
cc 1 add D}B /bop{userdict /bop-hook known{bop-hook}if /SI save N @rigin
0 0 moveto /V matrix currentmatrix dup 1 get dup mul exch 0 get dup mul
add .99 lt{/QV}{/RV}ifelse load def pop pop}N /eop{SI restore showpage
userdict /eop-hook known{eop-hook}if}N /@start{userdict /start-hook
known{start-hook}if pop /VResolution X /Resolution X 1000 div /DVImag X
/IE 256 array N 0 1 255{IE S 1 string dup 0 3 index put cvn put}for
65781.76 div /vsize X 65781.76 div /hsize X}N /p{show}N /RMat[1 0 0 -1 0
0]N /BDot 260 string N /rulex 0 N /ruley 0 N /v{/ruley X /rulex X V}B /V
{}B /RV statusdict begin /product where{pop product dup length 7 ge{0 7
getinterval dup(Display)eq exch 0 4 getinterval(NeXT)eq or}{pop false}
ifelse}{false}ifelse end{{gsave TR -.1 -.1 TR 1 1 scale rulex ruley
false RMat{BDot}imagemask grestore}}{{gsave TR -.1 -.1 TR rulex ruley
scale 1 1 false RMat{BDot}imagemask grestore}}ifelse B /QV{gsave
transform round exch round exch itransform moveto rulex 0 rlineto 0
ruley neg rlineto rulex neg 0 rlineto fill grestore}B /a{moveto}B /delta
0 N /tail{dup /delta X 0 rmoveto}B /M{S p delta add tail}B /b{S p tail}
B /c{-4 M}B /d{-3 M}B /e{-2 M}B /f{-1 M}B /g{0 M}B /h{1 M}B /i{2 M}B /j{
3 M}B /k{4 M}B /w{0 rmoveto}B /l{p -4 w}B /m{p -3 w}B /n{p -2 w}B /o{p
-1 w}B /q{p 1 w}B /r{p 2 w}B /s{p 3 w}B /t{p 4 w}B /x{0 S rmoveto}B /y{
3 2 roll p a}B /bos{/SS save N}B /eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro
%!
% PostScript prologue for pstricks.tex.
% Created 1994/6/23. Source file was pstricks.doc
% Version 0.93a, 93/03/12.
% For use with Rokicki's dvips.
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Atan { /atan load stopped { pop pop 0 } if } def
/Div { dup 0 eq { pop } { div } ifelse } def
/NET { neg exch neg exch T } def
/Pyth { dup mul exch dup mul add sqrt } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def }
def
/PathLength { flattenpath /z 0 def { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
} { /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
/pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
0 } ifelse setdash stroke } def
/DotLine { /b PathLength def /a ED /z ED /y CLW def /z y z add def a 0 gt
{ /b b a div def } { a 0 eq { /b b y sub def } { a -3 eq { /b b y add
def } if } ifelse } ifelse [ 0 b b z Div round Div dup 0 le { pop 1 } if
] a 0 gt { 0 } { y 2 div a -2 gt { neg } if } ifelse setdash 1
setlinecap stroke } def
/LineFill { gsave abs CLW add /a ED a 0 dtransform round exch round exch
2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
def
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop } if
f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/Line { NArray n 0 eq not { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub
def n { Lineto } repeat CP 4 2 roll ArrowB L pop pop } if } def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
Lineto pop pop closepath } ifelse } def
/Diamond { /mtrx CM def T rotate /h ED /w ED dup 0 eq { pop } { CLW mul
neg /d ED /a w h Atan def /h d a sin Div h add def /w d a cos Div w add
def } ifelse mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2
div /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
%  Modification Denis GIROU (CNRS/IDRIS - France) <Denis.Girou@idris.fr> - 15 Jan. 1997
% /Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
% pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
% div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
% d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
setmatrix } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { NArray n 3 lt { n { pop pop } repeat } { BOC /n n 3 sub def
n { NC } repeat EOC } ifelse } def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt { 1 setlinecap [ 0 dx n div ]
dy n div 2 div setdash } { 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end

%%EndProcSet
%%BeginProcSet: pst-dots.pro
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    (P) 0 get /BoldPentagon put
  /Metrics 13 dict def
  Metrics begin
    /Bullet 1000 def
    /Circle 1000 def
    /BoldCircle 1000 def
    /SolidTriangle 1344 def
    /Triangle 1344 def
    /BoldTriangle 1344 def
    /SolidSquare 886 def
    /Square 886 def
    /BoldSquare 886 def
    /SolidPentagon 1093.2 def
    /Pentagon 1093.2 def
    /BoldPentagon 1093.2 def
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle { -550 -550 550 550 } def
    /BoldCircle /Circle load def
    /Bullet /Circle load def
    /Triangle { -571.5 -330 571.5 660 } def
    /BoldTriangle /Triangle load def
    /SolidTriangle /Triangle load def
    /Square { -450 -450 450 450 } def
    /BoldSquare /Square load def
    /SolidSquare /Square load def
    /Pentagon { -546.6 -465 546.6 574.7 } def
    /BoldPentagon /Pentagon load def
    /SolidPentagon /Pentagon load def
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath { 0 0 500 0 360 arc closepath } def
    /Bullet { 500 500 Adjust CirclePath fill } def
    /Circle { 500 500 Adjust CirclePath .9 .9 scale CirclePath eofill } def
    /BoldCircle { 500 500 Adjust CirclePath .8 .8 scale CirclePath eofill } def
    /BoldCircle { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath {
      0  660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath
    } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath {
      -450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
      closepath
    } def
    /SolidSquare { SquarePath fill } def
    /Square { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon { PentagonPath .78 .78 scale PentagonPath eofill } def
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin /SDict 200 dict N SDict begin /@SpecialDefaults{/hs 612 N
/vs 792 N /ho 0 N /vo 0 N /hsc 1 N /vsc 1 N /ang 0 N /CLIP 0 N /rwiSeen
false N /rhiSeen false N /letter{}N /note{}N /a4{}N /legal{}N}B
/@scaleunit 100 N /@hscale{@scaleunit div /hsc X}B /@vscale{@scaleunit
div /vsc X}B /@hsize{/hs X /CLIP 1 N}B /@vsize{/vs X /CLIP 1 N}B /@clip{
/CLIP 2 N}B /@hoffset{/ho X}B /@voffset{/vo X}B /@angle{/ang X}B /@rwi{
10 div /rwi X /rwiSeen true N}B /@rhi{10 div /rhi X /rhiSeen true N}B
/@llx{/llx X}B /@lly{/lly X}B /@urx{/urx X}B /@ury{/ury X}B /magscale
true def end /@MacSetUp{userdict /md known{userdict /md get type
/dicttype eq{userdict begin md length 10 add md maxlength ge{/md md dup
length 20 add dict copy def}if end md begin /letter{}N /note{}N /legal{}
N /od{txpose 1 0 mtx defaultmatrix dtransform S atan/pa X newpath
clippath mark{transform{itransform moveto}}{transform{itransform lineto}
}{6 -2 roll transform 6 -2 roll transform 6 -2 roll transform{
itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll curveto}}{{
closepath}}pathforall newpath counttomark array astore /gc xdf pop ct 39
0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}if}N
/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1 -1
scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3 get
ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip yflip
not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub neg 0
TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{noflips{TR
pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop 90 rotate 1
-1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg
TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr 1 get neg
sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr 2 get ppr
0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4 -1 roll add
2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S TR}if}N /cp
{pop pop showpage pm restore}N end}if}if}N /normalscale{Resolution 72
div VResolution 72 div neg scale magscale{DVImag dup scale}if 0 setgray}
N /psfts{S 65781.76 div N}N /startTexFig{/psf$SavedState save N userdict
maxlength dict begin /magscale true def normalscale currentpoint TR
/psf$ury psfts /psf$urx psfts /psf$lly psfts /psf$llx psfts /psf$y psfts
/psf$x psfts currentpoint /psf$cy X /psf$cx X /psf$sx psf$x psf$urx
psf$llx sub div N /psf$sy psf$y psf$ury psf$lly sub div N psf$sx psf$sy
scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub TR
/showpage{}N /erasepage{}N /copypage{}N /p 3 def @MacSetUp}N /doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N /endTexFig{end psf$SavedState restore}N /@beginspecial{SDict
begin /SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count /ocount X /dcount countdictstack N}N /@setspecial
{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if /showpage{}N /erasepage{}N /copypage{}N newpath
}N /@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{
end}repeat grestore SpecialSave restore end}N /@defspecial{SDict begin}
N /@fedspecial{end}B /li{lineto}B /rl{rlineto}B /rc{rcurveto}B /np{
/SaveX currentpoint /SaveY X N 1 setlinecap newpath}N /st{stroke SaveX
SaveY moveto}N /fil{fill SaveX SaveY moveto}N /ellipse{/endangle X
/startangle X /yrad X /xrad X /savematrix matrix currentmatrix N TR xrad
yrad scale 0 0 1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro
%!
TeXDict begin /setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse /TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def /TeXcolorgrey{setgray}def /TeXcolorgray{
setgray}def /TeXcolorhsb{sethsbcolor}def /currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse /DC{exch dup userdict exch
known{pop pop}{X}ifelse}B /GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC /Goldenrod{0 0.10 0.84 0 setcmykcolor}
DC /Dandelion{0 0.29 0.84 0 setcmykcolor}DC /Apricot{0 0.32 0.52 0
setcmykcolor}DC /Peach{0 0.50 0.70 0 setcmykcolor}DC /Melon{0 0.46 0.50
0 setcmykcolor}DC /YellowOrange{0 0.42 1 0 setcmykcolor}DC /Orange{0
0.61 0.87 0 setcmykcolor}DC /BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC /RedOrange{0 0.77 0.87 0
setcmykcolor}DC /Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC /Maroon{0
0.87 0.68 0.32 setcmykcolor}DC /BrickRed{0 0.89 0.94 0.28 setcmykcolor}
DC /Red{0 1 1 0 setcmykcolor}DC /OrangeRed{0 1 0.50 0 setcmykcolor}DC
/RubineRed{0 1 0.13 0 setcmykcolor}DC /WildStrawberry{0 0.96 0.39 0
setcmykcolor}DC /Salmon{0 0.53 0.38 0 setcmykcolor}DC /CarnationPink{0
0.63 0 0 setcmykcolor}DC /Magenta{0 1 0 0 setcmykcolor}DC /VioletRed{0
0.81 0 0 setcmykcolor}DC /Rhodamine{0 0.82 0 0 setcmykcolor}DC /Mulberry
{0.34 0.90 0 0.02 setcmykcolor}DC /RedViolet{0.07 0.90 0 0.34
setcmykcolor}DC /Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC /Lavender{0
0.48 0 0 setcmykcolor}DC /Thistle{0.12 0.59 0 0 setcmykcolor}DC /Orchid{
0.32 0.64 0 0 setcmykcolor}DC /DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}
DC /Purple{0.45 0.86 0 0 setcmykcolor}DC /Plum{0.50 1 0 0 setcmykcolor}
DC /Violet{0.79 0.88 0 0 setcmykcolor}DC /RoyalPurple{0.75 0.90 0 0
setcmykcolor}DC /BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC /Periwinkle
{0.57 0.55 0 0 setcmykcolor}DC /CadetBlue{0.62 0.57 0.23 0 setcmykcolor}
DC /CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC /MidnightBlue{0.98 0.13
0 0.43 setcmykcolor}DC /NavyBlue{0.94 0.54 0 0 setcmykcolor}DC
/RoyalBlue{1 0.50 0 0 setcmykcolor}DC /Blue{1 1 0 0 setcmykcolor}DC
/Cerulean{0.94 0.11 0 0 setcmykcolor}DC /Cyan{1 0 0 0 setcmykcolor}DC
/ProcessBlue{0.96 0 0 0 setcmykcolor}DC /SkyBlue{0.62 0 0.12 0
setcmykcolor}DC /Turquoise{0.85 0 0.20 0 setcmykcolor}DC /TealBlue{0.86
0 0.34 0.02 setcmykcolor}DC /Aquamarine{0.82 0 0.30 0 setcmykcolor}DC
/BlueGreen{0.85 0 0.33 0 setcmykcolor}DC /Emerald{1 0 0.50 0
setcmykcolor}DC /JungleGreen{0.99 0 0.52 0 setcmykcolor}DC /SeaGreen{
0.69 0 0.50 0 setcmykcolor}DC /Green{1 0 1 0 setcmykcolor}DC
/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC /PineGreen{0.92 0 0.59
0.25 setcmykcolor}DC /LimeGreen{0.50 0 1 0 setcmykcolor}DC /YellowGreen{
0.44 0 0.74 0 setcmykcolor}DC /SpringGreen{0.26 0 0.76 0 setcmykcolor}
DC /OliveGreen{0.64 0 0.95 0.40 setcmykcolor}DC /RawSienna{0 0.72 1 0.45
setcmykcolor}DC /Sepia{0 0.83 1 0.70 setcmykcolor}DC /Brown{0 0.81 1
0.60 setcmykcolor}DC /Tan{0.14 0.42 0.56 0 setcmykcolor}DC /Gray{0 0 0
0.50 setcmykcolor}DC /Black{0 0 0 1 setcmykcolor}DC /White{0 0 0 0
setcmykcolor}DC end

%%EndProcSet
TeXDict begin 39158280 55380996 1000 600 600 (TP6corrige.dvi)
@start
%DVIPSBitmapFont: Fa cmmi12 14.4 1
/Fa 1 111 df<013FEC0FF8D9FFC0EB7FFF00036D48B512C0903BC3F803F01FE0D80781
90390F800FF03C0F01FC1F0007F8000E023C1303001E6D4880001C5C6E5A003C5C00385C
A2D8780390C7FC00705BA25CD8F00715076000005BA2010F150F605CA2011F151F605C17
3F013F5EA24A147F60137F05FF131C4A15005E01FF4B133C193891C712034D1378481870
19F0494B13E01801000318C0180349EE07800401EB0F00933800FC3E49ED7FFCEF3FF0D8
01E0ED0FC03E357DB346>110 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmsy10 14.4 2
/Fb 2 37 df<007FBA12FEBCFCA36C19FE4805769F5D>0 D<020E1938021E193CA2023E
193E023C191E027C191F02788502F8864948737E4A19030103874948737E4948737E49CE
127C013E8749874848F30FC04848757ED80FE0F303F8003FBE12FE48F5FF80C0FC7E6CF5
FE00D80FE0CEEA03F8D803F0F307E06C6C515AD8007C51C7FC6D1B3E6D636D6C626D6C4F
5A6D6C4F5A0101636E19076D6C4F5A027897C8FC027C61023C191E023E193E021E193CA2
020E1938692B79B278>36 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmbx12 14.4 24
/Fc 24 119 df<EB3FF0B5FCA512017EB3B3A6B612E0A51B367BB525>16
D<EA0F80EA3FE0487EA2487E7F7F7FA214806C13C06C13E07E000713F0000113F838007F
FC133FEB0FFEEB03FF7FEB007E141C1404181772D343>18 D<EA07F0EA1FF8EA3FFE487E
A2B5128014C0A314E0A37EA27EEA1FFDEA07F1EA0001A2130314C0A313071480130FA214
005B133EA25B5B485A1203485A485A485A90C7FC120C132876D225>39
D<EA07F0487E487E487E487EB51280A76C13006C5A6C5A6C5A6C5A1111769025>46
D<157815FC14031407141F14FF130F0007B5FCB6FCA2147F13F0EAF800C7FCB3B3B3A600
7FB712FEA52F4E76CD43>49 D<EC3FFE0103B512E0010F14FC013F14FF90B712C048D9C0
7F7F2703FE000F13F8D807F801037FD80FE06D7F48486D7F48488001F01680486C6E13C0
7F486C6E13E07FA27013F0A56C5AA26C5AEA0FF0EA03C0C914E05EA218C05E1880A24C13
005F4C5A4B5B5F4B5B5F4B5B4B90C7FC4B5A5E4B5AED7FE04B5A4A5B4A48C8FC4A5A5D4A
48EB01F04A5AEC3F804AC7FC02FEEC03E0495A495A495A495AD91F80140749C8FC013E15
0F017FB7FC90B812C05A5A5A5A5A5A5AB9FC1880A4344E79CD43>I<932601FFFCEC01C0
047FD9FFC013030307B600F81307033F03FE131F92B8EA803F0203DAE003EBC07F020F01
FCC7383FF0FF023F01E0EC0FF94A01800203B5FC494848C9FC4901F88249498249498249
49824949824990CA7E494883A2484983485B1B7F485B481A3FA24849181FA3485B1B0FA2
5AA298C7FC5CA2B5FCAE7EA280A2F307C07EA36C7FA21B0F6C6D1980A26C1A1F6C7F1C00
6C6D606C6D187EA26D6C606D6D4C5A6D6D16036D6D4C5A6D6D4C5A6D01FC4C5A6D6DEE7F
806D6C6C6C4BC7FC6E01E0EC07FE020F01FEEC1FF80203903AFFE001FFF0020091B612C0
033F93C8FC030715FCDB007F14E0040101FCC9FC525479D261>67
D<B800C00103B612FCA5D8000701F8CAEBF000F31F80B3B3B11B3FA26D97C7FC81637F1B
7E6D6D17FE505A6E7E505A6E6D15076E4D5A6E6D4B5A6E6D4B5A6E01F84B5A6E6DDA03FF
C8FC6E6CB46CEB0FFE6F9039F001FFF8030F90B65A030316C0DB007F92C9FC040F14F8DC
007F13805E537CD167>85 D<146014F0497E497E497E90381FFF80497F497F90B57E4880
0007EB0FFE48486C7E261FF801138048486C13C0D87FC0EB3FE04848EB1FF048C7120700
78EC01E00030EC00C0241371D243>94 D<EC7FFF0107B512F0013F14FE90B77E48D9E00F
7F2703FE000113F0486C6D7F6EEB3FFC48826E131F83707FA36C496D7FA26C90C7FC6C5A
C9FCA6037FB5FC020FB6FC91B7FC01071487013FEBF0074913803901FFFC004813F0485B
485B485B4890C7FC5A5BA2485AA45EA26D5C007F151D163D6C6C02797F6C6D01F113F86C
9026C003E1EBFFE06C9026F81FC014F06C90B5487EC6ED001F011F01FC010713E0010101
E090C8FC3C387CB641>97 D<EB3FF0B5FCA51203C6FCB3A4923801FFE0030F13FE033FEB
FFC092B612F002F301017F913AF7F8003FFEDAFFE0EB0FFF03806D7F92C76C7F4A6E7F4A
824A6E7FA2727EA285A28584A31A80AC1A00A44E5AA36118FF616E4A5BA26E4A5B6E4A5B
6F495BDACFC04990C7FCDA87F0EB7FFC913A03FE03FFF849C6B612E0496D148049011F01
FCC8FC90C7000313C041547BD24B>I<913801FFF8021FEBFF8091B612F0010315FC010F
9038C00FFE903A1FFE0001FFD97FFC491380D9FFF05B4817C048495B5C5A485BA2486F13
8091C7FC486F1300705A4892C8FC5BA312FFAD127F7FA27EA2EF03E06C7F17076C6D15C0
7E6E140F6CEE1F806C6DEC3F006C6D147ED97FFE5C6D6CEB03F8010F9038E01FF0010390
B55A01001580023F49C7FC020113E033387CB63C>I<4DB47E0407B5FCA5EE001F1707B3
A4913801FFE0021F13FC91B6FC010315C7010F9038E03FE74990380007F7D97FFC0101B5
FC49487F4849143F484980485B83485B5A91C8FC5AA3485AA412FFAC127FA36C7EA37EA2
6C7F5F6C6D5C7E6C6D5C6C6D49B5FC6D6C4914E0D93FFED90FEFEBFF80903A0FFFC07FCF
6D90B5128F0101ECFE0FD9003F13F8020301C049C7FC41547CD24B>I<913803FFC0023F
13FC49B6FC010715C04901817F903A3FFC007FF849486D7E49486D7E4849130F48496D7E
48178048497F18C0488191C7FC4817E0A248815B18F0A212FFA490B8FCA318E049CAFCA6
127FA27F7EA218E06CEE01F06E14037E6C6DEC07E0A26C6DEC0FC06C6D141F6C6DEC3F80
6D6CECFF00D91FFEEB03FE903A0FFFC03FF8010390B55A010015C0021F49C7FC020113F0
34387CB63D>I<EB3FF0B5FCA51203C6FCB3A4EE1FFC93B512C0030314F0030F8092391F
E07FFC92393F001FFE037C8003F07FDAF1E081ECF3C0DAF7807F8502FFC7FC5CA25CA45C
B3ACB6D8F807B612C0A542537BD24B>104 D<137F497E000313E0487FA2487FA76C5BA2
6C5BC613806DC7FC90C8FCADEB3FF0B5FCA512017EB3B3A6B612E0A51B547BD325>I<EB
3FF0B5FCA512017EB3B3B3B1B612F0A51C537BD225>108 D<D93FF0EB1FFCB591B512C0
030314F0030F8092391FE07FFC92393F001FFE0003027C80C602F07FDAF1E081ECF3C0DA
F7807F8502FFC7FC5CA25CA45CB3ACB6D8F807B612C0A542367BB54B>110
D<913801FFE0021F13FE91B612C0010315F0010F9038807FFC903A1FFC000FFED97FF86D
6C7E49486D7F48496D7F48496D7F4A147F48834890C86C7EA24883A248486F7EA3007F18
80A400FF18C0AC007F1880A3003F18006D5DA26C5FA26C5F6E147F6C5F6C6D4A5A6C6D49
5B6C6D495B6D6C495BD93FFE011F90C7FC903A0FFF807FFC6D90B55A010015C0023F91C8
FC020113E03A387CB643>I<90397FE003FEB590380FFF80033F13E04B13F09238FE1FF8
9139E1F83FFC0003D9E3E013FEC6ECC07FECE78014EF150014EE02FEEB3FFC5CEE1FF8EE
0FF04A90C7FCA55CB3AAB612FCA52F367CB537>114 D<903903FFF00F013FEBFE1F90B7
FC120348EB003FD80FF81307D81FE0130148487F4980127F90C87EA24881A27FA27F01F0
91C7FC13FCEBFFC06C13FF15F86C14FF16C06C15F06C816C816C81C681013F1580010F15
C01300020714E0EC003F030713F015010078EC007F00F8153F161F7E160FA27E17E07E6D
141F17C07F6DEC3F8001F8EC7F0001FEEB01FE9039FFC00FFC6DB55AD8FC1F14E0D8F807
148048C601F8C7FC2C387CB635>I<143EA6147EA414FEA21301A313031307A2130F131F
133F13FF5A000F90B6FCB8FCA426003FFEC8FCB3A9EE07C0AB011FEC0F8080A26DEC1F00
15806DEBC03E6DEBF0FC6DEBFFF86D6C5B021F5B020313802A4D7ECB34>I<D93FF89138
01FFC0B50207B5FCA50003ED001FC61607B3AE5FA35FA2017F5D173B177B6D6C14F3DC01
E313F06D6CD907C3EBFFC0903A0FFFC03F836D90B51203010114FE6D6C13F8020701E091
C7FC42377BB54B>I<B600F00107B5FCA5000101F8C8EA7FE06C6DED3F00A2017F163E6E
157E013F167C6E15FC6D5E6F13016D5E8117036D5E6F13076D5E6F130F6D5E6F131F6D93
C7FC815F6E6C133E177E023F147C6F13FC6E5C16816E5C16C3A26EEBE3E016E76E5C16FF
6E5CA26E91C8FCA26F5AA36F5AA26F5AA26F5AA26F5A6F5A40367DB447>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmtt12 12 46
/Fd 46 125 df<14E0EB03F0EB0FF8137FEA01FF000713F0001F13E0007F1380EBFE00EA
FFF8EA7FE090C7FC123C150D6EBC33>19 D<121C127FEAFF80B3A3EA7F00B3A2123EC7FC
A9121C127FA2EAFF80A3EA7F00A2121C093E6BBD33>33 D<00085B003EEB07C0007FEB0F
E0A24814F0A26C14E0B3A2007E1307003E14C0A20008EB01001C1E75BD33>I<EA07C0EA
0FF0EA1FF8A213FCA213FE120F1207EA007EA613FE13FCA21201EA03F8A2EA07F0120FEA
1FE0EA7FC0EAFF8013005A5A12700F1E6EBC33>39 D<140FEC3F80147F14FF491300495A
EB07F8495A495A495A495A49C7FC5B12015B485A12075B120F5B121F5BA2123F5BA2127F
90C8FCA45A5AAD7E7EA47F123FA27F121FA27F120F7F12077F12036C7E7F12007F6D7E6D
7E6D7E6D7E6D7EEB03FE6D7E6D1380147F143FEC0F00194D6FC433>I<127812FE7E7F6C
7E6C7EEA0FF06C7E6C7E6C7E6C7E6D7E133F80131F6D7E801307801303801301A2801300
A28080A41580143FAD147F1500A45C5CA213015CA213035C13075C130F5C495A133F5C13
7F49C7FC485A485A485A485AEA3FE0485A485A90C8FC5A1278194D78C433>I<EA07C0EA
0FF0EA1FF8123F13FCA213FEA2121F120F1207EA007E13FEA213FC1201EA03F81207EA0F
F0EA7FE012FF13C013005A12780F196E8A33>44 D<007FB612FEA2B8FCA36C15FEA22807
7BA133>I<121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B0B6C8A33>I<EB01E049
7EA21307A2130FA2131F133F137F13FF1203123F5AEAFFF713E71387EA7E071200B3B3A2
003FB512FE48801680A216006C5C213E76BD33>49 D<121FEA3F80EA7FC0EAFFE0A5EA7F
C0EA3F80EA1F00C7FCB3A3121FEA3F80EA7FC0EAFFE0A5EA7FC0EA3F80EA1F000B2B6CAA
33>58 D<EA07C0EA0FE0EA1FF0EA3FF8A5EA1FF0EA0FE0EA07C0C7FCB3A3EA07C0EA0FE0
EA1FF0EA3FF8A213FCA3121F120F12071200A2120113F81203EA07F0120FEA1FE0127FEA
FFC01380130012FC12700E396EAA33>I<007FB71280A2B812C0A36C16806C1600CBFCA9
003FB7FC481680B812C0A36C1680A22A177CA933>61 D<1210127CB4FC7F13E07FEA7FFC
6C7E380FFF806C13E000017F6C13FCEB3FFE6D6C7E01077F010113F06D7FEC3FFE6E7E02
0713C06E13E0020013F8ED7FFE151FED0FFF1503150FED1FFE157FEDFFF8020313E04A13
C0021F13004A5AECFFF8495B010713C0011F5B4948C7FCEBFFFC4813F000075B481380D8
3FFEC8FC485AEAFFF05B138090C9FC127C121028337BB733>I<EC07F8EC3FFF91B57E01
0314E0010F80498090383FFC0F90397FE003FC9038FF80014890C77ED803FC147E49EB7E
7F0007903801FFBFD9F00713FF4848481480495A001F5B018013C3003FEB7F8101000100
13C002FE137F4849133FEA7E014A131FA212FEEAFC034A130FA96E131FD8FE011580127E
A26E133FD87F0015006C6D5B027F13FE01801381001F90383FC3FC01C013FF000F6D5B6D
6C5B6C6C6C5BD9F80113800003D9007EC7FC6D9038000F806CB4EC1FC06C6D133FD97FE0
13FF90263FFC0713806DB612006D5C010314F801005C023F1380DA07FCC7FC2A3F7CBD33
>64 D<D83FF8EC1FFC486CEC3FFE486CEC7FFFA2007F16FE6C6CECFFFC000716E001EF14
F7EC8001A39039E7C003E7A3ECE007A201E314C7A2ECF00FA201E11487ECF81FA201E014
07A2ECFC3FA2EC7C3E157E147EEC3E7CA3EC1E78EC1FF8A2EC0FF0A3EC07E0EC03C091C7
FCAED83FFCEC3FFC486CEC7FFEB591B5FCA26C48EC7FFE6C48EC3FFC303D7FBC33>77
D<D87FFC90381FFFE0486C4913F07FA36C6D6C13E00003913800FC0013F780A213F380A3
EBF1F0A38013F0A280A2147C147EA2143E143FA2801580A3140F15C0A2140715E0A21403
15F0A21401A215F81400A3157CA3153C153EA2151E151F387FFF80B5EAC00FA315076C49
6C5A2C3D7DBC33>I<003FB512FC48ECFF80B712E016F86C816C813A01FC000FFF030313
801500EE7FC0163FEE1FE0160FA217F01607A6160F17E0A2161FEE3FC0167FEEFF801503
030F130090B65A5E5E16E0168003FCC7FC01FCC9FCB3383FFFE0487FB57EA26C5B6C5B2C
3D7EBC33>80 D<007FB512C0B612E0A415C048C8FCB3B3B3ABB612C015E0A46C14C01B4D
6CC433>91 D<007FB512C0B612E0A47EC7120FB3B3B3AB007FB5FCB6FCA46C14C01B4D7D
C433>93 D<EB01C0EB07E0EB1FF8EB7FFE48B51280000714E0001F14F8393FFE7FFC39FF
F81FFF497EEBC00390C7FC007E147E0038141C200E77BC33>I<007FB612FEA2B8FCA36C
15FEA228077B7D33>I<EB1FFC90B57E000314E048804814FC48809038F007FFEBE0016E
7F153F6C48806C48131FC87F150FA5EC0FFF49B5FC131F137F48B6FC0007140F4813C038
1FFC00EA3FF0EA7FC05B48C7FC5AA56C141F7E6D137FD83FE0497ED9F807EBFFF06CB712
F87E6C14F36C14C1C69138003FF0D91FF090C7FC2D2E7BAC33>97
D<EA3FFC487E12FFA2127F123F1200ABEC01FE91380FFFC04A13F0027F7F91B512FE90B7
FCECFE07DAF800138002E0EB7FC04AEB3FE04A131FEE0FF091C7FC16074915F81603A217
FC1601A9160317F8A26D140717F06E130F17E06E131FEE3FC06E137F9139F801FF80DAFE
07130091B55A495C6E5BD97E3F13E0D93C0F138090260003FEC7FC2E3E7FBC33>I<ECFF
F0010713FE011FEBFF804914C04914E048B612F048EBC01F9038FE000F485A485A4848EB
07E049EB03C0484890C7FC5BA2127F90C9FCA25A5AA97E7EA27F003FEC01F06DEB03F86C
7E6D13076C6C14F06C6C130F01FFEB1FE06CEBE07F6C90B512C06C1580013F14006D13FC
01075B010013C0252E79AC33>I<ED7FF84B7E5CA280157F1501ABEB01FF010713C1011F
13F1017F13F990B6FC5A4813813907FE003FD80FF8131F49130F48481307491303123F49
1301127F90C7FCA25A5AA97E7E15037F123F6D1307A26C6C130F6D131F6C6C133F6C6C13
7F2603FF81B512F091B612F8C602FD13FC6D13F96D01E113F8010F018013F0D901FEC8FC
2E3E7DBC33>I<ECFF80010713F0011F13FC497F90B6FC48158048018013C03A07FE003F
E001F8EB0FF048481307484814F8491303003F15FC491301127F90C7FC16FE15005A5AB7
FCA516FC48C9FC7E7EA36C7E167C6C6C14FE7F6C7E6D13016C6CEB03FC6CB4130F6C9038
C03FF86C90B512F06D14E06D14C0010F1400010313FC9038007FE0272E7BAC33>I<ED3F
E0913801FFFC020713FE141F4A13FF5CECFFC015004948137E4A133C010314005CA8003F
B612F84815FCB7FCA36C15F8260003F8C7FCB3AD003FB612804815C0A46C1580283E7DBD
33>I<D901FEEB1FE0903A0FFFC0FFF0013F01F313F84990B512FC90B7FC5A48010313E1
2607FC00EB80F849017F1360484890383FC00049131FA2001F8149130FA66D131F000F5D
A26D133F6C6C495A6D13FF2603FF0390C7FCECFFFE485C5D5DD80FCF13C0D981FEC8FC01
80C9FCA27FA26C7E7F90B512FC6CECFFC06C15F0000715FC4815FF4816809038E0000748
489038007FC090C8EA1FE048150F007E150700FE16F0481503A56C1507007E16E0007F15
0F6C6CEC1FC001E0147FD81FF8903801FF80270FFF801F13006C90B55A6C5DC615F0013F
14C0010F91C7FC010013F02E447DAB33>I<EA3FFC487E12FFA2127F123F1200AB4AB4FC
020713C0021F13F0027F7F91B5FC90B67EED07FEECF801ECF0004A7F4A7F5CA291C7FCA3
5BB3A43B3FFFF80FFFFC486D4813FEB56C4813FFA26C496C13FE6C496C13FC303D7FBC33
>I<14E0EB03F8A2497EA36D5AA2EB00E091C8FCAA383FFFF8487FA47EEA0001B3AD007F
B612C0B712E016F0A216E06C15C0243E78BD33>I<1570EC01FCA2EC03FEA3EC01FCA2EC
00701500AA90383FFFFC4913FE90B5FCA27F7F90C7FCB3B3A9140115FCA21218007EEB03
F81407B414F0140F9038803FE090B512C06C14806C14006C5B6C13F8000113E01F557BBD
33>I<383FFFFC487FB5FCA27E7EC7FCB3B3AD003FB612F84815FCB712FEA26C15FC6C15
F8273D7ABC33>108 D<02FC137E3B7FC3FF01FF80D8FFEF01877F90B500CF7F15DF92B5
7E6C010F13872607FE07130301FC01FE7F9039F803FC01A201F013F8A401E013F0B3A53C
7FFE0FFF07FF80B548018F13C0A46C486C01071380322C80AB33>I<4AB4FC263FFC0713
C0267FFE1F13F000FF017F7F91B5FC6CB67E6CEC07FEC6EBF801ECF0004A7F4A7F5CA291
C7FCA35BB3A43B3FFFF80FFFFC486D4813FEB56C4813FFA26C496C13FE6C496C13FC302C
7FAB33>I<EB01FE90380FFFC0013F13F0497F90B57E488048EB03FF2607FC0013804848
EB7FC049133F4848EB1FE049130F4848EB07F0A2007F15F890C71203A300FEEC01FCAA6C
14036C15F8A26D1307003F15F06D130FA26C6CEB1FE06D133F6C6CEB7FC06C6CEBFF8026
03FF0313006CEBFFFE6C5C6D5B6D5B010F13C0D901FEC7FC262E7AAC33>I<EC01FE3A3F
FC0FFFC0486C4813F000FF017F7F91B512FE6CB7FC6CEBFE07C6D9F800138002E0EB7FC0
4AEB3FE04A131FEE0FF091C7FC16074915F81603A217FC1601A9160317F8A26D140717F0
6E130F17E06E131FEE3FC06E137F9139F801FF80DAFE07130091B55A495C6E5B6E13E002
0F1380DA03FEC7FC91C9FCAF383FFFF8487FB57EA26C5B6C5B2E427FAB33>I<02FF137C
0107EBE0FE011F13F0017F13FC90B512FE4814FF4813C03907FE003F4848131F01F0130F
484813071503485A491301127F90C7FC15005A5AA97E7E15017F123F6D130315076C7E6C
6C130F6D131FD807FE137F3903FF81FF6CEBFFFE6C14FC6D13F86D13F0010F13C0903801
FE0090C8FCAF92387FFFFC92B512FEA46F13FC2F427CAB33>I<ED03FE3B7FFF801FFF80
B5D8C07F13E002C1B5FC02C314F014C76C9038CFFE0F39001FDFF09139FFC007E0923880
03C092C8FC5C5C5CA25CA25CA35CB2007FB512FEB7FCA46C5C2C2C7DAB33>I<90381FFE
0F90B5EA8F80000314FF120F5A5AEBF007387F800190C7FC00FE147F5A153FA37E007FEC
1F0001C090C7FCEA3FF8EBFFC06C13FF6C14E0000314F8C680011F13FF01001480020713
C0EC007FED1FE0007C140F00FEEC07F01503A27EA27F15076D14E06D130F6DEB3FC09038
FE01FF90B61280160000FD5C00FC14F8D8F83F13E0D8780790C7FC242E79AC33>I<EB03
C0497E130FAA003FB612FC4881B7FCA36C5D26000FE0C8FCB3A3161FEE3F80A5167F6E14
0001075C6E5A9138FE07FE6DB55A6D5C6D5C6E5B021F1380DA07FCC7FC29387EB633>I<
D83FFCEB1FFE486C497E00FF5CA2007F80003F800000EC007FB3A75EA25DA26D5B90387F
800FDAE03F13FC6DB612FE17FF6D806D01FE13FE01039038F83FFC010001C0C7FC302C7F
AA33>I<3B3FFFC00FFFF0486D4813F8B56C4813FCA26C496C13F86C496C13F0D801F8C7
EA7E006D14FE00005DA26D1301017E5CA2017F13036D5CA2EC8007011F5CA2ECC00F010F
5CA36D6C485AA3ECF03F010391C7FCA26E5A0101137EA2ECFCFE01005BA214FF6E5AA36E
5AA26E5A6E5A2E2B7EAA33>I<3B7FFF8007FFF8B56C4813FC6E5AA24A7E6C496C13F8D8
0FC0C7EA0FC06D141F00071680A56D143F00031600A3EC0FC0EC1FE0A23A01F83FF07EA3
EC7FF8147CA20000157C9039FCFCFCFCA3ECF87CA2017C5C017D137EECF03EA2017F133F
A26D486C5AA3ECC00F90390F8007C02E2B7EAA33>I<3B3FFFC07FFF80486DB512C0B500
F114E0A26C01E014C06C496C13803B00FE000FE000017F495AEB3F804B5A6D6C48C7FC90
380FE07E903807F0FEECF1FC903803FBF8EB01FF6D5B5D6E5A143F6E5A143F814A7E14FF
903801FBF0ECF9F8903803F1FCEB07E0157E90380FC07F011F6D7E90383F801F02007F49
6D7E01FE6D7E484813033B7FFFC03FFFE0B56C4813F0A46C496C13E02C2B7DAA33>I<12
7CA212FEB3B3B3B3127CA2074D6AC433>124 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmbx12 12 28
/Fe 28 118 df<EA07C0EA1FF0487E487E487E7FA31480A37E7EEA1FF7EA07C7EA000713
0FA21400A25B131E133EA25B13FC5B485A485A1207485A485A90C7FC120C112278C41F>
39 D<EA07C0EA1FF0EA3FF8EA7FFCEAFFFEA7EA7FFCEA3FF8EA1FF0EA07C00F0F788E1F>
46 D<EC3FF849B5FC010F14E0013F14F890397FF01FFC9039FFC007FE4890380001FF48
486D1380000716C049147F000F16E049143F001F16F0A2003F16F8A249141F007F16FCA6
00FF16FEB3A3007F16FCA56C6CEC3FF8A3001F16F0A2000F16E06D147F000716C06D14FF
6C6C4913806C6D4813006C6D485A90397FF01FFC6DB55A010F14E0010314809026003FF8
C7FC2F427CC038>48 D<EC03C01407141F147FEB03FF133FB6FCA413C3EA0003B3B3ADB7
12FCA5264177C038>I<ECFFE0010F13FE013F6D7E90B612E0000315F82607FC0313FE3A
0FE0007FFFD81F806D138048C7000F13C0488001C015E001F07F00FF6E13F07F17F881A4
6C5A6C5A6C5AC9FC17F05DA217E05D17C04B13804B1300A2ED1FFC4B5A5E4B5A4B5A4A90
C7FC4A5A4A5AEC0FF04A5AEC3F804AC7127814FE495A494814F8D907E014F0495A495A49
C8FC017C140149140348B7FC4816E05A5A5A5A5AB8FC17C0A42D417BC038>I<ECFFF001
0713FF011F14C0017F14F049C66C7ED803F8EB3FFED807E06D7E81D80FF86D138013FE00
1F16C07FA66C5A6C4815806C485BC814005D5E4B5A4B5A4B5A4A5B020F1380902607FFFE
C7FC15F815FF16C090C713F0ED3FFCED0FFEEEFF80816F13C017E0A26F13F0A217F8A3EA
0FC0EA3FF0487EA2487EA217F0A25D17E06C5A494913C05BD83F80491380D81FF0491300
D80FFEEBFFFE6CB612F800015D6C6C14C0011F49C7FC010113E02D427BC038>I<163FA2
5E5E5D5DA25D5D5D5DA25D92B5FCEC01F7EC03E7140715C7EC0F87EC1F07143E147E147C
14F8EB01F0EB03E0130714C0EB0F80EB1F00133E5BA25B485A485A485A120F5B48C7FC12
3E5A12FCB91280A5C8000F90C7FCAC027FB61280A531417DC038>I<0007150301E0143F
01FFEB07FF91B6FC5E5E5E5E5E16804BC7FC5D15E092C8FC01C0C9FCAAEC3FF001C1B5FC
01C714C001DF14F09039FFE03FFC9138000FFE01FC6D7E01F06D13804915C0497F6C4815
E0C8FC6F13F0A317F8A4EA0F80EA3FE0487E12FF7FA317F05B5D6C4815E05B007EC74813
C0123E003F4A1380D81FC0491300D80FF0495AD807FEEBFFFC6CB612F0C65D013F148001
0F01FCC7FC010113C02D427BC038>I<4AB47E021F13F0027F13FC49B6FC01079038807F
8090390FFC001FD93FF014C04948137F4948EBFFE048495A5A1400485A120FA248486D13
C0EE7F80EE1E00003F92C7FCA25B127FA2EC07FC91381FFF8000FF017F13E091B512F890
39F9F01FFC9039FBC007FE9039FF8003FF17804A6C13C05B6F13E0A24915F0A317F85BA4
127FA5123FA217F07F121FA2000F4A13E0A26C6C15C06D4913806C018014006C6D485A6C
9038E01FFC6DB55A011F5C010714C0010191C7FC9038003FF02D427BC038>I<121E121F
13FC90B712FEA45A17FC17F817F017E017C0A2481680007EC8EA3F00007C157E5E00785D
15014B5A00F84A5A484A5A5E151FC848C7FC157E5DA24A5A14035D14074A5AA2141F5D14
3FA2147F5D14FFA25BA35B92C8FCA35BA55BAA6D5A6D5A6D5A2F447AC238>I<EC7FF001
03B5FC010F14C0013F14F090397F801FFC3A01FC0003FE48486D7E497F4848EC7F80163F
484815C0A2001F151FA27FA27F7F01FE143F6D158002C0137F02F014006C01FC5B6E485A
6C9038FF83FCEDE7F86CECFFE06C5D6C92C7FC6D14C06D80010F14F882013F8090B7FC48
013F14802607FC0F14C0260FF80314E04848C6FC496D13F0003F141F48481307496D13F8
150000FF157F90C8123F161F160FA21607A36D15F0127F160F6D15E06C6C141F6DEC3FC0
6C6CEC7F80D80FFE903801FF003A07FFC00FFE6C90B55AC615F0013F14C0010F91C7FC01
0013F02D427BC038>I<EC7FF0903807FFFE011F6D7E017F14E09039FFE03FF048903880
0FF848496C7E48488048486D7E001F80003F1680A2484815C08117E0A212FF17F0A617F8
A45D127FA3003F5CA26C7E5D6C6C5B12076C6C131E6CEBC07C6CEBFFF8013F5B010F01C0
13F00101130090C8FCA217E05DA2EA03C0D80FF015C0487E486C491380A217004B5A150F
5E49495A6C48495A01C0EBFFE0260FF0035B6CB65A6C4AC7FC6C14F86C6C13E0D907FEC8
FC2D427BC038>I<DCFFF01470031F01FF14F04AB6EAE0010207EDF803023FEDFE0791B5
39E001FF0F4949C7EA3F9F010701F0EC0FFF4901C0804990C87E4948814948814948167F
4849163F4849161F5A4A160F485B19074890CAFC19035A5BA2007F1801A34994C7FC12FF
AE127F7F1AF0A2123FA27F6C18011AE06C7F19036C6D17C06E16077E6C6DEE0F806C6DEE
1F006D6C5E6D6C167E6D6C6C5D6D6D4A5A6D01F0EC07F0010101FEEC1FE06D903AFFF001
FF80023F90B6C7FC020715FC020115F0DA001F1480030001F8C8FC44467AC451>67
D<B812F8EFFFC018F818FE727ED8001F90C7003F13E005037F05007F727E727E727EA286
84A286A762A24E90C7FCA24E5A61187F943801FFF005075B053F138092B7C8FC18F818E0
18F892C77FEF3FFF050F7F717F717FA2717FA2717FA785A61B0F85A2187F73131F72141E
B700E06DEB803E72EBE0FC72EBFFF8060114F0726C13E0CC0007138050457DC354>82
D<903801FFE0011F13FE017F6D7E48B612E03A03FE007FF84848EB1FFC6D6D7E486C6D7E
A26F7FA36F7F6C5A6C5AEA00F090C7FCA40203B5FC91B6FC1307013F13F19038FFFC0100
0313E0000F1380381FFE00485A5B127F5B12FF5BA35DA26D5B6C6C5B4B13F0D83FFE013E
EBFFC03A1FFF80FC7F0007EBFFF86CECE01FC66CEB8007D90FFCC9FC322F7DAD36>97
D<EB7FC0B5FCA512037EB1ED0FF892B57E02C314E002CF14F89139DFC03FFC9139FF000F
FE02FCEB03FF4A6D13804A15C04A6D13E05CEF7FF0A218F8173FA318FCAC18F8A2177F18
F0A3EFFFE06E15C06E5B6E491380027C491300496C495A903AFC1FC07FFC496CB512F0D9
F00314C049C691C7FCC8EA1FF036467DC43E>I<EC3FFC49B512C0010F14F0013F14FC90
397FF003FE9039FFC001FF0003495A48494813805B120F485AA2485A6F1300007F6E5AED
00784991C7FCA212FFAC6C7EA3123F6DEC03C0A26C6C1407000F16806D140F6C6DEB1F00
6C6D133E6C01F05B3A007FFC03F86DB55A010F14C0010391C7FC9038003FF82A2F7CAD32
>I<EE03FEED07FFA5ED001F160FB1EC3FE0903803FFFC010FEBFF8F013F14CF9039FFF8
07FF48EBC00148903880007F4890C7123F4848141F49140F121F485AA3127F5BA212FFAC
127FA37F123FA26C6C141FA26C6C143F0007157F6C6C91B5FC6CD9C00314FC6C9038F01F
EF6DB5128F011FEBFE0F010713F89026007FC0EBF80036467CC43E>I<EC3FF80103B57E
010F14E0013F8090397FF83FF89039FFC007FC48496C7E48496C7E48486D1380485A001F
ED7FC05B003FED3FE0A2127F5B17F0161F12FFA290B7FCA401F0C9FCA5127FA27FA2123F
17F06C7E16016C6C15E06C6C14036C6DEB07C06C6DEB0F806C01F0EB3F0090397FFE01FE
011FB55A010714F0010114C09026001FFEC7FC2C2F7DAD33>I<EB7FC0B5FCA512037EB1
ED07FE92383FFF8092B512E002C114F89139C7F03FFC9138CF801F9139DF000FFE14DE14
FC4A6D7E5CA25CA35CB3A7B60083B512FEA537457CC43E>104 D<137C48B4FC48138048
13C0A24813E0A56C13C0A26C13806C1300EA007C90C7FCAAEB7FC0EA7FFFA512037EB3AF
B6FCA518467CC520>I<EB7FC0B5FCA512037EB3B3B3A3B61280A519457CC420>108
D<90397F8007FEB590383FFF8092B512E0028114F8913987F03FFC91388F801F00039039
9F000FFE6C139E14BC02F86D7E5CA25CA35CB3A7B60083B512FEA5372D7CAC3E>110
D<EC1FFC49B512C0010714F0011F14FC90397FF80FFF9026FFC0017F48496C7F4848C7EA
3FE000078248486E7E49140F001F82A2003F82491407007F82A400FF1780AA007F1700A4
6C6C4A5AA2001F5E6D141F000F5E6C6C4A5AA26C6C6CEBFFE06C6D485B27007FF80F90C7
FC6DB55A010F14F8010114C09026001FFCC8FC312F7DAD38>I<90387F807FB53881FFE0
028313F0028F13F8ED8FFC91389F1FFE000313BE6C13BC14F8A214F0ED0FFC9138E007F8
ED01E092C7FCA35CB3A5B612E0A5272D7DAC2E>114 D<90391FFC038090B51287000314
FF120F381FF003383FC00049133F48C7121F127E00FE140FA215077EA27F01E090C7FC13
FE387FFFF014FF6C14C015F06C14FC6C800003806C15806C7E010F14C0EB003F020313E0
140000F0143FA26C141F150FA27EA26C15C06C141FA26DEB3F8001E0EB7F009038F803FE
90B55A00FC5CD8F03F13E026E007FEC7FC232F7CAD2C>I<EB01E0A51303A41307A2130F
A2131FA2133F137F13FF1203000F90B51280B7FCA4C601E0C7FCB3A3ED01E0A9150302F0
13C0137F150790393FF80F8090391FFC1F006DB5FC6D13FC01015B9038003FE023407EBE
2C>I<D97FC049B4FCB50103B5FCA50003EC000F6C81B3A85EA25EA25E7E6E491380017F
D901F713FE9138F807E76DB512C7010F1407010313FE9026007FF0EBFC00372E7CAC3E>
I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmbx12 17.28 24
/Ff 24 121 df<EF7FFF041FB512E04BB612FC030F81037F6F7E4AB5D8C0037F020701FC
C76C7E4A01E0EC1FF0023F0180147F4A90C748487EDAFFFC5C49498260495B5D5BA2495B
A3725BA2725B725BF13F8096C9FCAA0503B512FEBBFCA6D8000F01E0C7120184B3B3AF00
3FB6D8F803B71280A651647DE35A>12 D<140CEC7F80ECFFC04913E04913F015F85B5B49
13FC5BA24913F890B5FC4814F015E04814C0481400485B4813F814E04813804848C7FC48
5A13F013C06CC8FC123C12181E1C5EE551>19 D<EA01F8EA07FF4813804813C04813E048
13F0A2B512F8A214FCA314FEA27EA27E7E6C13BE6C133EEA01FCC7FCA2147CA514F8A3EB
01F0A2EB03E0A2EB07C0130F1480131FEB3F00137E13FE485A485A485A485A5B6C5A6CC7
FC173174E32D>39 D<16F04B7E1507151F153FEC01FF1407147F011FB5FCB7FCA41487EB
E007C7FCB3B3B3B2007FB91280A6395D74DC51>49 D<913801FFF8021FEBFFC091B612F8
010315FF010F16C0013F16F09026FFF80180489026C0003F13FE4890C7000F7FD807FC02
03148048486E14C048486E14E04981D83FF86F13F001FE6F13F8487E6E6E13FC80B56F13
FE80A319FF83A26C5BA26C5BA26C90C8FCEA07FCD800E04B13FE90C9FCA219FC5FA219F8
5F19F04D13E0A24D13C0198094B512004C5B604C5B4C5B4C5B604C90C7FC4C5A4C5A4C5A
4B13E04B5B4B5B4CC8FC4B5A4B5AED3FE04B48143F4B5A4A90C8FC4A5ADA07F8157E4A5A
4A5A4A5A4A5A02FEC912FE495A495A4948ED01FC4948150749B8FC5B5B90B9FC5A4818F8
5A5A5A5A5AA2BAFC19F0A4405D78DC51>I<B912F8A6D8000102C0CBFCB3B3B1F307E0A5
F30FC0A61B1FA31B3F1C80A21B7FA21BFFA262A262625013006262624FB5FC1907191F4E
B6FCBDFC63A553627AE161>76 D<BA12F8F1FFE01AFEF2FFC01BF01BFED800010280C76C
7F070714C0070080083F13F8080F7F747F747F8986897480A3757FA389A865A398B55AA2
6562655091C9FC64505B081F5B505B97B55A07071480077F49CAFC93B812F81BC050CBFC
A2747E932680000314E0DE007F13F8071F7F07077F737F7380738088747FA2747FA3747F
A988A91F0F76EC1F80A286A277133F741700748067746E13FEB96E6E485A093F9038FE07
F87590B55A09075D09015DE1003F5CD001FCC7FC71637AE178>82
D<91381FFFFC0103B612E0011F15FC017F15FF90B812C0489026F0003F13F04803077F6E
01017F707F486D6E7E8583717FA26C4982836C4982A238007FC0011FC8FC90C9FCA7047F
B5FC033FB6FC0203B7FC143F49B5EAF00F0107EBFE00011F13F0017F13C048B5C7FC4813
FC485B485B485B5C5A485BA291C8FCB5FCA45FA25F6C6D143B177B6C6D14F36EEB01E36C
6D0107806C6DD90FC313FF6C01FFD9FF8114FE00019126FFFE0114FF6C6C4A7E011F02F0
7F010302C0131F9026003FFCC7000313FE48407BBF4E>97 D<92380FFFFC4AB612E0020F
15FC023F15FF91B8128001039026FE000713C04901F015E0011F01C05B4990C7FC49484A
13F0495A485B5A5C487013E0485B7113C0485B0501130048EE007C95C7FCA2485BA4B5FC
AC7EA280A27EA36C7F19FC7E806CEF01F86C7F6EED03F06C6D15076CEF0FE06D6C6CEC1F
C06D6DEC3F806D6DEC7F00010701FCEB01FE6D9039FF801FFC010091B55A023F15E0020F
1580020102FCC7FCDA000F13C03E407BBF48>99 D<F17FF8050FB5FCA6EF000F8484B3A9
ED0FFF4AB512F0020F14FE023FECFF8391B712E301039138007FF34901F0EB07FB011F01
C00101B5FC49497F4948C8123F49488148498148835C485B5AA2485BA25AA3485BA4B5FC
AC7EA47E80A27EA27E807E6E5D6C5F6C6D5D6C6D5D6E92B5FC6D6C5C011F6D0107806D01
E0D91FF77F6D01FCD9FFE7EBFFFE010190B612876D6CECFE07021F14F8020314C0913900
1FFE004F647BE35A>I<92381FFFC04AB512FE020F6E7E027F15F091B77E0103D9FE0113
FE010F9039F0003FFF4901C0010F7F4990C76C7F494802017F49488248498048496F7E85
485B48717EA24849151F855AA34849811A80A3B5FCA291B9FCA31A000280CBFCA67EA380
7EA36C7F190F6CF01F806C7F193F6C6D17006C606C6D16FE6D6C4B5A6D6C4B5A6D01C0EC
0FF06D01F0EC3FE06D01FCECFFC001019026FFC00F5B6D91B6C7FC023F15FC020715F002
001580030701F0C8FC41407CBF4A>I<F107F0DB7FFCEC3FFC020FB500E090B5FC027FEC
FC0349B7000F14800107D9E00FEBDFF149D90001D9FF0113C049486D13FCD97FFC147F4A
143F4948DA1FFE148048717E1B0048F0803C4A6E91C7FC4884A24884A96C60A26C606E5C
6C95C8FCA26C5F6D6C4A5A6E147FD91FFEECFFF06D6C495B49D9E00F5B013D90B6C9FCD9
787F14FC020F14E09027F8007FFCCAFC92CCFCA21201A47F7FA26D7E14E091B77E18FC6C
EFFF8019F06D17FC19FF6D846D8486010784011F84137F48BA7E000701C0C8FC4890C900
077F484816014848EE007F49173F007F727E5B00FF84A66C6C4D5AA26C6C4D5AA26C6C4D
5A6C6C4D5A6C6D4B5B6C01E003075B6C01F8031F5B6C6CB4DBFFFEC7FC011F01F0010F13
F8010790B712E0010094C8FC020F15F0DA003F01FCC9FC4A5E7CC051>103
D<903807FF80B6FCA6C6FC7F7FB3A9EF0FFF94B512F0040314FC040F14FF043F8193267F
C03F7F9326FE000F7FDB81F86D7FED83E0DB87C06D7FED8F8093C780039E8015BC03B882
15F85DA25DA45DB3B2B7D8F007B71280A651647BE35A>I<EB0FE0EB3FF8497E497E487F
4880A24880A76C5CA26C91C7FC6C5B6D5A6D5AEB0FE090C9FCB0903807FF80007FB5FCA6
C6FC7F7FB3B3ADB712C0A622657BE42C>I<903807FF80B6FCA6C6FC7F7FB3B3B3B3ADB7
12E0A623647BE32C>108 D<902607FF80D90FFFEE7FF8B691B500F00207B57E040302FC
021F14E0040F02FF027F14F8043F6F48B67E93267FC03F9027C003FE017F9326FE000F90
3BE007F0007FFFC6DA81F86D9026F00FC06D7F6DD983E04CC7FC6DD987C06DD9F83E6E7F
DB8F805E93C7DAFC7882039E6E4A8003BCEEFDE003B8DCFFC08215F84B5FA24B94C8FCA4
4B5EB3B2B7D8F007B7D8803FB612FCA67E407BBF89>I<902607FF80EB0FFFB691B512F0
040314FC040F14FF043F8193267FC03F7F9326FE000F7FC6DA81F86D7F6DEB83E06DD987
C06D7FED8F8093C780039E8015BC03B88215F85DA25DA45DB3B2B7D8F007B71280A65140
7BBF5A>I<923807FFE092B6FC020715E0023F15FC91B8FC010349C66C13C04901F0010F
7F011F0180010113F84990C87F49486F7E49486F7E48496F138048496F13C04A814819E0
4819F04A814819F8A24819FC4A81A24819FEA4B518FFAC6C19FEA46C6D4B13FCA36C19F8
A26C6D4B13F0A26C19E06E5D6C19C06C6D4B13806C6D4B13006D6C4B5A6D6C4B5A6D01C0
01035B6D01F0010F5B010301FE017F13C0010090B7C7FC023F15FC020F15F0020092C8FC
030713E048407CBF51>I<902607FF80EBFFF8B6010FEBFF80047F14F00381B612FC0387
15FF92268FFE0014C0DBBFE0011F7FC6DAFF806D7F6D91C7000313FC6D01FC6E7F4B6E7F
4B814B17804B6F13C0851BE0A27313F0A21BF885A21BFCA285A21BFEAC1BFC61A31BF8A2
611BF0A24F13E0A24F13C01B806F5D6F92B512006F4A5B6F4A5B6F4A5B6F6C495B04E001
3F13C09226CFFC01B55A03C7B648C7FC03C115F8DBC07F14E0041F91C8FC040113E093CB
FCB3A4B712F0A64F5C7BBF5A>I<D90FFFEB07F8B6EB3FFF4C13C04BB512F04B14F89239
07F87FFCED0FE0C6923880FFFE6D495A6DD91E0113FF153CA21578A24B6C13FEA24BEB7F
FCA2EF1FF04BEB07C094C7FCA45DB3B0B712F8A638407BBF42>114
D<913A3FFF8007800103B5EAF80F011FECFE3F017F91B5FC48B8FC48EBE0004848C7120F
D80FF814034848804980003F167F49153F127FA200FF161FA27FA213F86D92C7FC13FF14
F06CEBFF8015FEEDFFE06C15FCEEFF806C16E06C826C16FC6C826C826C6C1680131F0107
16C0010116E0EB001F020015F01503ED003F040713F8007C150100FC81177F6C163FA217
1F7E18F07FA26D16E06D153F7F6DED7FC06DEDFF8001FF5C02C00107130002F8EB7FFE01
9FB612F8010F15E0D8FC03158048C66C49C7FC48010713C035407BBF40>I<EC07E0A614
0FA5141FA3143FA2147FA214FF5BA25B5B5B5B137F48B5FC000F91B512FEB8FCA5D8001F
01E0C8FCB3AFEF0FC0AC6DED1F80A2816DED3F00816D157E6D6D5B6DEBFF036EEBFFF86E
5C020F14C0020191C7FC9138001FFC325B7DDA3F>I<902607FFC0ED3FFEB60207B5FCA6
C6EE00076D826D82B3B360A360A26D5E181E181C6D163C6F14F86D4B487F6D01F8D907E0
8003FED93FC0ECFF80010090B65A6E5D021F14FC020314F0DA003F138051407BBF5A>I<
007FB600C0017FB512F8A6D8000F01F8C70007EBE000060090C7FC6D6D4A5A6D6D4A5A6D
6D4A5A6D6E495A4E5A6E6D5C6E6D133F6E6D495A6E6D49C8FC4D5A6E6D485A6E6D485A6E
01FF5B6E148FEF9FE06FEBFFC06F5C6F91C9FC6F5B5F816F7F6F7F6F80A2707F8493B57E
4B805D4B80DB0FF37FDB1FE17F04C180ED3FC04B486C7F4B486C7F4A486D7F4A48814A48
7F4B6D7F020F6E7F4A486D7F4A48824A487F4AC86C7F49486F7F4A6F7F010384D93FFF81
B600F00103B7FCA650407EBF55>120 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmcsc10 12 4
/Fg 4 110 df<DB03FF140C033F01F0131C4AB500FC133C91390FFE007FDA1FF090380F
C07CDA7F80903803E0FC4948C812F0D903FC15794948153FD91FF0151F4948150F494815
074A150349C9FC48481601120349160012074848177CA24848173CA2123FA249171C127F
A319005B12FFAC127F7FA2191CA2123F7FA2001F183C19386C7EA26C6C1778000318706D
17F0000118E06C6C16016D6C16C06E15036D6CED07806D6CED0F00D907F8151E6D6C5D6D
B45D6D6C6C495ADA1FF0EB07C0DA0FFEEB7F800201B500FEC7FCDA003F13F0030313803E
4879C54E>67 D<157015F8A34A7EA24A7EA34A7E81A291380E3F80A2021E7FEC1C1FA24A
6C7EA34A6C7EA202F07FECE003A249486C7EA349486C7EA201078091C77EA249B67EA249
81011CC7121FA2013C810138140FA2496E7EA201F081491403120183486C140100074B7E
D81FF84A7EB5027F13F8A335357CB43D>97 D<B512FEA3000390C9FCEA01FCB3A9EE01C0
A416031780A41607A2160F161FA2167FEEFF00486C1307B8FCA32A337BB233>108
D<D8FFFEEE7FFFA26D93B5FC000318C06C1880D9DF80EC01DFA2D9CFC0EC039FA3D9C7E0
EC071FA2D9C3F0140EA3D9C1F8141CA2D9C0FC1438A3027E1470A26E14E0A391391F8001
C0A291390FC00380A3913907E00700A2913803F00EA36E6C5AA26E6C5AA3ED7E70A26F5A
A3486C6D5A487ED81FFC6D48EB3FC0B50080020FB5FCA2ED070040337BB24A>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmr12 12 47
/Fh 47 124 df<4AB4FC020F13C091383F00F002FC1338D901F0130C4948131E4948133E
4948137F011F5C49C7FCA2013E147E017E143C93C7FCAD167FB8FCA3D8007EC7FC8282B3
B001FFEC7F80007FD9FC1FB5FCA330467EC536>12 D<EA01FC127FA3120312011200B3B0
487EB512F8A3152C7EAB1B>16 D<127812FCA27E7E6C7E123FEA0FC06C7E6C7E12016C7E
137C7F130E7FEB0380EB0100111275C431>18 D<130FEB1F80A2133F137FEBFF005BEA01
F8485A485A5B485A48C7FC123E12385A5A124011126CC431>I<02FFED7F80010701E090
3803FFE090261F80F8903807C1F890263E003C90381E007C49010F497F496D6C487F4848
6D6C4814804848DAE1E0EB0FC00007EC01E34848DAF3C0EB07E0001FEC00FF4918F0003F
6F5A1903A248C816F870C7FCA25AA294B6FCA294C9FCA67E836D147F123FA2711418001F
15FF7F000F912601F3E014306C6C14E10003912603E0F014606C6C4A6C14C06C6C902607
807CEB0180017C90260F001EEB03006D013C6D130E90261F80F8903807E03C902607FFE0
903801FFF0010090C8EA3FC0452E7DAC4C>27 D<121E123FEA7F80EAFFC0A313E0127FEA
3F60121E1200A513C0A4EA0180A2EA0300A212065AA25A5A12200B1D78C41B>39
D<1406140E14181430147014E0EB01C0EB0380EB0700A2130E5B133C133813785BA2485A
A2485AA212075BA2120F90C7FCA25A121EA2123EA3123C127CA6127812F8B21278127CA6
123C123EA3121EA2121F7EA27F1207A27F1203A26C7EA26C7EA213781338133C131C7F7F
A2EB0380EB01C0EB00E0147014301418140E1406176477CA26>I<7E7E12607E12387E7E
7E6C7EA26C7E6C7E7F137013787FA27FA27FA214801307A214C01303A214E01301A214F0
A3130014F8A61478147CB2147814F8A614F01301A314E0A2130314C0A213071480A2130F
1400A2131EA25BA25B137013F05B485A485AA248C7FC120E5A5A12305A5A5A16647ACA26
>I<121E123FEA7F80EAFFC0A313E0127FEA3F60121E1200A513C0A4EA0180A2EA0300A2
12065AA25A5A12200B1D78891B>44 D<B612C0A51A057F9721>I<121E123FEA7F80EAFF
C0A4EA7F80EA3F00121E0A0A78891B>I<143014F013011307131F13FFB5FC13E7130712
00B3B3AF497E497E007FB6FCA3204178C031>49 D<EB03FE90381FFFC0017F13F03901F8
0FFC3903C001FE48C7127F000EEC3F80000CEC1FC04815E048EC0FF0A248EC07F8A2127C
00FE15FC7E6D1303A46CC71207123EC813F8A3ED0FF0A216E0151F16C0153F1680ED7F00
157E5D4A5A5D4A5A4A5A4A5A4AC7FC141E5C5C5C495A495A495A91C7120C130E5B491418
5B5B485A49143848C8123000061570000FB612F05A5A5AB712E0A326417BC031>I<49B4
FC010F13F0013F13FC9038FE01FE3901E0007FD80380EB3F8048C7EA1FC0000EEC0FE0D8
0F8014F0EA1FE016F86D1307A36C5AA2D80380130FC813F0A3ED1FE016C0A2ED3F801600
157E5DEC03F0EC1FC0D90FFFC7FC15F090380001FCEC007EED1F8016C0ED0FE0ED07F016
F8150316FC16FE1501A216FFA3121E123F487E487EA216FEA24913036CC713FC127E0070
EC07F8003015F06C140F000E15E06CEC1FC0D803E0EB7F803A01FC01FE0039007FFFFC01
1F13E0010190C7FC28427CC031>I<EC07F8EC3FFF91B51280903903FC03C0903907E000
E0D90F80133090391F0001F0013EEB03F84913075B1201485A49EB03F00007EC01E0000F
91C7FC5B121FA25B123FA3127F90C9FCEC7F80903801FFF039FF0780FC90380E003E0118
130F49EB078016C049EB03E04914F0ED01F8A24914FC150016FEA290C8FC16FFA27EA66C
7EA216FE121FA2ED01FC6C7E16F8000714036C6C14F06DEB07E0000115C06C6CEB0F8001
7EEB3F0090383F80FE90380FFFF86D5B0100138028427CC031>54
D<121E123FEA7F80EAFFC0A4EA7F80EA3F00121EC7FCB3A5121E123FEA7F80EAFFC0A4EA
7F80EA3F00121E0A2B78AA1B>58 D<DB0FFE146092B512C0020302F013E0913A1FFC01FC
0191393FC0001E02FFC7EA0703D901FCEC0387D907F0EC00C74948156F4948153F494815
1F49C9120F13FE000117075B484816031207491601120F491600121FA2123F491760A212
7FA219005B12FFAC127F7FA21960123FA27F121FA26C6C17C0A212076DEE018012036C6C
16036D170000001706137F6D6C5D6D6C5D6D6C5D6D6C5DD901FC4A5A6DB4EC0780DA3FC0
011FC7FCDA1FFC13FC0203B55A020014C0DB0FFEC8FC3B467BC446>67
D<B612F8A3000101E0C9FC6C5B6D5AB3B31830A418701860A518E0A3EF01C0A217031707
A2170F173F177F01FFEC01FF486D011F1380B9FCA334447CC33D>76
D<ED1FFC4AB512C091390FF007F891393F8000FE027EC7123FD901F8EC0FC049486E7ED9
0FE0EC03F849486E7E49486E7E49C9127F01FE707E49161F0001844848707EA24848707E
000F84491603001F84A2491601003F84A3007F844982A300FF1980AC007F19006D5EA400
3F606D1603A2001F606D1607000F60A26C6C4C5AA26C6C4C5A0001606C6C4C5A6D167F6D
94C7FC6D6C15FE6D6C4A5A6D6C4A5AD903F0EC07E0D901FCEC1FC0D9007E4AC8FC6E6C13
FE91390FF007F80201B512C09126001FFCC9FC41467BC44C>79 D<B712FCEEFFC017F800
019039C0000FFE6C49EB01FF017F9138007F80EF1FE0170FEF07F018F8EF03FCA218FE17
01A218FFA718FEA2170318FCA2EF07F818F0EF0FE0EF1FC0EF7F80933801FE00EE0FFC91
B612F017800280C9FCB3A9497E487FB612C0A338447CC342>I<49B41303010F13E0013F
EBF8079038FE00FCD801F0EB1F0F4848EB079F4848EB01DF48486DB4FC48C87E001E8112
3E007E81127C8212FC82A46C81A37E6C6C91C7FCA2EA3FE07FEA1FFEEBFFE06C13FE6CEB
FFE06C14FC6C14FF6C15C0013F80010F80010180D9001F7F02017F9138001FFF15030300
1380167FEE3FC0161FA2EE0FE0124012C01607A47EA217C07E160F6C1680A26CED1F006C
151E6C153ED8FBC05CD8F9F05CD8F07CEB03F03AE03FC00FE0010FB51280D8C00349C7FC
9038003FF02B467BC436>83 D<003FB912E0A3903BF0003FF0007F01806D48130F003EC7
150348EF01F00078170019701270A219301260A5481818A5C81600B3B3A54B7EEDFFFC01
03B7FCA33D447CC346>I<130C131E133F497EEBF3C03801E1E03803C0F0380780784848
7E001E7F487F0070EB038048EB01C00040EB00801A0E75C331>94
D<EB07F8EB3FFF9038F80FC03901C003E048C66C7E00066D7E48147CD80F80137E486C13
3E6D133F8182A26C5A6C5AC8FCA4EC0FFF49B5FC90380FFC1FEB3FC0EBFF00EA03FCEA07
F0485A121F485A5B127F176048C7FCA4153FA26C146F7F003F9138C7C0C0391FC001873B
0FE00307E1803A07F81E03FF2701FFFC0113003A001FE0007C2B2E7CAC31>97
D<EA01FC12FFA3120312011200B3EC01FC91380FFF8091383E07E091387000F802C0137C
D9FD807F01FFC77EEE0F804915C049EC07E017F0160317F8A217FC1601A317FEA917FCA2
1603A217F8A2EE07F017E07FEE0FC001FBEC1F801700D9F180133ED9F0C05B9039E06001
F891383C07E09039C01FFF8090260003FCC7FC2F467DC436>I<EC7F80903803FFF09038
0FC07C90383E000E49130349EB01804848EB00C0000314074848EB0FE04848131FA2121F
5B003FEC0FC0ED0780007F91C7FC90C9FCA25AAA7EA27FA2123F16306C7EA2000F15606C
7E6C6C14C00001EC01806C7E017CEB07006D130E90381FC078903807FFF001001380242E
7DAC2B>I<16FE157FA315011500167EB3EC7F80903803FFF090380FC07890383F000C01
7C13064913034848EB01FE00031400485A4848147EA2121F485AA2127FA290C8FCA25AA9
7EA37F123FA2121F7F000F15FE6C7E000314016C6CEB037E6C6C147F017C010E13806D01
1C13FE90380FC0F0903803FFE09026007F0013002F467DC436>I<EB01FE903807FFC090
381F03F090387C00F849137C48487F48487F0007158049130F000F15C0121F4914E0003F
1407A2127F90C713F0A35AA290B6FCA290C9FCA67EA36C7EA21630121F7F000F15606C7E
000315C06C6CEB01806C6CEB0300017C13066D131C90380FC078903803FFE09038007F80
242E7DAC2B>I<EC1FC0EC7FF0ECF038903803E07C903807C0FC90380F81FEA2EB1F0190
383F00FCA2013E1330017E1300B0B61280A3D8007EC7FCB3B1137F497E007FEBFF80A31F
467EC51E>I<D901FCEB1FC0903A0FFF807FE0903A3F07E1E1F090397C01F7819039F800
FE01484890387C00E048486D13000007143FA248486D7EA2001F81A7000F5DA26C6C49C7
FCA20003143E6C6C5B6C6C5B486C485A39033F07E090380FFF80260701FCC8FC0006CAFC
A3120E120F7EA27F13E06CB512F86CECFF806C15E06D14F848B67E3A07E0000FFED80F80
EB00FF001EC8123F003EED1F8048150F17C0481507A6007CED0F80A26CED1F006C153E6C
6C5CD807E0495AD801F8EB07E0D8007FEB3F8090261FFFFEC7FC010113E02C417DAB31>
I<EA01FC12FFA3120312011200B3EC01FE913807FF8091381E07E091383801F002607FEC
C000D9FD807F167C01FFC7FC167E5BA35BB3A9486C14FFB5D8FC7F13FEA32F457DC436>
I<13E0EA03F8487EA66C5AEA00E090C7FCADEA01FC127FA3120312011200B3B0487EB512
F8A315437EC21B>I<14F0EB01F8EB03FCEB07FEA4EB03FCEB01F8EB00F01400AD14FE13
7FA313011300147EB3B3AB003C137C127EB413FC14F8A238FE01F0007E13E0383803C038
1E0780380FFF00EA01FC175783C21E>I<EA01FC12FFA3120312011200B3B3B3A5487EB5
12FCA316457EC41B>108 D<2701FC01FEEC7F8000FF903B07FFC001FFF0913B0E03F003
80FC913B3800F80E003E0003495C000101C0D97C307F0000037E81D9FD805C01FFC7D83E
C0130F043F81495DA34992C7FCB3A9486C4A6C497EB5D8FC3FB5000FB512C0A34A2C7DAB
51>I<3901FC01FE00FF903807FF8091381E07E091383801F0000301607F0001EBC00026
00FD807F167C01FFC7FC167E5BA35BB3A9486C14FFB5D8FC7F13FEA32F2C7DAB36>I<EC
7F80903803FFF090380FC0FC90383E001F496D7E496D7E48486D7E48486D7E48486D7E00
0F81A24848147E003F157FA290C87E481680A44816C0AA6C1680A26D147F003F1600A200
1F157E6D14FE000F5D6D130100075D6C6C495A6C6C495A6C6C495A013E49C7FC90381FC0
FE903807FFF89038007F802A2E7DAC31>I<3901FC01FC00FF90380FFF8091383E07E091
387001F800039038C0007C2601FD807F6CB4C7123FEE1F8049EC0FC04915E0EE07F0A217
F8160317FCA3160117FEA917FC1603A317F8160717F0EE0FE07FEE1FC06D1580EE3F00D9
FD80137ED9FCC05B91386001F891383C0FE091381FFF80DA03FCC7FC91C9FCAE487EB512
FCA32F3F7DAB36>I<91387F8006903903FFE00E90380FE07890383F001C017EEB061E5B
4848EB033E4848EB01BE12074848EB00FEA2485A003F157E5B127FA390C8FC5AA97E7FA3
123F7F121F16FE6C7E000714016C7E6C6CEB037E00001406017C130C013F131890380FC0
F0903803FFE09038007F0091C7FCAE16FF037F13FEA32F3F7DAB33>I<3901F807E000FF
EB1FF8EC383CEC607E0003EBC0FF12013800F980EBFB00157E153C01FE1300A45BB3A77F
487EB6FCA3202C7DAB26>I<90383FE0303801FFF83907C01E70390F0007F0001C130148
1300A2481470A212F01530A37E7E007E1400EA7F80EA3FF0EBFF806C13F86C13FE0003EB
FF806C14C0D8003F13E0010313F09038001FF81403EC00FC0040147C00C0147E153E7E15
1EA37E151C7E153C6C14386C147000FB14E039F18001C039E0F00F8039C07FFE00EB0FF0
1F2E7DAC26>I<1306A5130EA4131EA3133E137EA213FE12011207001FB512F0B6FCA2D8
007EC7FCB3A4150CAA133E013F1318A27F90380F803001071360903803E0C0903801FF80
9038003F001E3E7EBC26>I<D801FC14FE00FF147FA300031401000114000000157EB3A9
16FEA3017C1301A2017EEB037E013E147F011E010613806D011C13FE903807C078903803
FFE09026007F8013002F2D7DAB36>I<B539E001FFFCA3D807FEC7EA7FE0D801FCEC1F80
17000000150E160CA2017E5CA2017F14386D1430A26D6C5BA26E13E0010F5CA26D6C485A
A36D6C48C7FCA26E5A01011306A26D6C5AA2ECFE1CEC7E18A26E5AA3EC1FE0A36E5AA26E
5AA36EC8FC2E2C7EAA33>I<3B7FFFF007FFFCA30001D9800113C06C90C7EAFE006D147C
6D14706D6C5B6D6C5BECE0010107495AD903F090C7FCECF806903801FC0E01005BEC7E18
EC7F30EC3F706E5A6E5A811407814A7EEC0DFC1418EC387E4A7E02607FECC01F01016D7E
D903807F4A6C7E01061303496D7E011C80013C1300017C147ED801FC14FFD80FFE4913C0
B5D8800713FFA3302B7FAA33>120 D<B539E001FFFCA3D807FEC7EA7FE0D801FCEC1F80
17000000150E160C6D141C017E1418A26D5CA26E1370011F1460A26D6C5BA2800107495A
A2ECF003010391C7FCA2903801F806A2ECFC0E0100130CA2EC7E18A2EC7F38EC3F30A2EC
1FE0A36E5AA26E5AA36EC8FCA21406A35CA2141C1418A200385B127C00FE5BA25C130138
7C0380D87007C9FCEA3C1EEA1FFCEA03F02E3F7EAA33>I<B9FCA23002809B31>123
D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: a4

%%EndSetup
%%Page: 1 1
1 0 bop Black 0 84 a Fh(Corrig)m(\023)-46 b(e)33 b(TP6)g
Fg(Caml)1818 b Fh(Plus)33 b(grand)g(pr)m(\023)-46 b(e\014xe)34
b(comm)m(un)p 0 124 3820 4 v Black 0 407 a Ff(1)161 b(Liste)54
b(d'asso)t(ciation)0 626 y Fe(1.)p Black Black 0 781
a Fd(let)e(rec)g(appartient)i(a)e(=)f(function)103 901
y([])g(->)h(false)0 1021 y(|)g(\(x,_\)::q)h(->)f(x=a)g(||)g(appartient)
i(a)d(q)0 1142 y(;;)0 1346 y Fe(2.)p Black Black 0 1501
a Fd(let)h(rec)g(recherche)i(a)d(=)h(function)103 1621
y([])f(->)h(failwith)i("objet)e(absent")0 1742 y(|)g(\(x,b\)::q)h(->)f
(if)g(x=a)g(then)g(b)718 1862 y(else)g(recherche)i(a)d(q)0
1982 y(;;)0 2187 y Fe(3.)p Black Black 0 2342 a Fd(let)h(rec)g(change)h
(a)f(b)f(l)h(=)f(function)256 2462 y([])h(->)g([\(a,b\)])154
2582 y(|)f(\(x,c\)::q)j(->)e(if)f(x=a)h(then)h(\(a,b\)::q)1230
2703 y(else)g(\(x,c\)::\(change_rec)j(q\))0 2823 y(;;)0
3240 y Ff(2)161 b(Rec)l(herc)l(he)51 b(du)i(plus)h(grand)f(pr)l(\023)
-77 b(e\014xe)52 b(comm)l(un)0 3488 y Fc(2.1)135 b(Con)l(v)l(ersion)46
b(c)l(ha)-15 b(^)-52 b(\020ne)46 b(de)f(caract)m(\022)-64
b(eres)46 b Fb($)e Fc(liste)j(de)d(caract)m(\022)-64
b(eres)0 3673 y Fe(4.)36 b Fh(On)h(construit)g(la)f(liste)h(dans)g
(l'ordre)f(in)m(v)m(erse)j(des)e(lettres)g(du)g(mot.)f(Si)h(on)f
(parcoure)h(le)f(mot)g(de)0 3793 y(gauc)m(he)31 b(\022)-49
b(a)29 b(droite,)h(il)g(faut)f(utiliser)i(la)f(concat)m(\023)-46
b(enation)30 b(de)g(liste)h(qui)f(est)h(plus)f(co)s(^)-51
b(uteuse)31 b(qu'un)f(simple)0 3914 y(a)5 b(jout)32 b(en)h(t)m(^)-46
b(ete.)p Black Black 0 4068 a Fd(let)52 b(char_list_of_string)k(s=)103
4189 y(let)c(n)f(=)h(string_length)i(s)e(in)103 4309
y(let)g(l)f(=)h(ref)g([])g(in)103 4430 y(for)g(i=1)g(to)f(n)h(do)205
4550 y(l:=)g(s.[n-i])h(::)f(!l;)103 4670 y(done;)103
4791 y(!l)0 4911 y(;;)0 5116 y Fe(5.)34 b Fh(Cette)i(solution)e(n'est)i
(s)s(^)-51 b(uremen)m(t)35 b(pas)f(la)g(moins)h(co)s(^)-51
b(uteuse)35 b(\022)-49 b(a)34 b(cause)i(de)e(la)g(concat)m(\023)-46
b(enation,)35 b(mais)0 5236 y(elle)e(est)h(simple)g(\022)-49
b(a)29 b(\023)-46 b(ecrire.)p Black Black 0 5391 a Fd(let)52
b(rec)g(string_of_char_list)k(=)c(function)205 5511 y([])g(->)g("")103
5631 y(|)f(c::q)h(->)g(\(string_of_char)j(c\)^\(string_of_char_list)j
(q\))0 5752 y(;;)p Black 1885 6180 a Fh(1)p Black eop
%%Page: 2 2
2 1 bop Black 0 84 a Fh(Corrig)m(\023)-46 b(e)33 b(TP6)g
Fg(Caml)1818 b Fh(Plus)33 b(grand)g(pr)m(\023)-46 b(e\014xe)34
b(comm)m(un)p 0 124 3820 4 v Black 0 407 a Fc(2.2)135
b(Utilisation)48 b(d'un)c(arbre)i Fa(n)p Fb(\000)p Fc(aire)0
592 y Fe(2.2.1)112 b(Rec)m(herc)m(he)38 b(dans)g(l'arbre)0
776 y(6.)p Black Black 0 931 a Fd(let)52 b(rec)g(plus_grand_prefixe)k
(=)c(function)205 1051 y(Noeud)h(\(Mot)f(m,_\))g(->)g(m)103
1172 y(|)f(Noeud)i(\(Prefixe)g(_,[c,a]\))g(->)f(plus_grand_prefixe)k(a)
103 1292 y(|)51 b(Noeud)i(\(Prefixe)g(m,_\))f(->)g(m)0
1412 y(;;)0 1567 y Fh(On)37 b(part)g(de)h(la)f(racine)h(de)g(l'arbre)g
(et)f(on)h(descen)m(t)h(tan)m(t)e(qu'il)i(n'y)f(a)f(qu'un)h(seul)h
(\014ls.)f(On)f(s'arr)m(^)-46 b(ete)0 1688 y(quand)34
b(on)g(rencon)m(tre)g(un)g(mot,)f(ou)h(bien)g(quand)g(il)g(n'y)g(a)f
(plus)h(de)g(\014ls)g(\(une)h(feuille\),)f(ou)f(qu'il)i(y)e(en)0
1808 y(a)f(au)h(moins)g(deux)h(\(un)f(em)m(branc)m(hemen)m(t\).)0
1978 y Fe(7.)p Black Black 0 2133 a Fd(let)52 b(rec)g
(arbre_prefixe_liste)k(=)c(fun)51 2253 y(|)g([])g(a)f(->)h(a)51
2374 y(|)g(\(c::l\))h(\(Noeud)g(\(e,fils\)\))g(->)f(if)g(\(appartient)i
(c)e(fils\))g(then)1692 2494 y(arbre_prefixe_liste)k(l)c(\(recherche)i
(c)d(fils\))1538 2614 y(else)h(failwith)i("ce)e(n'est)g(pas)g(un)g
(pr\023)-51 b(efixe")0 2735 y(;;)0 2855 y(let)52 b(arbre_prefixe)j(s)c
(a)h(=)f(arbre_prefixe_liste)57 b(\(char_list_of_string)f(s\))c(a;;)0
3010 y Fh(On)41 b(lit)g(le)g(mot)g(lettre)g(par)g(lettre)g(et)g(on)g
(rec)m(herc)m(he)j(\022)-49 b(a)40 b(c)m(haque)g(\023)-46
b(etap)s(e)41 b(le)g(\014ls)h(corresp)s(ondan)m(t)g(\022)-49
b(a)40 b(la)0 3130 y(lettre)33 b(lue.)g(On)g(ren)m(v)m(oie)h(l'arbre)f
(couran)m(t)g(lorsqu'il)h(n'y)f(a)g(plus)g(de)g(lettre)g(\022)-49
b(a)32 b(lire.)0 3300 y Fe(8.)p Black Black 0 3455 a
Fd(let)52 b(complete)h(a)f(p=)g(plus_grand_prefixe)k(\(arbre_prefixe)f
(s)c(p;;)0 3610 y Fh(On)31 b(se)h(place)f(d'ab)s(ord)g(sur)h(l'arbre)f
(des)h(mots)f(qui)h(commence)h(par)e(le)g(pr)m(\023)-46
b(e\014xe)32 b Fd(p)p Fh(,)g(puis)g(on)e(rec)m(herc)m(he)0
3730 y(le)j(plus)g(grand)g(pr)m(\023)-46 b(e\014xe)34
b(comm)m(un)g(de)f(ce)g(sous-arbre.)0 3900 y Fe(9.)p
Black Black 0 4055 a Fd(let)52 b(rec)g(concat_list)i(=)e(function)154
4175 y([])g(->)f([])103 4296 y(|l::q)h(->)g(l@\(concat_list)j(q\))0
4416 y(;;)0 4657 y(let)d(rec)g(liste_noms)i(=)e(function)154
4777 y(Noeud)g(\(Prefixe)i(_,l\))e(->)g(concat_list)i(\(map)e(\(fun)h
(\(c,a\))f(->)g(liste_noms)i(a\))e(l\))51 4898 y(|)g(Noeud)g(\(Mot)h
(m,l\))f(->)g(m::\(concat_list)j(\(map)d(\(fun)h(\(c,a\))f(->)g
(liste_noms)i(a\))e(l\)\))0 5018 y(;;)0 5259 y(let)g
(trouve_complements)k(a)c(p)f(=)h(liste_noms)i(\(arbre_prefixe)h(s)c
(p\);;)0 5414 y Fh(La)32 b(fonction)g Fd(liste)p 779
5414 31 4 v 39 w(noms)h Fh(ren)m(v)m(oie)h(la)e(liste)h(des)g(noms)g
(pr)m(\023)-46 b(esen)m(ts)35 b(dans)e(un)f(arbre.)h(La)f(fonction)g
Fd(map)0 5534 y Fh(de)h Fg(Caml)h Fh(applique)f(une)h(fonction)e(\022)
-49 b(a)33 b(tous)g(les)d(\023)-46 b(el)m(\023)g(emen)m(ts)35
b(d'une)e(liste)h(et)f(ren)m(v)m(oie)h(la)e(liste)i(image.)0
5654 y(P)m(our)j(la)g(fonction)f Fd(trouve)p 1046 5654
V 39 w(complements)p Fh(,)j(on)e(se)g(place)h(dans)f(le)g(sous-arbre)g
(des)h(mots)f(qui)g(com-)0 5775 y(mencen)m(t)d(par)f
Fd(p)g Fh(et)g(on)f(app)s(elle)h Fd(liste)p 1488 5775
V 39 w(noms)p Fh(.)p Black 1885 6180 a(2)p Black eop
%%Page: 3 3
3 2 bop Black 0 84 a Fh(Corrig)m(\023)-46 b(e)33 b(TP6)g
Fg(Caml)1818 b Fh(Plus)33 b(grand)g(pr)m(\023)-46 b(e\014xe)34
b(comm)m(un)p 0 124 3820 4 v Black 0 407 a Fe(2.2.2)112
b(Construction)37 b(de)h(l'arbre)0 592 y(10.)k Fh(P)m(our)g(all)m(\023)
-46 b(eger)43 b(le)f(programme,)g(on)g(utilise)h(cette)f(p)s(etite)h
(fonction)f(qui)g(ren)m(v)m(oie)i(la)d(c)m(ha)-11 b(^)-38
b(\020ne)43 b(de)0 712 y(caract)m(\022)-46 b(eres)34
b(d'une)d(\023)-46 b(etiquette)33 b(:)p Black Black 0
867 a Fd(let)52 b(nom_etiquette)j(=)c(function)205 987
y(Mot)h(s)g(->)f(s)103 1107 y(|)g(Prefixe)i(s)f(->)g(s)0
1228 y(;;)0 1382 y Fh(Lorsque)33 b(qu'il)f(n'y)h(a)e(plus)i(de)f
(lettres)g(\022)-49 b(a)32 b(lire,)g(on)f(transforme)h(l')m(\023)-46
b(etiquette)34 b(couran)m(te)e(en)g(un)g(mot)g(:)g(le)0
1503 y(mot)h(\022)-49 b(a)32 b(ins)m(\023)-46 b(erer)34
b(existait)f(d)m(\023)-46 b(ej\022)d(a)33 b(dans)g(l'arbre)g(ou)d(\023)
-46 b(etait)32 b(un)h(pr)m(\023)-46 b(e\014xe)34 b(de)f(certains)h
(mots)f(de)g(l'arbre.)0 1623 y(Sinon,)40 b(p)s(our)f(c)m(haque)h
(lettre)g(du)g(mot)f(\022)-49 b(a)39 b(ins)m(\023)-46
b(erer,)40 b(on)f(regarde)h(si)f(le)h(n\033ud)g(couran)m(t)f(p)s(oss)m
(\022)-46 b(ede)41 b(d)m(\023)-46 b(ej\022)d(a)0 1744
y(une)33 b(branc)m(he)e(\023)-46 b(etiquett)m(\023)g(ee)35
b(par)d(cette)h(lettre)h(:)p Black 0 1864 a({)p Black
49 w(si)f(oui,)h(on)f(con)m(tin)m(ue)i(l'insertion)f(sur)g(le)g(\014ls)
g(corresp)s(ondan)m(t)g(en)g(mo)s(di\014an)m(t)g(ce)g(\014ls)g(\022)-49
b(a)33 b(l'aide)g(de)h(la)98 1984 y(fonction)e Fd(change)i
Fh(et)f(d'un)g(app)s(el)g(r)m(\023)-46 b(ecursif,)p Black
0 2105 a({)p Black 49 w(si)33 b(non,)f(on)h(ra)5 b(joute)33
b(un)g(nouv)m(eau)g(\014ls)h(au)e(n\033ud)h(couran)m(t)g(a)m(v)m(ec)h
(un)f(app)s(el)g(r)m(\023)-46 b(ecursif.)p Black Black
0 2277 a Fd(let)52 b(rec)g(insere_mot_liste)k(=)51 b(fun)103
2397 y(|)g(\(Noeud)i(\(e,fils\)\))h([])154 b(->)52 b(Noeud)g(\(Mot)h
(\(nom_etiquette)i(e\),fils\))103 2517 y(|)c(\(Noeud)i(\(e,fils\)\))h
(\(c::l\))e(->)461 2638 y(if)g(\(appartient)i(c)e(fils\))h(then)769
2758 y(let)f(arbre_c)h(=)f(recherche)h(c)f(fils)g(in)769
2879 y(let)g(nouveau_arbre_c)j(=)d(\(insere_mot_liste)k(arbre_c)d(l\))f
(in)769 2999 y(\(Noeud)h(\(e,change)h(c)d(nouveau_arbre_c)k(fils\)\))
461 3119 y(else)769 3240 y(let)d(prefixe)h(=)f(\(nom_etiquette)j
(e\)^\(string_of_char)h(c\))c(in)769 3360 y(let)g(arbre_c)h(=)f(Noeud)g
(\(Prefixe)i(prefixe,[]\))g(in)769 3480 y(Noeud)104 b
(\(e,\(c,insere_mot_liste)57 b(arbre_c)c(l\)::fils\))0
3601 y(;;)0 3842 y(let)f(insere_mot)i(a)e(s)f(=)h(insere_mot_liste)j(a)
d(\(char_list_of_string)k(s\);;)0 4063 y Fe(11.)p Black
Black 0 4218 a Fd(let)c(rec)g(construit_arbre)j(=)d(function)205
4338 y([])g(->)g(Noeud)g(\(Prefixe)i("",[]\))103 4459
y(|)d(s::l)h(->)g(insere_mot)i(\(construit_arbre)i(l\))51
b(s)0 4579 y(;;)p Black 1885 6180 a Fh(3)p Black eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
